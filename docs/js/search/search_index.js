var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractConfigService.html",[0,0.245,1,3.028]],["body/classes/AbstractConfigService.html",[0,0.379,1,5.456,2,6.026,3,0.211,4,0.211,5,0.185,6,7.014,7,6.026,8,0.379,9,1.248,10,7.641,11,6.075,12,7.014,13,1.072,14,6.026,15,1.166,16,0.015,17,0.35,18,0.94,19,2.554,20,1.072,21,0.819,22,2.237,23,3.709,24,3.709,25,0.211,26,0.014,27,0.014]],["title/components/AppLoaderComponent.html",[28,0.48,29,1.085]],["body/components/AppLoaderComponent.html",[0,0.25,3,0.139,4,0.139,5,0.122,8,0.25,9,0.96,13,1.289,15,0.77,16,0.016,17,0.355,18,0.621,20,0.96,21,0.892,25,0.139,26,0.01,27,0.01,28,0.755,29,1.83,30,1.503,31,0.802,32,1.25,33,1.25,34,1.25,35,7.369,36,6.382,37,3.977,38,1.444,39,1.776,40,4.361,41,1.023,42,2.521,43,1.543,44,2.255,45,5.947,46,1.696,47,6.125,48,1.696,49,5.396,50,0.538,51,5.396,52,7.081,53,7.081,54,4.676,55,1.983,56,2.092,57,2.09,58,1.23,59,3.444,60,2.52,61,5.396,62,0.432,63,3.977,64,3.977,65,1.281,66,3.977,67,2.942,68,0.692,69,3.977,70,3.977,71,1.696,72,0.54,73,1.477,74,1.357,75,1.25,76,3.977,77,1.853,78,1.542,79,1.611,80,3.977,81,1.302,82,6.125,83,3.093,84,3.977,85,6.125,86,2.299,87,1.477,88,2.831,89,3.842,90,3.977,91,3.977,92,3.977,93,3.977,94,3.977,95,3.977,96,2.299,97,1.686,98,2.159,99,1.948,100,1.686,101,1.477,102,3.977,103,2.299,104,2.274,105,2.482,106,1.948,107,2.288,108,1.686,109,2.168,110,2.622,111,1.542,112,1.611,113,1.611,114,1.023,115,1.302,116,2.514,117,1.686,118,2.168,119,2.052,120,1.948,121,2.831,122,1.686,123,2.052,124,1.023,125,1.629,126,1.565,127,1.25,128,1.25,129,1.25,130,1.108,131,1.201,132,1.25,133,1.108,134,1.926,135,1.25,136,1.25,137,1.108,138,1.002,139,1.696,140,1.108,141,1.696,142,1.108,143,2.1,144,1.25,145,1.108,146,1.064,147,1.25,148,1.064,149,1.25,150,1.108,151,0.566,152,1.25,153,1.108,154,1.25,155,1.064,156,1.25,157,1.064,158,1.25,159,1.108,160,0.738,161,1.25,162,1.064,163,1.926,164,1.108,165,1.064,166,1.25,167,1.108,168,0.77,169,1.108,170,1.201,171,1.25,172,1.108,173,1.25,174,1.201,175,1.25,176,1.064,177,1.153,178,1.108,179,1.002,180,1.108,181,1.201,182,1.25,183,1.25]],["title/components/AvatarPhotoComponent.html",[28,0.48,130,1.085]],["body/components/AvatarPhotoComponent.html",[0,0.223,3,0.124,4,0.124,5,0.109,8,0.223,9,0.887,13,1.34,16,0.016,17,0.382,20,0.887,21,0.482,25,0.124,26,0.01,27,0.01,28,0.71,29,0.988,30,1.389,31,0.715,32,1.115,33,1.115,34,1.115,38,1.334,39,1.672,41,0.912,42,2.496,43,1.525,44,1.07,46,1.567,48,1.567,50,0.497,55,1.888,56,1.932,62,0.451,65,1.368,68,0.778,71,2.149,72,0.482,81,2.386,98,1.966,115,1.161,117,2.444,124,0.912,125,1.505,126,1.445,127,1.115,128,1.115,129,1.115,130,1.742,131,2.164,132,1.115,133,0.988,134,1.812,135,1.115,136,1.115,137,0.988,138,0.925,139,1.567,140,0.988,141,1.567,142,0.988,143,2.036,144,1.115,145,0.988,146,0.949,147,1.115,148,0.949,149,1.115,150,0.988,151,0.505,152,1.115,153,0.988,154,1.115,155,0.949,156,1.115,157,0.949,158,1.115,159,0.988,160,0.658,161,1.115,162,0.949,163,1.812,164,0.988,165,0.949,166,1.115,167,0.988,168,0.686,169,0.988,170,1.07,171,1.115,172,0.988,173,1.115,174,1.07,175,1.115,176,0.949,177,1.028,178,0.988,179,0.925,180,0.988,181,1.07,182,1.115,183,1.115,184,7.593,185,6.576,186,3.545,187,4.984,188,5.764,189,4.984,190,2.722,191,5.764,192,5.764,193,4.484,194,5.764,195,5.764,196,6.254,197,7.285,198,5.764,199,5.764,200,3.545,201,3.545,202,3.545,203,0.841,204,1.904,205,0.973,206,1.742,207,3.545,208,3.545,209,3.545,210,3.545,211,3.545,212,6.254,213,4.452,214,4.984,215,6.254,216,5.416,217,4.123,218,6.254,219,6.254,220,6.254,221,6.254,222,3.545,223,4.984,224,3.545,225,4.984,226,3.545,227,3.545,228,3.545,229,3.545,230,0.949,231,3.545,232,3.545,233,1.888,234,3.545,235,4.984,236,3.545,237,4.984,238,3.545,239,3.545,240,3.545,241,3.545,242,3.545,243,1.574,244,3.545,245,3.545,246,3.545,247,2.113,248,3.545,249,3.545,250,3.545,251,3.545]],["title/components/BaseWrapperComponent.html",[28,0.48,133,1.085]],["body/components/BaseWrapperComponent.html",[0,0.254,3,0.141,4,0.141,5,0.124,8,0.254,9,0.969,13,1.265,15,1.054,16,0.016,17,0.383,18,0.85,20,1.097,21,0.988,22,2.29,23,2.482,24,2.482,25,0.141,26,0.011,27,0.011,28,0.76,29,1.123,30,1.517,31,0.813,32,1.268,33,1.268,34,1.268,38,1.458,39,1.789,41,1.037,42,2.524,43,1.537,44,1.217,46,1.712,48,1.712,50,0.543,55,1.994,56,2.112,57,1.376,58,0.919,60,2.587,62,0.388,65,1.464,68,0.574,71,1.712,72,0.548,74,1.376,75,1.268,78,1.563,81,2.02,98,2.077,124,1.037,125,1.644,126,1.579,127,1.268,128,1.268,129,1.268,130,1.123,131,1.217,132,1.268,133,1.84,134,2.169,135,2.381,136,1.268,137,1.123,138,1.011,139,1.712,140,1.123,141,1.712,142,1.123,143,2.108,144,1.268,145,1.123,146,1.079,147,1.268,148,1.079,149,1.268,150,1.123,151,0.574,152,1.268,153,1.123,154,1.268,155,1.079,156,1.268,157,1.079,158,1.268,159,1.123,160,0.748,161,1.268,162,1.079,163,1.939,164,1.123,165,1.079,166,1.268,167,1.123,168,0.78,169,1.123,170,1.217,171,1.268,172,1.123,173,1.268,174,1.217,175,1.268,176,1.079,177,1.169,178,1.123,179,1.011,180,1.123,181,1.217,182,1.268,183,1.268,233,1.32,252,7.268,253,5.175,254,4.032,255,3.353,256,3.283,257,4.376,258,5.721,259,6.168,260,5.447,261,4.798,262,5.53,263,4.237,264,5.138,265,3.797,266,4.032,267,4.391,268,4.798,269,2.254,270,5.447,271,4.032,272,4.032,273,4.237,274,4.032,275,4.032,276,2.081,277,1.879,278,1.879,279,1.563,280,3.136,281,4.032,282,4.032,283,3.492,284,5.447,285,1.123,286,3.492,287,1.634,288,3.492,289,3.492,290,1.123,291,4.032,292,4.032,293,4.032,294,3.136,295,3.492,296,4.032,297,5.447]],["title/components/CategoryCardComponent.html",[28,0.48,137,1.085]],["body/components/CategoryCardComponent.html",[0,0.22,3,0.123,4,0.123,5,0.107,8,0.22,9,0.879,13,1.019,16,0.016,17,0.287,20,0.623,21,0.476,25,0.123,26,0.01,27,0.01,28,0.706,29,0.976,30,1.377,31,0.707,32,1.101,33,1.101,34,1.101,38,1.323,39,1.661,41,0.901,42,2.493,43,1.523,44,1.057,46,1.554,48,1.554,55,1.878,56,1.916,58,1.306,62,0.311,65,0.831,71,1.554,72,0.476,98,2.363,99,1.716,100,1.485,101,2.436,104,2.126,105,2.002,106,1.716,107,2.428,108,2.095,111,2.639,112,2.52,113,2.002,114,1.271,115,2.54,116,2.898,117,2.095,118,2.694,119,3.385,120,2.421,123,1.807,124,0.901,125,1.492,126,1.433,127,1.101,128,1.101,129,1.101,130,0.976,131,1.057,132,1.101,133,0.976,134,1.8,135,1.101,136,1.101,137,1.733,138,1.481,139,1.554,140,0.976,141,1.554,142,0.976,143,2.029,144,1.101,145,0.976,146,0.937,147,1.101,148,0.937,149,1.101,150,0.976,151,0.499,152,1.101,153,0.976,154,1.101,155,0.937,156,1.101,157,0.937,158,1.101,159,0.976,160,0.65,161,1.101,162,0.937,163,1.8,164,0.976,165,1.323,166,1.101,167,0.976,168,0.678,169,0.976,170,1.057,171,1.101,172,0.976,173,1.101,174,1.057,175,1.101,176,0.937,177,1.016,178,0.976,179,0.917,180,0.976,181,1.057,182,1.101,183,1.101,213,2.494,217,2.309,298,6.22,299,5.387,300,3.033,301,5.544,302,4.96,303,4.28,304,4.942,305,3.503,306,2.195,307,3.503,308,0.432,309,2.156,310,3.503,311,3.503,312,2.095,313,3.503,314,4.942,315,4.942,316,2.55,317,4.942,318,2.095,319,1.91,320,2.025,321,3.47,322,3.033,323,2.309,324,2.193,325,3.513,326,2.857,327,2.156,328,4.038,329,3.31,330,2.955,331,3.033,332,1.91,333,2.724,334,3.503,335,1.807,336,1.733,337,2.025,338,2.724,339,2.494,340,3.503,341,1.3,342,1.807,343,2.668,344,2.303,345,2.637,346,3.503,347,1.716,348,1.716,349,4.429,350,2.156,351,3.033,352,2.55,353,2.55,354,2.421,355,2.724,356,2.025,357,1.91,358,1.807,359,1.485,360,4.28,361,2.494,362,2.309,363,1.807,364,3.385,365,1.716,366,3.519,367,5.295,368,3.259,369,4.942,370,6.22,371,4.942,372,4.942,373,4.101,374,3.844,375,4.942,376,4.455,377,3.503,378,2.857,379,3.033,380,3.519,381,4.28,382,1.716,383,2.494,384,2.494,385,3.503,386,4.942]],["title/components/CategoryWidgetComponent.html",[28,0.48,140,1.085]],["body/components/CategoryWidgetComponent.html",[0,0.231,3,0.129,4,0.129,5,0.113,8,0.231,9,0.91,13,1.368,15,1.138,16,0.016,17,0.388,18,0.918,20,1.131,21,0.998,22,2.36,23,2.265,24,2.265,25,0.129,26,0.01,27,0.01,28,0.725,29,1.025,30,1.425,31,0.742,32,1.157,33,1.157,34,1.157,39,1.067,41,0.946,42,2.504,43,1.522,44,1.111,46,1.608,48,1.608,50,0.51,55,1.775,56,1.983,57,1.256,58,0.839,60,2.574,62,0.435,65,1.509,68,0.62,71,1.157,72,0.5,74,1.256,75,1.157,78,1.426,96,2.127,98,1.998,100,1.56,101,1.366,111,1.426,112,1.491,124,0.946,125,1.544,126,1.483,127,1.157,128,1.157,129,1.157,130,1.025,131,1.111,132,1.157,133,2.046,134,2.1,135,1.608,136,1.157,137,1.025,138,1.407,139,1.608,140,1.771,141,1.608,142,1.025,143,2.057,144,1.157,145,1.025,146,0.985,147,1.157,148,0.985,149,1.157,150,1.025,151,0.524,152,1.157,153,1.025,154,1.157,155,0.985,156,1.157,157,0.985,158,1.157,159,1.025,160,0.683,161,1.157,162,0.985,163,1.849,164,1.025,165,0.985,166,1.157,167,1.025,168,0.712,169,1.025,170,1.111,171,1.157,172,1.025,173,1.157,174,1.919,175,1.157,176,0.985,177,1.067,178,1.025,179,0.95,180,1.025,181,1.111,182,1.157,183,1.157,204,1.771,205,0.905,230,1.369,253,2.62,256,3.15,257,3.912,261,3.979,262,4.574,263,3.979,264,4.944,265,3.149,267,4.525,268,3.979,269,2.169,273,3.979,276,1.899,277,1.714,278,1.714,279,1.426,294,3.979,387,7.438,388,6.442,389,3.187,390,4.43,391,5.093,392,4.43,393,2.612,394,5.881,395,5.881,396,5.093,397,2.093,398,1.926,399,2.957,400,4.43,401,5.116,402,5.785,403,3.187,404,5.116,405,3.679,406,1.714,407,3.679,408,3.679,409,3.187,410,5.116,411,3.187,412,3.979,413,3.679,414,3.187,415,4.43,416,3.679,417,3.679,418,1.12,419,3.679,420,3.187,421,1.802,422,1.802,423,2.862,424,3.187,425,5.116,426,5.116,427,3.679,428,3.679,429,3.679,430,3.679]],["title/modules/ComponentsModule.html",[431,1.907,432,2.567]],["body/modules/ComponentsModule.html",[0,0.256,3,0.142,4,0.142,5,0.125,16,0.016,21,1.083,25,0.142,26,0.011,27,0.011,30,1.133,60,2.537,72,0.553,78,1.577,124,1.046,142,2.147,143,2.007,146,2.063,148,2.063,150,2.147,151,0.579,153,2.147,155,2.063,162,2.063,169,2.147,170,1.228,176,2.063,177,1.18,180,2.147,181,1.228,255,3.814,269,2.433,279,1.577,306,1.807,431,1.993,432,5.389,433,2.218,434,2.351,435,3.814,436,2.682,437,3.814,438,3.523,439,3.523,440,3.523,441,3.523,442,3.523,443,4.388,444,3.613,445,2.504,446,2.504,447,4.068,448,3.613,449,3.373,450,3.523,451,5.48,452,4.068,453,3.523,454,3.613,455,3.613,456,2.351,457,3.523,458,4.068,459,3.164,460,3.523,461,3.164,462,3.523,463,3.164,464,4.746,465,3.164,466,4.262,467,3.164,468,3.523,469,4.746,470,4.746,471,2.682,472,3.523,473,4.068,474,5.48,475,4.746,476,3.523,477,3.523,478,3.523,479,3.164,480,5.48,481,3.164,482,3.164,483,3.523,484,2.504]],["title/injectables/ConfigService.html",[269,1.329,485,1.385]],["body/injectables/ConfigService.html",[0,0.237,3,0.132,4,0.132,5,0.115,8,0.237,9,0.925,11,5.559,13,1.42,15,1.304,16,0.016,17,0.391,18,1.051,20,1.364,21,0.946,22,2.65,23,2.317,24,2.317,25,0.132,26,0.01,27,0.01,38,1.007,39,1.507,50,0.518,55,1.938,58,1.185,60,2.54,62,0.464,65,1.599,67,3.245,68,0.627,72,0.511,74,1.285,75,1.183,77,1.754,81,2.102,190,3.136,203,1.234,204,1.049,205,0.536,206,1.049,230,1.007,233,1.233,247,1.596,265,3.199,269,1.774,287,2.412,485,1.849,486,1.942,487,3.764,488,5.952,489,4.363,490,4.238,491,5.952,492,5.952,493,4.63,494,5.952,495,3.925,496,3.245,497,6.735,498,6.419,499,6.419,500,6.419,501,4.993,502,6.419,503,6.419,504,6.419,505,5.197,506,5.197,507,5.197,508,3.26,509,5.197,510,3.764,511,3.764,512,3.764,513,3.764,514,3.764,515,3.764,516,3.764,517,3.764,518,3.764,519,5.197,520,3.764,521,1.284,522,5.197,523,3.764,524,5.197,525,3.764,526,5.197,527,3.764,528,3.764,529,3.764,530,3.764,531,3.764,532,3.764,533,3.764,534,3.764,535,3.764,536,1.849,537,4.501,538,3.764,539,3.764,540,1.525,541,3.26,542,1.942,543,1.942,544,3.764,545,6.419,546,3.764,547,3.764,548,5.197,549,2.422,550,3.26,551,3.764,552,2.588,553,3.764,554,3.764,555,3.764,556,5.197,557,5.197,558,5.952,559,3.764,560,2.488,561,5.197,562,3.7,563,3.764,564,5.197,565,5.197,566,5.197]],["title/components/DiscussCardComponent.html",[28,0.48,145,1.085]],["body/components/DiscussCardComponent.html",[0,0.193,3,0.107,4,0.107,5,0.094,8,0.193,9,0.799,13,1.196,15,1.029,16,0.016,17,0.361,18,0.829,20,1.108,21,0.417,25,0.107,26,0.009,27,0.009,28,0.655,29,0.854,30,1.251,31,0.619,32,0.964,33,0.964,34,0.964,38,1.202,39,1.541,41,0.788,42,2.46,43,1.5,44,0.926,46,1.412,48,1.412,55,1.766,56,1.741,58,1.212,62,0.282,65,0.728,68,0.616,71,1.412,72,0.417,96,1.772,97,2.48,98,2.248,99,1.502,100,1.3,101,2.496,104,2.612,105,2.523,106,2.866,107,1.904,108,1.904,109,1.672,110,2.021,111,2.673,112,2.97,113,1.82,114,1.773,115,2.582,116,3.132,117,2.48,118,2.897,119,2.742,120,2.603,122,1.904,123,2.317,124,0.788,125,1.356,126,1.302,127,0.964,128,0.964,129,0.964,130,0.854,131,0.926,132,0.964,133,0.854,134,1.671,135,0.964,136,0.964,137,0.854,138,0.834,139,1.412,140,0.854,141,1.412,142,0.854,143,2.239,144,0.964,145,1.63,146,0.821,147,0.964,148,0.821,149,0.964,150,0.854,151,0.437,152,0.964,153,0.854,154,0.964,155,0.821,156,0.964,157,0.821,158,0.964,159,0.854,160,0.569,161,0.964,162,0.821,163,1.671,164,0.854,165,0.821,166,0.964,167,0.854,168,0.593,169,0.854,170,0.926,171,0.964,172,0.854,173,0.964,174,0.926,175,0.964,176,0.821,177,0.889,178,0.854,179,0.834,180,0.854,181,0.926,182,0.964,183,0.964,190,2.06,203,0.728,233,1.471,300,2.655,301,5.008,302,4.602,303,3.889,321,2.476,323,2.021,324,1.356,325,2.317,326,2.596,327,1.887,328,3.833,329,3.072,332,1.672,335,1.582,336,1.992,337,1.772,338,2.385,339,2.183,341,2.416,342,2.317,343,2.093,344,2.093,345,2.253,347,2.603,348,2.603,352,3.358,353,3.358,354,3.05,356,1.772,358,1.582,359,2.48,361,3.783,363,1.582,364,3.019,365,1.502,376,4.844,378,3.072,380,4.633,382,1.502,383,2.183,384,2.183,552,1.091,567,6.894,568,5.971,569,3.493,570,4.602,571,4.491,572,3.889,573,3.783,574,4.491,575,3.493,576,3.066,577,2.385,578,3.066,579,3.066,580,3.066,581,1.362,582,3.066,583,3.889,584,3.066,585,1.471,586,2.655,587,3.066,588,1.82,589,3.066,590,3.066,591,2.655,592,4.491,593,4.491,594,4.491,595,4.491,596,3.889,597,4.491,598,3.197,599,3.197,600,4.491,601,4.491,602,4.491,603,2.598,604,4.491,605,4.491,606,6.228,607,4.491,608,6.228,609,3.493,610,2.385,611,2.655,612,2.655,613,3.066,614,2.655,615,3.382,616,5.067,617,3.601,618,1.138,619,2.448,620,4.551,621,2.596,622,3.066,623,2.385,624,3.889,625,1.887,626,1.3,627,2.655,628,3.066,629,1.3]],["title/components/DiscussCategoryComponent.html",[28,0.48,146,1.042]],["body/components/DiscussCategoryComponent.html",[0,0.16,3,0.089,4,0.089,5,0.078,8,0.245,9,0.694,13,1.367,15,1.174,16,0.016,17,0.378,18,0.946,20,1.189,21,0.927,25,0.089,26,0.008,27,0.008,28,0.585,29,0.707,30,1.086,31,0.958,32,0.798,33,0.798,34,0.798,38,1.044,39,1.376,40,3.379,41,0.653,42,2.407,43,1.464,44,0.767,46,1.226,48,1.226,50,0.389,54,3.79,55,1.607,56,1.512,57,1.62,58,0.889,60,2.044,62,0.453,65,1.546,67,2.587,71,1.906,72,0.345,73,0.943,74,0.867,75,0.798,77,1.183,78,0.985,79,1.029,81,1.277,86,2.743,98,1.674,101,0.943,104,0.943,109,2.126,111,0.985,115,1.554,122,1.076,124,0.653,125,1.177,126,1.131,127,0.798,128,0.798,129,0.798,130,0.707,131,0.767,132,0.798,133,0.707,134,1.492,135,0.798,136,0.798,137,0.707,138,1.307,139,1.226,140,0.707,141,1.226,142,0.707,143,2.127,144,0.798,145,0.707,146,1.425,147,0.798,148,0.68,149,0.798,150,0.707,151,0.676,152,0.798,153,0.707,154,0.798,155,0.68,156,0.798,157,0.68,158,0.798,159,0.707,160,0.471,161,0.798,162,0.68,163,1.492,164,0.707,165,0.68,166,0.798,167,0.707,168,0.492,169,0.707,170,0.767,171,0.798,172,0.707,173,0.798,174,0.767,175,0.798,176,0.68,177,0.736,178,0.707,179,0.724,180,0.707,181,0.767,182,0.798,183,0.798,190,2.729,204,1.689,205,0.818,206,2.026,230,1.623,256,2.364,269,2.328,277,1.183,278,1.183,279,0.985,287,2.327,306,2.108,309,2.921,343,1.183,344,1.183,347,1.244,348,1.244,359,1.076,397,1.689,399,2.743,406,1.817,415,2.199,418,0.556,421,1.244,422,1.244,461,5.995,489,3.942,490,3.79,495,3.129,496,3.305,521,0.627,536,0.904,540,1.029,550,2.199,552,0.904,562,4.089,615,1.468,618,1.448,630,5.488,631,2.539,632,4.746,633,3.899,634,3.51,635,5.324,636,4.11,637,3.691,638,2.891,639,3.379,640,4.11,641,2.776,642,3.899,643,5.324,644,3.899,645,2.571,646,3.899,647,4.611,648,4.746,649,4.11,650,2.012,651,1.975,652,2.449,653,2.157,654,2.743,655,3.899,656,2.539,657,2.539,658,2.481,659,2.539,660,3.033,661,2.539,662,3.899,663,2.539,664,2.539,665,2.539,666,3.899,667,2.539,668,2.223,669,2.571,670,2.539,671,3.899,672,2.539,673,4.141,674,2.157,675,3.899,676,2.571,677,3.691,678,3.899,679,1.226,680,2.254,681,1.512,682,1.975,683,2.539,684,2.539,685,2.539,686,2.539,687,3.377,688,2.539,689,2.539,690,2.539,691,2.539,692,2.539,693,2.539,694,2.539,695,2.539,696,2.539,697,2.539,698,2.012,699,1.975,700,0.736,701,1.183,702,1.244,703,1.244,704,2.539,705,2.199,706,2.539,707,2.539,708,2.539,709,1.808,710,2.539,711,2.539,712,3.899,713,2.539,714,3.377,715,2.199,716,2.539,717,3.899,718,2.539,719,2.539,720,2.539,721,4.756,722,2.539,723,2.539,724,2.539,725,4.641,726,4.11,727,3.379,728,4.11,729,4.746,730,2.539,731,2.539,732,1.975,733,2.539,734,4.611,735,2.199,736,2.199,737,4.11,738,2.539,739,2.539,740,2.539,741,2.539,742,1.388,743,2.324,744,3.899,745,2.4,746,2.539,747,2.539,748,2.539,749,2.539,750,1.128,751,2.776,752,2.539,753,1.674,754,1.385,755,2.539,756,2.199,757,3.899,758,4.611,759,3.377,760,2.539,761,2.539,762,2.539,763,3.377,764,2.199,765,1.674,766,2.539,767,2.539]],["title/components/DiscussHomeComponent.html",[28,0.48,148,1.042]],["body/components/DiscussHomeComponent.html",[0,0.159,3,0.088,4,0.088,5,0.077,8,0.159,9,0.69,13,1.382,15,1.219,16,0.016,17,0.365,18,0.894,20,1.156,21,0.925,25,0.088,26,0.008,27,0.008,28,0.582,29,0.703,30,1.08,31,0.509,32,0.793,33,0.793,34,0.793,38,1.038,39,1.37,41,0.649,42,2.405,43,1.462,44,0.761,46,1.219,48,1.219,50,0.386,55,1.602,56,1.504,57,1.613,58,0.884,60,2.241,62,0.47,65,1.543,68,0.603,71,1.901,72,0.343,73,0.936,74,0.861,75,0.793,78,1.504,79,1.022,81,1.875,86,1.458,96,3.066,98,1.668,104,0.936,105,1.022,115,1.98,122,1.069,124,0.649,125,1.171,126,1.125,127,0.793,128,0.793,129,0.793,130,0.703,131,0.761,132,0.793,133,0.703,134,1.486,135,0.793,136,0.793,137,0.703,138,0.72,139,1.219,140,0.703,141,1.219,142,0.703,143,2.086,144,0.793,145,0.703,146,0.675,147,0.793,148,1.42,149,0.793,150,0.703,151,0.673,152,0.793,153,0.703,154,0.793,155,0.675,156,0.793,157,0.675,158,0.793,159,0.703,160,0.468,161,0.793,162,0.675,163,1.486,164,0.703,165,0.675,166,0.793,167,0.703,168,0.488,169,0.703,170,0.761,171,0.793,172,0.703,173,0.793,174,0.761,175,0.793,176,0.675,177,0.731,178,0.703,179,0.72,180,0.703,181,0.761,182,0.793,183,0.793,190,1.832,193,1.962,204,1.929,205,1.001,206,1.896,230,1.42,233,1.27,256,2.356,269,2.149,277,1.175,278,1.175,279,0.978,306,1.12,309,1.553,321,1.175,330,2.001,333,3.017,341,1.755,345,1.644,358,2.001,397,2.152,398,1.548,399,2.732,406,1.807,412,1.962,418,1.49,421,1.235,422,1.235,459,6.057,481,3.676,482,4.703,489,3.066,490,3.777,496,1.375,521,0.623,536,0.898,540,1.022,562,3.364,573,1.796,585,1.875,618,1.755,630,5.544,636,4.093,638,2.826,639,3.364,640,4.093,641,2.761,645,2.557,647,4.594,649,4.594,650,2.001,652,2.439,653,2.149,654,2.732,658,2.472,660,3.017,668,0.861,669,2.557,674,1.022,679,1.668,680,2.732,698,2.001,699,1.962,700,0.731,701,1.175,702,1.235,703,1.235,721,3.364,725,3.116,727,1.796,732,1.962,735,2.184,736,2.184,737,3.359,742,0.898,743,1.9,745,1.553,750,1.12,751,2.761,753,1.663,754,1.375,768,2.522,769,1.644,770,4.726,771,3.879,772,4.093,773,1.915,774,4.093,775,4.093,776,4.093,777,4.959,778,4.959,779,4.726,780,1.915,781,4.093,782,4.726,783,4.726,784,3.879,785,3.017,786,4.594,787,4.594,788,4.726,789,1.663,790,2.315,791,3.879,792,2.522,793,2.522,794,2.522,795,2.522,796,3.879,797,2.522,798,2.522,799,3.017,800,2.522,801,2.522,802,2.522,803,2.522,804,2.522,805,2.522,806,2.522,807,2.522,808,3.676,809,1.962,810,3.359,811,2.522,812,1.022,813,2.522,814,2.522,815,2.522,816,3.879,817,2.522,818,2.522,819,3.359,820,2.522,821,2.522,822,2.522,823,3.017,824,2.522,825,2.522,826,2.522,827,2.522,828,1.962,829,2.184,830,2.522,831,2.522,832,3.879,833,3.879,834,2.522,835,2.184,836,4.726,837,1.215,838,2.184,839,2.184,840,2.184,841,3.359,842,3.359,843,2.184,844,2.184,845,2.184,846,2.184,847,3.359,848,2.184,849,2.184,850,1.962,851,2.522,852,3.359,853,3.359,854,2.522,855,1.571,856,1.663,857,2.522,858,2.184,859,4.959,860,2.522,861,2.522,862,2.184,863,2.184,864,2.557,865,4.093,866,2.522,867,2.522,868,1.962,869,1.796,870,1.962,871,1.962,872,2.184,873,2.184,874,2.522,875,2.184,876,2.184,877,2.184,878,2.184,879,2.184,880,2.184,881,3.359,882,3.359,883,3.359,884,1.962,885,1.663]],["title/components/DiscussStartComponent.html",[28,0.48,153,1.085]],["body/components/DiscussStartComponent.html",[0,0.117,3,0.065,4,0.065,5,0.057,8,0.281,9,0.542,13,1.321,15,1.129,16,0.016,17,0.36,18,0.91,20,1.105,21,0.792,25,0.065,26,0.006,27,0.006,28,0.477,29,0.518,30,0.849,31,0.375,32,0.585,33,0.585,34,0.585,38,0.815,39,1.121,41,0.479,42,2.301,43,1.392,44,0.562,46,0.958,48,0.958,50,0.304,55,1.349,56,1.181,57,0.635,58,0.695,60,1.591,62,0.433,65,1.384,68,0.716,71,1.757,72,0.253,73,0.691,74,0.635,75,0.585,78,0.721,79,0.754,81,1.615,83,3.477,97,2.633,98,2.344,99,2.415,100,1.639,101,1.66,103,3.677,104,2.411,105,0.754,106,1.894,107,2.697,108,1.895,109,1.015,111,2.053,113,1.811,114,1.362,115,2.37,116,2.718,117,2.09,118,1.015,119,1.996,120,1.492,122,2.369,123,1.572,124,0.479,125,0.92,126,1.121,127,0.585,128,0.585,129,0.585,130,0.518,131,0.562,132,0.585,133,0.518,134,1.216,135,0.585,136,0.585,137,0.518,138,1.083,139,0.958,140,0.518,141,0.958,142,0.518,143,1.946,144,0.585,145,0.518,146,0.498,147,0.585,148,0.498,149,0.585,150,0.518,151,0.754,152,0.585,153,1.245,154,0.585,155,0.498,156,0.585,157,0.498,158,0.585,159,0.518,160,0.345,161,0.585,162,0.498,163,1.216,164,0.518,165,1.035,166,0.585,167,0.518,168,0.36,169,0.518,170,0.562,171,0.585,172,0.518,173,0.585,174,0.562,175,0.585,176,0.498,177,1.916,178,0.518,179,1.205,180,0.518,181,0.562,182,0.585,183,0.585,190,1.499,203,0.442,204,1.625,205,0.86,206,1.917,213,1.325,230,1.496,233,1.83,243,1.353,269,1.908,279,0.721,319,2.437,320,1.076,321,3.411,323,2.55,324,1.598,325,0.96,326,1.076,327,1.146,328,3.035,329,2.235,330,2.307,331,1.612,332,1.015,333,1.448,335,3.205,336,1.809,337,1.076,341,1.131,342,2.732,343,2.297,344,1.802,345,1.291,347,0.912,348,1.492,356,1.761,357,2.437,358,2.307,359,1.639,362,1.227,363,1.572,364,3.283,365,2.189,373,1.227,378,1.761,381,2.638,398,1.267,406,1.419,471,1.227,472,6.458,490,2.753,536,0.662,552,1.591,560,1.181,562,3.77,585,1.267,599,1.325,618,2.362,619,1.661,621,2.235,625,1.875,630,5.309,634,2.009,641,2.169,645,2.009,650,1.572,651,1.448,652,1.996,653,1.811,658,1.802,668,0.635,669,2.009,679,1.405,680,1.761,687,2.638,698,1.572,700,0.54,701,0.867,702,0.912,703,1.492,725,1.227,726,2.638,743,0.912,754,1.015,765,1.227,837,1.149,856,1.227,864,1.227,872,1.612,873,1.612,885,2.947,886,1.861,887,3.867,888,3.046,889,3.867,890,3.867,891,3.835,892,4.931,893,3.349,894,3.867,895,3.867,896,3.867,897,3.867,898,3.867,899,3.867,900,3.867,901,4.47,902,2.638,903,2.638,904,3.046,905,3.046,906,3.046,907,3.871,908,4.27,909,4.931,910,3.182,911,3.008,912,3.871,913,3.008,914,2.751,915,3.046,916,1.861,917,1.861,918,1.861,919,1.861,920,3.046,921,1.861,922,3.046,923,1.861,924,3.046,925,1.861,926,2.638,927,1.861,928,4.841,929,1.861,930,1.861,931,3.046,932,1.861,933,2.638,934,3.046,935,1.861,936,5.051,937,3.046,938,1.861,939,3.477,940,3.046,941,0.92,942,1.861,943,1.861,944,2.37,945,1.861,946,1.861,947,2.638,948,2.638,949,2.638,950,2.169,951,2.638,952,2.37,953,1.861,954,1.861,955,1.861,956,1.861,957,1.861,958,1.861,959,3.349,960,1.861,961,1.861,962,1.448,963,1.325,964,1.861,965,1.861,966,2.37,967,1.861,968,1.448,969,1.448,970,3.867,971,1.861,972,1.861,973,1.861,974,1.612,975,4.27,976,2.638,977,3.046,978,1.861,979,2.638,980,3.046,981,3.046,982,1.861,983,1.861,984,1.612,985,1.612,986,1.448,987,1.861,988,1.861,989,1.861,990,1.861,991,1.861,992,2.638,993,1.861,994,1.612,995,1.861,996,3.046,997,2.638,998,1.861,999,1.861,1000,1.861,1001,1.861,1002,1.861,1003,1.612,1004,3.046,1005,1.448,1006,2.37,1007,1.861,1008,3.046,1009,3.867,1010,2.638,1011,3.867,1012,1.861,1013,1.861,1014,1.861,1015,1.861,1016,1.861,1017,1.861,1018,1.861,1019,1.861,1020,3.867,1021,3.046,1022,1.861,1023,1.861,1024,3.046,1025,3.046,1026,3.046,1027,1.861,1028,1.861,1029,1.861,1030,1.861,1031,5.051,1032,2.37,1033,1.861,1034,1.861,1035,1.861,1036,1.861,1037,1.861,1038,1.861,1039,1.448,1040,1.861,1041,1.861,1042,1.861,1043,3.046,1044,1.291,1045,3.046,1046,2.638,1047,3.477,1048,1.861,1049,1.861,1050,1.861,1051,4.931,1052,5.589,1053,4.47,1054,3.871,1055,4.47,1056,3.046,1057,3.046,1058,3.349,1059,3.867,1060,1.325,1061,4.27,1062,1.227,1063,1.861,1064,3.046,1065,3.477,1066,1.861,1067,1.448,1068,1.861,1069,1.612,1070,1.612,1071,1.448,1072,1.448,1073,1.861,1074,1.612,1075,3.182,1076,0.96,1077,1.612,1078,1.861,1079,1.861,1080,4.47,1081,3.871,1082,1.612,1083,1.612,1084,1.612,1085,1.861,1086,1.448,1087,1.227,1088,1.861,1089,0.789,1090,1.325,1091,1.612,1092,1.861,1093,1.861,1094,0.789,1095,1.861,1096,4.47,1097,2.638,1098,1.861,1099,1.861,1100,1.861,1101,1.861,1102,0.789,1103,1.861]],["title/components/DiscussTagsComponent.html",[28,0.48,155,1.042]],["body/components/DiscussTagsComponent.html",[0,0.167,3,0.093,4,0.093,5,0.081,8,0.167,9,0.716,13,1.304,15,1.053,16,0.016,17,0.358,18,0.849,20,1.041,21,0.952,25,0.093,26,0.008,27,0.008,28,0.6,29,0.738,30,1.121,31,0.534,32,0.833,33,0.833,34,0.833,38,1.078,39,1.412,41,0.681,42,2.419,43,1.472,44,0.799,46,1.266,48,1.266,50,0.401,55,1.643,57,0.904,58,0.918,59,2.293,60,2.193,62,0.457,65,1.292,67,2.655,68,0.424,71,1.711,72,0.36,73,1.495,74,0.904,75,0.833,77,1.234,78,1.027,79,1.073,81,2.018,86,2.327,96,1.531,97,2.613,98,2.234,99,1.297,100,2.481,101,2.288,103,2.327,104,1.495,105,1.973,107,2.866,108,2.481,109,2.655,110,2.654,111,1.888,112,2.371,113,1.073,114,0.681,115,2.018,116,2.727,117,2.065,118,2.655,119,1.367,120,1.972,121,1.885,123,2.077,124,0.681,125,1.215,126,1.167,127,0.833,128,0.833,129,0.833,130,0.738,131,0.799,132,0.833,133,0.738,134,2.075,135,0.833,136,0.833,137,0.738,138,0.747,139,1.266,140,0.738,141,1.266,142,0.738,143,2.126,144,0.833,145,0.738,146,0.709,147,0.833,148,0.709,149,0.833,150,0.738,151,0.377,152,0.833,153,0.738,154,0.833,155,1.456,156,0.833,157,0.709,158,0.833,159,0.738,160,0.492,161,0.833,162,0.709,163,1.531,164,0.738,165,0.709,166,0.833,167,0.738,168,0.513,169,0.738,170,0.799,171,0.833,172,0.738,173,0.833,174,0.799,175,0.833,176,0.709,177,1.961,178,0.738,179,1.319,180,0.738,181,0.799,182,0.833,183,0.833,190,2.389,204,0.738,205,0.573,206,1.717,217,2.654,230,1.078,233,2.018,256,2.416,269,2.186,277,1.234,278,1.234,279,1.027,290,0.738,306,1.788,312,1.123,316,2.077,319,1.444,320,1.531,321,2.535,324,1.47,325,2.808,335,2.077,336,1.884,345,2.481,347,1.297,348,1.297,350,2.478,352,2.808,353,2.513,354,2.867,356,1.531,357,1.444,359,2.065,361,1.885,366,1.885,368,3.211,382,1.297,398,0.867,399,2.815,421,1.297,422,1.297,463,5.748,484,2.478,489,3.986,493,3.788,495,3.211,496,2.195,536,0.942,540,1.073,552,0.942,569,3.131,575,3.131,577,2.06,585,0.867,588,1.631,599,4.167,615,1.531,617,1.63,621,1.531,630,5.261,638,2.716,639,3.467,650,2.077,652,2.513,653,2.205,654,2.815,658,2.535,668,1.374,677,3.131,698,2.077,700,0.768,701,1.234,702,1.297,703,1.972,709,1.885,721,4.388,725,2.654,742,0.942,743,1.972,745,1.63,750,1.176,751,2.866,753,1.746,864,2.654,868,3.131,869,2.866,891,4.232,913,3.788,914,3.349,939,3.131,944,3.131,963,1.885,968,2.06,969,2.06,1005,2.06,1006,2.06,1060,1.885,1062,1.746,1086,2.06,1087,1.746,1090,1.885,1104,2.293,1105,4.218,1106,3.487,1107,4.87,1108,4.218,1109,3.788,1110,5.441,1111,3.487,1112,4.026,1113,3.487,1114,2.648,1115,2.648,1116,3.487,1117,2.478,1118,2.648,1119,2.648,1120,4.026,1121,2.648,1122,2.648,1123,2.648,1124,2.648,1125,2.648,1126,2.648,1127,2.293,1128,2.648,1129,2.648,1130,2.648,1131,2.648,1132,2.648,1133,2.648,1134,4.026,1135,2.648,1136,2.293,1137,2.293,1138,4.232,1139,3.487,1140,2.866,1141,2.293,1142,2.293,1143,2.293,1144,2.06,1145,2.293,1146,2.293,1147,0.983,1148,2.06,1149,2.06,1150,3.487,1151,4.026,1152,4.026,1153,4.026,1154,3.131,1155,6.163,1156,6.163,1157,2.478,1158,4.026,1159,2.648,1160,4.026,1161,2.648,1162,2.293,1163,2.654,1164,2.648,1165,2.866,1166,2.648,1167,2.648]],["title/injectables/DiscussUtilsService.html",[485,1.385,914,2.396]],["body/injectables/DiscussUtilsService.html",[0,0.356,3,0.198,4,0.198,5,0.174,8,0.356,9,1.203,13,1.333,15,1.309,16,0.016,17,0.392,18,1.056,20,1.287,21,0.77,25,0.198,26,0.013,27,0.013,58,1.649,62,0.356,68,0.762,72,0.77,115,2.215,125,1.711,485,2.407,486,2.924,542,2.924,543,2.924,570,6.263,572,5.858,583,5.858,585,1.856,591,4.907,914,4.164,985,6.263,986,4.407,1168,7.655,1169,4.407,1170,5.666,1171,5.666,1172,5.666,1173,5.666,1174,5.666,1175,5.666,1176,5.666,1177,5.666,1178,5.666]],["title/injectables/DiscussionEventsService.html",[485,1.385,1179,2.123]],["body/injectables/DiscussionEventsService.html",[0,0.344,3,0.191,4,0.191,5,0.168,8,0.344,9,1.178,13,1.317,15,1.059,16,0.016,17,0.317,18,0.853,20,0.973,21,0.968,25,0.191,26,0.013,27,0.013,50,0.66,58,1.624,65,1.298,72,0.743,73,2.031,74,1.866,75,1.719,77,2.548,79,2.216,190,2.987,204,1.845,205,0.943,406,3.319,485,2.356,486,2.822,536,2.634,542,2.822,543,2.822,658,3.319,1179,3.61,1180,5.397,1181,5.469,1182,6.168,1183,7.122,1184,6.622,1185,6.622,1186,6.622,1187,5.469,1188,7.122,1189,5.469,1190,5.469,1191,5.469,1192,5.469]],["title/modules/DiscussionRoutingModule.html",[431,1.907,1193,2.567]],["body/modules/DiscussionRoutingModule.html",[0,0.314,3,0.175,4,0.175,5,0.153,16,0.016,21,1.073,25,0.175,26,0.012,27,0.012,28,0.961,72,0.678,142,1.743,146,1.83,148,1.675,150,1.743,151,0.71,155,1.675,157,1.675,162,1.675,176,1.675,179,0.926,233,1.633,287,2.021,306,2.215,316,3.229,433,2.719,435,3.07,437,3.07,448,3.289,454,4.125,455,4.125,456,2.883,459,3.88,460,4.32,461,3.88,462,4.32,463,3.88,464,4.32,465,3.88,466,4.867,467,3.88,468,4.32,477,4.32,478,4.32,479,3.88,484,3.07,540,2.021,674,2.021,1180,3.551,1193,4.125,1194,4.32,1195,4.988,1196,4.988,1197,4.988,1198,7.168,1199,4.32,1200,3.88,1201,4.32,1202,6.256,1203,6.836,1204,4.988,1205,4.025,1206,7.731,1207,7.731,1208,4.988,1209,4.988,1210,4.988,1211,4.988,1212,4.988]],["title/modules/DiscussionUiModule.html",[431,1.907,1213,2.772]],["body/modules/DiscussionUiModule.html",[0,0.3,3,0.167,4,0.167,5,0.146,16,0.016,21,1.067,25,0.213,26,0.012,27,0.012,72,0.649,124,1.229,133,2.199,140,2.199,151,0.867,157,1.994,178,2.199,253,4.335,255,4.125,276,2.465,388,4.138,423,3.716,431,2.34,432,4.418,433,2.605,434,2.761,435,4.125,436,3.15,437,4.125,443,4.587,444,4.014,445,2.941,446,2.941,448,4.014,453,4.138,454,4.014,455,4.014,456,2.761,552,1.7,653,2.953,702,2.34,703,2.34,1179,4.063,1180,3.401,1193,4.913,1194,4.138,1199,4.138,1200,3.716,1201,4.138,1213,5.784,1214,4.138,1215,4.138,1216,4.138,1217,4.138,1218,4.138,1219,4.138,1220,4.777,1221,4.777,1222,4.777,1223,6.088,1224,4.777,1225,4.777,1226,4.138,1227,3.15,1228,5.273,1229,4.777,1230,4.777,1231,4.777,1232,4.777]],["title/modules/ElementsModule.html",[431,1.907,443,2.396]],["body/modules/ElementsModule.html",[0,0.288,3,0.16,4,0.16,5,0.14,16,0.016,21,1.066,25,0.16,26,0.011,27,0.011,29,2.222,36,3.966,44,1.382,72,0.622,124,1.178,130,2.186,131,1.382,137,2.186,138,0.85,143,1.328,145,2.186,159,2.186,160,0.85,164,2.186,165,1.226,167,2.186,168,0.886,172,2.186,185,3.966,255,2.819,299,3.966,431,2.243,433,2.497,434,2.647,435,4.043,436,3.019,437,4.043,443,5.021,444,3.907,445,2.819,446,2.819,448,3.019,449,3.647,450,3.966,454,3.907,455,3.907,456,2.647,466,3.562,469,5.131,470,5.131,471,3.019,568,3.966,1233,3.966,1234,3.966,1235,3.966,1236,4.579,1237,5.925,1238,4.579,1239,4.579,1240,3.966,1241,3.966,1242,4.579,1243,4.579,1244,3.966,1245,4.579]],["title/injectables/EventsService.html",[257,2.396,485,1.385]],["body/injectables/EventsService.html",[0,0.32,3,0.178,4,0.178,5,0.156,8,0.32,9,1.128,13,1.347,15,0.986,16,0.016,17,0.296,18,0.795,20,0.906,21,0.981,25,0.178,26,0.012,27,0.012,50,0.632,57,2.465,58,1.574,62,0.399,65,1.209,72,0.692,77,2.373,81,2.26,174,1.914,204,2.012,205,1.029,243,2.815,257,3.902,306,3.065,485,2.256,486,2.628,536,2.57,537,5.49,541,5.977,542,2.628,543,2.628,837,1.31,856,3.358,1047,4.931,1227,4.18,1246,5.093,1247,6.902,1248,7.222,1249,6.902,1250,6.902,1251,6.339,1252,6.339,1253,6.339,1254,5.093,1255,5.779,1256,6.339,1257,6.902,1258,6.902,1259,5.977,1260,6.339,1261,5.093,1262,6.339,1263,5.093,1264,5.093,1265,6.339,1266,5.093,1267,6.339,1268,5.093,1269,5.093,1270,5.093]],["title/interfaces/ICategorie.html",[308,0.48,1271,1.729]],["body/interfaces/ICategorie.html",[0,0.431,3,0.098,4,0.098,5,0.085,8,0.316,16,0.016,17,0.365,19,1.182,25,0.261,26,0.008,27,0.008,31,0.563,43,0.54,50,0.417,62,0.491,68,0.867,87,1.555,114,1.077,138,1.167,151,0.895,160,0.518,168,0.54,179,0.777,203,1.863,205,0.397,206,0.777,230,1.345,247,1.775,285,1.4,290,0.777,308,0.904,312,2.538,318,2.665,324,0.842,336,1.751,397,2.32,398,1.646,418,1.807,521,0.689,560,2.709,581,2.481,585,1.961,588,2.547,603,1.859,618,1.555,626,1.775,629,1.182,668,2.225,674,2.426,679,0.877,681,1.081,700,0.809,742,0.993,769,1.775,773,1.13,780,1.696,837,1.539,855,1.696,941,0.842,1044,2.665,1089,1.182,1094,2.538,1102,1.182,1147,1.036,1271,2.481,1272,0.842,1273,1.239,1274,2.789,1275,2.789,1276,2.789,1277,2.789,1278,2.929,1279,2.929,1280,2.789,1281,2.789,1282,2.789,1283,2.789,1284,2.929,1285,2.789,1286,2.789,1287,2.789,1288,2.789,1289,2.659,1290,1.3,1291,1.239,1292,1.3,1293,1.859,1294,1.3,1295,1.951,1296,1.182,1297,1.3,1298,1.3,1299,1.951,1300,1.951,1301,1.951,1302,1.951,1303,1.3,1304,1.859,1305,1.951,1306,1.951,1307,1.951,1308,1.951,1309,2.342,1310,1.3,1311,1.3,1312,1.3,1313,2.232,1314,1.3,1315,1.859,1316,1.3,1317,1.3,1318,1.3,1319,1.3,1320,1.3,1321,1.3,1322,1.3,1323,1.3,1324,1.3,1325,1.3,1326,1.951,1327,1.3,1328,1.3,1329,1.3,1330,1.951,1331,1.859,1332,2.659,1333,1.3,1334,1.3,1335,1.3,1336,1.3,1337,1.3,1338,1.3,1339,1.3,1340,1.3,1341,1.3,1342,1.3,1343,1.3,1344,1.3,1345,1.239,1346,1.239,1347,1.3,1348,1.951,1349,2.232,1350,1.951,1351,1.951,1352,1.951,1353,1.951,1354,1.951,1355,1.951,1356,1.951,1357,1.951,1358,1.951,1359,1.951,1360,1.3,1361,1.3,1362,1.951,1363,1.3,1364,1.3,1365,1.3,1366,1.3,1367,1.239,1368,2.659,1369,1.239,1370,1.3,1371,1.182,1372,1.3,1373,1.859,1374,1.3,1375,1.3,1376,1.859,1377,1.3,1378,1.3,1379,1.239,1380,1.239,1381,1.3,1382,1.3,1383,1.3,1384,1.3,1385,1.3,1386,1.3,1387,1.3,1388,1.3,1389,1.3,1390,1.3,1391,1.3,1392,1.3,1393,1.3,1394,1.3,1395,1.182,1396,1.3,1397,1.3,1398,1.3,1399,1.3,1400,1.3,1401,1.3,1402,1.3,1403,1.3,1404,1.3,1405,1.3,1406,1.3,1407,1.3,1408,1.3,1409,1.3,1410,1.3,1411,1.3,1412,1.3,1413,1.239,1414,1.3,1415,1.3,1416,1.239,1417,1.239,1418,1.239,1419,1.182,1420,1.239,1421,1.182]],["title/interfaces/ICategoryObj.html",[308,0.48,1422,2.009]],["body/interfaces/ICategoryObj.html",[3,0.187,4,0.187,5,0.164,8,0.336,16,0.016,17,0.426,22,1.983,25,0.274,26,0.013,27,0.013,50,0.65,62,0.474,68,0.857,203,1.743,243,3.402,285,1.488,287,2.164,290,1.488,308,0.965,393,3.344,418,1.429,521,1.319,549,2.488,750,2.371,790,3.197,812,2.164,837,1.888,941,2.217,1205,2.756,1272,1.612,1422,3.637,1423,2.911,1424,2.911,1425,2.756,1426,3.368,1427,2.911,1428,2.756,1429,2.911,1430,2.756,1431,3.041,1432,3.368,1433,2.756,1434,2.911,1435,2.911,1436,2.911,1437,2.756,1438,2.911]],["title/interfaces/ICourseContext.html",[308,0.48,1437,2.009]],["body/interfaces/ICourseContext.html",[3,0.19,4,0.19,5,0.167,8,0.342,16,0.016,17,0.316,22,2.02,25,0.275,26,0.013,27,0.013,50,0.658,62,0.484,68,0.855,203,1.754,243,3.281,285,1.515,287,2.204,290,1.515,308,0.968,393,2.931,418,1.445,521,1.344,549,2.535,750,2.416,790,3.233,812,2.204,837,1.399,941,1.642,1205,2.807,1272,1.642,1422,3.406,1423,2.966,1424,2.966,1425,2.807,1426,3.406,1427,2.966,1428,2.807,1429,2.966,1430,2.807,1431,3.075,1432,3.406,1433,2.807,1434,2.966,1435,2.966,1436,2.966,1437,3.406,1438,4.028]],["title/interfaces/IDiscussJsonData.html",[308,0.48,1291,1.729]],["body/interfaces/IDiscussJsonData.html",[0,0.341,3,0.111,4,0.111,5,0.097,8,0.341,16,0.016,17,0.314,19,1.343,25,0.266,26,0.009,27,0.009,31,0.639,43,0.613,50,0.458,62,0.199,68,0.866,87,1.708,114,1.183,138,1.222,151,0.937,160,0.588,168,0.613,179,0.854,203,1.885,205,0.451,206,0.883,230,1.449,247,1.95,285,1.509,290,0.883,308,0.925,312,1.95,318,2.296,324,0.956,336,1.509,397,2.115,398,1.773,418,1.806,521,0.783,560,2.793,581,2.639,585,2.067,588,2.194,603,2.043,618,1.708,626,1.95,629,1.343,668,2.028,674,1.864,679,0.996,681,1.228,700,0.919,742,1.127,769,1.95,773,1.284,780,1.864,837,1.183,855,1.864,941,0.956,1044,2.79,1089,1.343,1094,1.95,1102,1.343,1147,1.176,1271,2.405,1272,0.956,1273,1.407,1274,2.143,1275,2.143,1276,2.143,1277,2.143,1278,2.523,1279,2.523,1280,2.143,1281,2.143,1282,2.143,1283,2.143,1284,2.523,1285,2.143,1286,2.143,1287,2.143,1288,2.143,1289,2.043,1290,1.476,1291,2.043,1292,2.769,1293,2.639,1294,1.476,1295,2.143,1296,1.343,1297,1.476,1298,1.476,1299,2.143,1300,2.143,1301,2.143,1302,2.143,1303,1.476,1304,2.043,1305,2.143,1306,2.143,1307,2.143,1308,2.143,1309,2.523,1310,1.476,1311,1.476,1312,1.476,1313,2.405,1314,1.476,1315,2.043,1316,1.476,1317,1.476,1318,1.476,1319,1.476,1320,1.476,1321,1.476,1322,1.476,1323,1.476,1324,1.476,1325,1.476,1326,2.143,1327,1.476,1328,1.476,1329,1.476,1330,2.143,1331,2.043,1332,2.802,1333,1.476,1334,1.476,1335,1.476,1336,1.476,1337,1.476,1338,1.476,1339,1.476,1340,1.476,1341,1.476,1342,1.476,1343,1.476,1344,1.476,1345,1.407,1346,1.407,1347,1.476,1348,2.143,1349,2.405,1350,2.143,1351,2.143,1352,2.143,1353,2.143,1354,2.143,1355,2.143,1356,2.143,1357,2.143,1358,2.143,1359,2.143,1360,1.476,1361,1.476,1362,2.143,1363,1.476,1364,1.476,1365,1.476,1366,1.476,1367,1.407,1368,2.802,1369,1.407,1370,1.476,1371,1.343,1372,1.476,1373,2.043,1374,1.476,1375,1.476,1376,2.043,1377,1.476,1378,1.476,1379,1.407,1380,1.407,1381,1.476,1382,1.476,1383,1.476,1384,1.476,1385,1.476,1386,1.476,1387,1.476,1388,1.476,1389,1.476,1390,1.476,1391,1.476,1392,1.476,1393,1.476,1394,1.476,1395,1.343,1396,1.476,1397,1.476,1398,1.476,1399,1.476,1400,1.476,1401,1.476,1402,1.476,1403,1.476,1404,1.476,1405,1.476,1406,1.476,1407,1.476,1408,1.476,1409,1.476,1410,1.476,1411,1.476,1412,1.476,1413,1.407,1414,1.476,1415,1.476,1416,1.407,1417,1.407,1418,1.407,1419,1.343,1420,1.407,1421,1.343]],["title/interfaces/IDiscussionAllContext.html",[308,0.48,1433,2.009]],["body/interfaces/IDiscussionAllContext.html",[3,0.189,4,0.189,5,0.165,8,0.339,16,0.016,17,0.313,22,2.001,25,0.275,26,0.013,27,0.013,50,0.654,62,0.463,68,0.85,203,1.748,243,3.41,285,1.501,287,2.184,290,1.501,308,0.967,393,2.915,418,1.437,521,1.332,549,2.511,750,2.393,790,3.215,812,2.184,837,1.386,941,1.627,1205,2.781,1272,1.627,1422,3.801,1423,2.938,1424,2.938,1425,2.781,1426,3.387,1427,2.938,1428,2.781,1429,2.938,1430,2.781,1431,3.058,1432,3.387,1433,3.387,1434,4.016,1435,4.016,1436,4.016,1437,2.781,1438,2.938]],["title/interfaces/IDiscussionTab.html",[308,0.48,1293,1.729]],["body/interfaces/IDiscussionTab.html",[0,0.336,3,0.108,4,0.108,5,0.095,8,0.336,16,0.016,17,0.379,19,2.492,25,0.265,26,0.009,27,0.009,31,0.625,43,0.599,50,0.451,62,0.424,68,0.867,87,1.679,114,1.163,138,1.212,151,0.93,160,0.575,168,0.599,179,0.84,203,1.888,205,0.441,206,0.862,230,1.43,247,1.917,285,1.489,290,0.862,308,0.921,312,1.917,318,2.266,324,0.935,336,1.489,397,2.092,398,1.75,418,1.805,521,0.765,560,2.778,581,2.61,585,2.048,588,2.165,603,2.009,618,1.679,626,1.917,629,1.312,668,2.006,674,1.833,679,0.973,681,1.2,700,0.898,742,1.102,769,1.917,773,1.254,780,1.833,837,1.163,855,1.833,941,0.935,1044,2.768,1089,1.312,1094,1.917,1102,1.312,1117,2.784,1147,1.15,1271,2.373,1272,0.935,1273,1.375,1274,2.108,1275,2.108,1276,2.108,1277,2.108,1278,2.49,1279,2.49,1280,2.108,1281,2.108,1282,2.108,1283,2.108,1284,2.49,1285,2.108,1286,2.108,1287,2.108,1288,2.108,1289,2.009,1290,1.443,1291,1.375,1292,1.443,1293,2.373,1294,2.739,1295,2.913,1296,1.312,1297,2.739,1298,1.443,1299,2.108,1300,2.108,1301,2.108,1302,2.108,1303,1.443,1304,2.009,1305,2.108,1306,2.108,1307,2.108,1308,2.108,1309,2.49,1310,1.443,1311,1.443,1312,1.443,1313,2.373,1314,1.443,1315,2.009,1316,1.443,1317,1.443,1318,1.443,1319,1.443,1320,1.443,1321,1.443,1322,1.443,1323,1.443,1324,1.443,1325,1.443,1326,2.108,1327,1.443,1328,1.443,1329,1.443,1330,2.108,1331,2.009,1332,2.777,1333,1.443,1334,1.443,1335,1.443,1336,1.443,1337,1.443,1338,1.443,1339,1.443,1340,1.443,1341,1.443,1342,1.443,1343,1.443,1344,1.443,1345,1.375,1346,1.375,1347,1.443,1348,2.108,1349,2.373,1350,2.108,1351,2.108,1352,2.108,1353,2.108,1354,2.108,1355,2.108,1356,2.108,1357,2.108,1358,2.108,1359,2.108,1360,1.443,1361,1.443,1362,2.108,1363,1.443,1364,1.443,1365,1.443,1366,1.443,1367,1.375,1368,2.777,1369,1.375,1370,1.443,1371,1.312,1372,1.443,1373,2.009,1374,1.443,1375,1.443,1376,2.009,1377,1.443,1378,1.443,1379,1.375,1380,1.375,1381,1.443,1382,1.443,1383,1.443,1384,1.443,1385,1.443,1386,1.443,1387,1.443,1388,1.443,1389,1.443,1390,1.443,1391,1.443,1392,1.443,1393,1.443,1394,1.443,1395,1.312,1396,1.443,1397,1.443,1398,1.443,1399,1.443,1400,1.443,1401,1.443,1402,1.443,1403,1.443,1404,1.443,1405,1.443,1406,1.443,1407,1.443,1408,1.443,1409,1.443,1410,1.443,1411,1.443,1412,1.443,1413,1.375,1414,1.443,1415,1.443,1416,1.375,1417,1.375,1418,1.375,1419,1.312,1420,1.375,1421,1.312]],["title/interfaces/IEditor.html",[308,0.48,1373,1.729]],["body/interfaces/IEditor.html",[0,0.338,3,0.11,4,0.11,5,0.096,8,0.338,16,0.016,17,0.312,19,1.329,25,0.266,26,0.009,27,0.009,31,0.632,43,0.607,50,0.455,62,0.338,68,0.867,87,1.694,114,1.174,138,1.217,151,0.934,160,0.582,168,0.607,179,0.847,203,1.883,205,0.446,206,0.873,230,1.44,247,1.935,285,1.827,290,0.873,308,0.923,312,1.935,318,2.281,324,0.946,336,1.499,397,2.104,398,1.763,418,1.806,521,0.774,560,2.786,581,2.625,585,2.058,588,2.181,603,2.027,618,1.694,626,1.935,629,1.329,668,2.018,674,1.849,679,0.985,681,1.215,700,0.909,742,1.115,769,1.935,773,1.27,780,1.849,837,1.174,855,1.849,941,0.946,1044,2.998,1089,1.329,1094,1.935,1102,1.329,1147,1.164,1271,2.39,1272,0.946,1273,1.392,1274,2.126,1275,2.126,1276,2.126,1277,2.126,1278,2.508,1279,2.508,1280,2.126,1281,2.126,1282,2.126,1283,2.126,1284,2.508,1285,2.126,1286,2.126,1287,2.126,1288,2.126,1289,2.027,1290,1.46,1291,1.392,1292,1.46,1293,2.027,1294,1.46,1295,2.126,1296,1.329,1297,1.46,1298,1.46,1299,2.126,1300,2.126,1301,2.126,1302,2.126,1303,1.46,1304,2.027,1305,2.126,1306,2.126,1307,2.126,1308,2.126,1309,2.508,1310,1.46,1311,1.46,1312,1.46,1313,2.39,1314,1.46,1315,2.027,1316,1.46,1317,1.46,1318,1.46,1319,1.46,1320,1.46,1321,1.46,1322,1.46,1323,1.46,1324,1.46,1325,1.46,1326,2.126,1327,1.46,1328,1.46,1329,1.46,1330,2.126,1331,2.027,1332,2.79,1333,1.46,1334,1.46,1335,1.46,1336,1.46,1337,1.46,1338,1.46,1339,1.46,1340,1.46,1341,1.46,1342,1.46,1343,1.46,1344,1.46,1345,1.392,1346,1.392,1347,1.46,1348,2.126,1349,2.912,1350,2.126,1351,2.126,1352,2.126,1353,2.126,1354,2.126,1355,2.126,1356,2.126,1357,2.126,1358,2.126,1359,2.126,1360,1.46,1361,1.46,1362,2.126,1363,1.46,1364,1.46,1365,1.46,1366,1.46,1367,1.392,1368,2.79,1369,1.392,1370,1.46,1371,1.329,1372,1.46,1373,2.39,1374,1.46,1375,1.46,1376,2.027,1377,1.46,1378,1.46,1379,1.392,1380,1.392,1381,1.46,1382,1.46,1383,1.46,1384,1.46,1385,1.46,1386,1.46,1387,1.46,1388,1.46,1389,1.46,1390,1.46,1391,1.46,1392,1.46,1393,1.46,1394,1.46,1395,1.329,1396,1.46,1397,1.46,1398,1.46,1399,1.46,1400,1.46,1401,1.46,1402,1.46,1403,1.46,1404,1.46,1405,1.46,1406,1.46,1407,1.46,1408,1.46,1409,1.46,1410,1.46,1411,1.46,1412,1.46,1413,1.392,1414,1.46,1415,1.46,1416,1.392,1417,1.392,1418,1.392,1419,1.329,1420,1.392,1421,1.329]],["title/interfaces/IMenuOptions.html",[308,0.48,1431,1.814]],["body/interfaces/IMenuOptions.html",[3,0.19,4,0.19,5,0.167,8,0.342,16,0.016,17,0.316,22,2.02,25,0.275,26,0.013,27,0.013,50,0.658,62,0.447,68,0.851,203,1.827,243,3.281,285,1.515,287,2.204,290,1.515,308,0.968,393,2.931,418,1.445,521,1.344,549,2.535,750,2.416,790,3.708,812,2.204,837,1.399,941,1.642,1205,2.807,1272,1.642,1422,3.406,1423,2.966,1424,2.966,1425,2.807,1426,3.406,1427,2.966,1428,2.807,1429,2.966,1430,2.807,1431,3.311,1432,3.906,1433,2.807,1434,2.966,1435,2.966,1436,2.966,1437,2.807,1438,2.966]],["title/interfaces/IMenuOptions-1.html",[308,0.4,341,1.206,1431,1.514]],["body/interfaces/IMenuOptions-1.html",[3,0.19,4,0.19,5,0.167,8,0.342,16,0.016,17,0.316,22,2.02,25,0.275,26,0.013,27,0.013,50,0.658,62,0.447,68,0.851,203,1.827,243,3.281,285,1.515,287,2.204,290,1.515,308,0.968,393,2.931,418,1.445,521,1.344,549,2.535,750,2.416,790,3.708,812,2.204,837,1.399,941,1.642,1205,2.807,1272,1.642,1422,3.406,1423,2.966,1424,2.966,1425,2.807,1426,3.406,1427,2.966,1428,2.807,1429,2.966,1430,2.807,1431,3.311,1432,3.906,1433,2.807,1434,2.966,1435,2.966,1436,2.966,1437,2.807,1438,2.966]],["title/interfaces/IPageData.html",[308,0.48,1368,1.729]],["body/interfaces/IPageData.html",[0,0.339,3,0.11,4,0.11,5,0.097,8,0.339,16,0.016,17,0.313,19,1.336,25,0.266,26,0.009,27,0.009,31,0.636,43,0.61,50,0.457,62,0.288,68,0.866,87,1.701,114,1.178,138,1.22,151,0.936,160,0.585,168,0.61,179,0.85,203,1.89,205,0.449,206,0.878,230,1.445,247,1.942,285,1.504,290,0.878,308,0.924,312,1.942,318,2.288,324,0.951,336,1.504,397,2.109,398,1.768,418,1.807,521,0.779,560,2.789,581,2.632,585,2.062,588,2.187,603,2.035,618,1.701,626,1.942,629,1.336,668,2.023,674,1.856,679,0.991,681,2.298,700,0.914,742,1.121,769,1.942,773,1.277,780,1.856,837,1.178,855,1.856,941,0.951,1044,2.785,1089,2.512,1094,1.942,1102,1.336,1147,1.17,1271,2.397,1272,0.951,1273,1.399,1274,2.135,1275,2.135,1276,2.135,1277,2.135,1278,2.515,1279,2.515,1280,2.135,1281,2.135,1282,2.135,1283,2.135,1284,2.515,1285,2.135,1286,2.135,1287,2.135,1288,2.135,1289,2.035,1290,1.468,1291,1.399,1292,1.468,1293,2.035,1294,1.468,1295,2.135,1296,1.336,1297,1.468,1298,1.468,1299,2.135,1300,2.135,1301,2.135,1302,2.135,1303,1.468,1304,2.035,1305,2.135,1306,2.135,1307,2.135,1308,2.135,1309,2.515,1310,1.468,1311,1.468,1312,1.468,1313,2.397,1314,1.468,1315,2.035,1316,1.468,1317,1.468,1318,1.468,1319,1.468,1320,1.468,1321,1.468,1322,1.468,1323,1.468,1324,1.468,1325,1.468,1326,2.135,1327,1.468,1328,1.468,1329,1.468,1330,2.135,1331,2.035,1332,2.796,1333,1.468,1334,1.468,1335,1.468,1336,1.468,1337,1.468,1338,1.468,1339,1.468,1340,1.468,1341,1.468,1342,1.468,1343,1.468,1344,1.468,1345,1.399,1346,1.399,1347,1.468,1348,2.135,1349,2.397,1350,2.135,1351,2.135,1352,2.135,1353,2.135,1354,2.135,1355,2.135,1356,2.135,1357,2.135,1358,2.135,1359,2.135,1360,1.468,1361,1.468,1362,2.135,1363,1.468,1364,1.468,1365,1.468,1366,1.468,1367,1.399,1368,2.918,1369,1.399,1370,1.468,1371,1.336,1372,1.468,1373,2.035,1374,1.468,1375,1.468,1376,2.035,1377,1.468,1378,1.468,1379,1.399,1380,1.399,1381,1.468,1382,1.468,1383,1.468,1384,1.468,1385,1.468,1386,1.468,1387,1.468,1388,1.468,1389,1.468,1390,1.468,1391,1.468,1392,1.468,1393,1.468,1394,1.468,1395,1.336,1396,1.468,1397,1.468,1398,1.468,1399,1.468,1400,1.468,1401,1.468,1402,1.468,1403,1.468,1404,1.468,1405,1.468,1406,1.468,1407,1.468,1408,1.468,1409,1.468,1410,1.468,1411,1.468,1412,1.468,1413,1.399,1414,1.468,1415,1.468,1416,1.399,1417,1.399,1418,1.399,1419,1.336,1420,1.399,1421,1.336]],["title/interfaces/IPagination.html",[308,0.48,1331,1.729]],["body/interfaces/IPagination.html",[0,0.333,3,0.107,4,0.107,5,0.094,8,0.333,16,0.016,17,0.308,18,0.911,19,1.294,25,0.265,26,0.009,27,0.009,31,0.616,43,0.591,50,0.446,62,0.433,68,0.865,87,1.662,114,1.151,138,1.206,151,0.925,160,0.567,168,0.591,179,0.831,203,1.878,205,0.435,206,0.85,230,1.419,247,1.897,285,1.477,290,0.85,308,0.919,312,1.897,318,2.247,324,0.921,336,1.477,397,2.078,398,1.736,418,1.806,521,0.754,560,2.769,581,2.593,585,2.036,588,2.148,603,1.988,618,1.662,626,1.897,629,1.294,668,1.992,674,1.814,679,0.96,681,1.183,700,0.885,742,1.086,769,1.897,773,2.365,780,1.814,837,1.151,855,1.814,941,0.921,1044,2.754,1089,1.294,1094,1.897,1102,2.475,1147,2.168,1271,2.354,1272,0.921,1273,1.355,1274,2.086,1275,2.086,1276,2.086,1277,2.086,1278,2.47,1279,2.47,1280,2.086,1281,2.086,1282,2.086,1283,2.086,1284,2.47,1285,2.086,1286,2.086,1287,2.086,1288,2.086,1289,1.988,1290,1.422,1291,1.355,1292,1.422,1293,1.988,1294,1.422,1295,2.086,1296,1.294,1297,1.422,1298,1.422,1299,2.086,1300,2.086,1301,2.086,1302,2.086,1303,1.422,1304,1.988,1305,2.086,1306,2.086,1307,2.086,1308,2.086,1309,2.47,1310,1.422,1311,1.422,1312,1.422,1313,2.354,1314,1.422,1315,1.988,1316,1.422,1317,1.422,1318,1.422,1319,1.422,1320,1.422,1321,1.422,1322,1.422,1323,1.422,1324,1.422,1325,1.422,1326,2.086,1327,1.422,1328,1.422,1329,1.422,1330,2.086,1331,2.354,1332,2.761,1333,1.422,1334,1.422,1335,1.422,1336,1.422,1337,1.422,1338,1.422,1339,1.422,1340,1.422,1341,1.422,1342,1.422,1343,1.422,1344,1.422,1345,1.355,1346,1.355,1347,1.422,1348,2.086,1349,2.354,1350,2.086,1351,2.086,1352,2.086,1353,2.086,1354,2.086,1355,2.086,1356,2.086,1357,2.086,1358,2.086,1359,2.086,1360,1.422,1361,1.422,1362,2.086,1363,1.422,1364,1.422,1365,1.422,1366,1.422,1367,2.593,1368,3.284,1369,2.593,1370,2.72,1371,2.475,1372,2.72,1373,1.988,1374,1.422,1375,1.422,1376,1.988,1377,1.422,1378,1.422,1379,1.355,1380,1.355,1381,1.422,1382,1.422,1383,1.422,1384,1.422,1385,1.422,1386,1.422,1387,1.422,1388,1.422,1389,1.422,1390,1.422,1391,1.422,1392,1.422,1393,1.422,1394,1.422,1395,1.294,1396,1.422,1397,1.422,1398,1.422,1399,1.422,1400,1.422,1401,1.422,1402,1.422,1403,1.422,1404,1.422,1405,1.422,1406,1.422,1407,1.422,1408,1.422,1409,1.422,1410,1.422,1411,1.422,1412,1.422,1413,1.355,1414,1.422,1415,1.422,1416,1.355,1417,1.355,1418,1.355,1419,1.294,1420,1.355,1421,1.294]],["title/interfaces/IPosts.html",[308,0.48,1332,1.729]],["body/interfaces/IPosts.html",[0,0.309,3,0.094,4,0.094,5,0.082,8,0.39,16,0.016,17,0.285,18,1.112,19,1.137,25,0.259,26,0.008,27,0.008,31,0.541,43,0.519,50,0.405,62,0.495,68,0.863,87,1.51,114,1.514,138,1.26,151,0.882,160,0.498,168,0.519,179,0.755,203,1.912,205,0.382,206,0.747,230,1.314,247,1.724,285,1.368,290,0.747,308,0.898,312,1.724,318,2.081,324,0.81,336,1.368,397,1.949,398,2.029,418,1.806,521,0.663,560,2.824,581,2.433,585,1.928,588,1.989,603,2.614,618,1.51,626,2.495,629,1.137,668,1.869,674,1.647,679,1.722,681,1.04,700,0.778,742,0.955,769,1.724,773,1.087,780,1.647,837,1.046,855,1.647,941,1.654,1044,2.877,1089,1.137,1094,1.724,1102,1.137,1117,2.503,1147,0.996,1271,2.614,1272,0.81,1273,1.191,1274,1.895,1275,1.895,1276,1.895,1277,1.895,1278,2.288,1279,2.288,1280,1.895,1281,1.895,1282,1.895,1283,1.895,1284,2.288,1285,1.895,1286,1.895,1287,1.895,1288,1.895,1289,1.806,1290,1.25,1291,1.191,1292,1.25,1293,1.806,1294,1.25,1295,1.895,1296,1.137,1297,1.25,1298,1.25,1299,1.895,1300,1.895,1301,1.895,1302,2.743,1303,1.25,1304,2.614,1305,2.743,1306,2.743,1307,2.743,1308,2.743,1309,2.886,1310,1.25,1311,1.25,1312,1.25,1313,2.614,1314,1.25,1315,1.806,1316,1.25,1317,1.25,1318,1.25,1319,1.25,1320,1.25,1321,1.25,1322,1.25,1323,1.25,1324,1.25,1325,1.25,1326,1.895,1327,1.25,1328,1.25,1329,1.25,1330,1.895,1331,1.806,1332,2.751,1333,1.25,1334,1.25,1335,1.25,1336,1.25,1337,1.25,1338,1.25,1339,1.25,1340,1.25,1341,1.25,1342,1.25,1343,1.25,1344,1.25,1345,1.191,1346,1.191,1347,1.25,1348,1.895,1349,2.18,1350,1.895,1351,1.895,1352,1.895,1353,1.895,1354,1.895,1355,1.895,1356,1.895,1357,1.895,1358,1.895,1359,1.895,1360,1.25,1361,1.25,1362,1.895,1363,1.25,1364,1.25,1365,1.25,1366,1.25,1367,1.191,1368,2.614,1369,1.191,1370,1.25,1371,1.137,1372,1.25,1373,2.433,1374,2.552,1375,2.552,1376,2.433,1377,2.552,1378,2.552,1379,2.433,1380,2.433,1381,2.552,1382,2.552,1383,1.25,1384,1.25,1385,2.552,1386,2.552,1387,2.552,1388,2.552,1389,2.552,1390,2.552,1391,1.25,1392,1.25,1393,1.25,1394,1.25,1395,1.137,1396,1.25,1397,1.25,1398,1.25,1399,1.25,1400,1.25,1401,1.25,1402,1.25,1403,1.25,1404,1.25,1405,1.25,1406,1.25,1407,1.25,1408,1.25,1409,1.25,1410,1.25,1411,1.25,1412,1.25,1413,1.191,1414,1.25,1415,1.25,1416,1.191,1417,1.191,1418,1.191,1419,1.137,1420,1.191,1421,1.137]],["title/interfaces/IRelatedDiscussion.html",[308,0.48,1346,1.729]],["body/interfaces/IRelatedDiscussion.html",[0,0.337,3,0.109,4,0.109,5,0.096,8,0.337,16,0.016,17,0.311,19,1.321,25,0.266,26,0.009,27,0.009,31,0.629,43,0.603,50,0.453,62,0.371,68,0.867,87,1.688,114,1.169,138,1.311,151,0.932,160,0.579,168,0.603,179,0.844,203,1.882,205,0.444,206,0.868,230,1.436,247,1.927,285,1.495,290,0.868,308,0.923,312,1.927,318,2.274,324,0.941,336,1.495,397,2.099,398,1.757,418,1.806,521,1.457,560,2.782,581,2.619,585,2.268,588,2.174,603,2.019,618,1.688,626,1.927,629,1.321,668,2.013,674,1.842,679,0.98,681,1.209,700,0.904,742,1.109,769,1.927,773,1.263,780,1.842,837,1.169,855,1.842,941,0.941,1044,2.775,1089,1.321,1094,1.927,1102,1.321,1147,1.157,1271,2.383,1272,0.941,1273,1.384,1274,2.118,1275,2.118,1276,2.118,1277,2.118,1278,2.5,1279,2.5,1280,2.118,1281,2.118,1282,2.118,1283,2.118,1284,2.5,1285,2.118,1286,2.118,1287,2.118,1288,2.118,1289,2.019,1290,1.453,1291,1.384,1292,1.453,1293,2.019,1294,1.453,1295,2.118,1296,1.321,1297,1.453,1298,1.453,1299,2.118,1300,2.118,1301,2.118,1302,2.118,1303,1.453,1304,2.019,1305,2.118,1306,2.118,1307,2.118,1308,2.118,1309,2.5,1310,1.453,1311,1.453,1312,1.453,1313,2.383,1314,1.453,1315,2.019,1316,1.453,1317,1.453,1318,1.453,1319,1.453,1320,1.453,1321,1.453,1322,1.453,1323,1.453,1324,1.453,1325,1.453,1326,2.118,1327,1.453,1328,1.453,1329,1.453,1330,2.118,1331,2.019,1332,2.784,1333,1.453,1334,1.453,1335,1.453,1336,1.453,1337,1.453,1338,1.453,1339,1.453,1340,1.453,1341,1.453,1342,1.453,1343,1.453,1344,1.453,1345,1.384,1346,2.019,1347,2.748,1348,2.118,1349,2.383,1350,2.118,1351,2.118,1352,2.118,1353,2.118,1354,2.118,1355,2.118,1356,2.118,1357,2.118,1358,2.118,1359,2.118,1360,1.453,1361,1.453,1362,2.118,1363,1.453,1364,1.453,1365,1.453,1366,1.453,1367,1.384,1368,2.784,1369,1.384,1370,1.453,1371,1.321,1372,1.453,1373,2.019,1374,1.453,1375,1.453,1376,2.019,1377,1.453,1378,1.453,1379,1.384,1380,1.384,1381,1.453,1382,1.453,1383,1.453,1384,1.453,1385,1.453,1386,1.453,1387,1.453,1388,1.453,1389,1.453,1390,1.453,1391,1.453,1392,1.453,1393,1.453,1394,1.453,1395,1.321,1396,1.453,1397,1.453,1398,1.453,1399,1.453,1400,1.453,1401,1.453,1402,1.453,1403,1.453,1404,1.453,1405,1.453,1406,1.453,1407,1.453,1408,1.453,1409,1.453,1410,1.453,1411,1.453,1412,1.453,1413,1.384,1414,1.453,1415,1.453,1416,1.384,1417,1.384,1418,1.384,1419,1.321,1420,1.384,1421,1.321]],["title/interfaces/ITag.html",[308,0.48,1315,1.729]],["body/interfaces/ITag.html",[0,0.336,3,0.109,4,0.109,5,0.095,8,0.336,16,0.016,17,0.31,19,1.314,25,0.265,26,0.009,27,0.009,31,0.626,43,0.6,50,0.451,62,0.393,68,0.867,87,1.681,114,1.164,138,1.213,151,0.93,160,0.576,168,0.6,179,0.841,203,1.881,205,0.838,206,0.864,230,1.432,247,1.92,285,1.49,290,0.864,308,0.922,312,1.92,318,2.268,324,0.936,336,1.82,397,2.093,398,1.752,418,1.806,521,0.766,560,2.779,581,2.612,585,2.049,588,2.647,603,2.011,618,1.681,626,1.92,629,1.314,668,2.008,674,1.835,679,0.975,681,1.202,700,0.899,742,1.103,769,1.92,773,1.256,780,1.835,837,1.164,855,1.835,941,0.936,1044,2.77,1089,1.314,1094,1.92,1102,1.314,1147,1.151,1271,2.375,1272,0.936,1273,1.377,1274,2.11,1275,2.11,1276,2.11,1277,2.11,1278,2.492,1279,2.492,1280,2.11,1281,2.11,1282,2.11,1283,2.11,1284,2.492,1285,2.11,1286,2.11,1287,2.11,1288,2.11,1289,2.011,1290,1.445,1291,1.377,1292,1.445,1293,2.011,1294,1.445,1295,2.11,1296,1.314,1297,1.445,1298,1.445,1299,2.11,1300,2.11,1301,2.11,1302,2.11,1303,1.445,1304,2.011,1305,2.11,1306,2.11,1307,2.11,1308,2.11,1309,2.492,1310,1.445,1311,1.445,1312,1.445,1313,2.375,1314,1.445,1315,2.375,1316,1.445,1317,1.445,1318,1.445,1319,1.445,1320,1.445,1321,1.445,1322,1.445,1323,1.445,1324,1.445,1325,1.445,1326,2.11,1327,1.445,1328,1.445,1329,1.445,1330,2.11,1331,2.011,1332,2.778,1333,1.445,1334,1.445,1335,1.445,1336,1.445,1337,1.445,1338,1.445,1339,1.445,1340,1.445,1341,1.445,1342,1.445,1343,1.445,1344,2.741,1345,2.612,1346,1.377,1347,1.445,1348,2.11,1349,2.375,1350,2.11,1351,2.11,1352,2.11,1353,2.11,1354,2.11,1355,2.11,1356,2.11,1357,2.11,1358,2.11,1359,2.11,1360,1.445,1361,1.445,1362,2.11,1363,1.445,1364,1.445,1365,1.445,1366,1.445,1367,1.377,1368,2.778,1369,1.377,1370,1.445,1371,1.314,1372,1.445,1373,2.011,1374,1.445,1375,1.445,1376,2.011,1377,1.445,1378,1.445,1379,1.377,1380,1.377,1381,1.445,1382,1.445,1383,1.445,1384,1.445,1385,1.445,1386,1.445,1387,1.445,1388,1.445,1389,1.445,1390,1.445,1391,1.445,1392,1.445,1393,1.445,1394,1.445,1395,1.314,1396,1.445,1397,1.445,1398,1.445,1399,1.445,1400,1.445,1401,1.445,1402,1.445,1403,1.445,1404,1.445,1405,1.445,1406,1.445,1407,1.445,1408,1.445,1409,1.445,1410,1.445,1411,1.445,1412,1.445,1413,1.377,1414,1.445,1415,1.445,1416,1.377,1417,1.377,1418,1.377,1419,1.314,1420,1.377,1421,1.314]],["title/interfaces/ITelemetryObj.html",[308,0.48,1439,3.028]],["body/interfaces/ITelemetryObj.html",[0,0.273,3,0.152,4,0.152,5,0.133,8,0.402,16,0.016,18,0.892,21,0.924,25,0.152,26,0.011,27,0.011,50,0.57,57,1.48,58,0.989,62,0.498,68,0.674,72,0.589,73,1.61,74,1.48,75,1.363,79,1.757,81,1.872,126,1.257,151,0.618,165,1.161,205,0.618,233,2.46,276,2.238,308,0.534,341,2.525,393,3.139,485,2.035,501,3.373,521,1.747,540,1.757,542,2.238,543,2.238,552,2.276,637,5.498,638,2.712,653,1.757,676,2.859,679,2.011,743,2.124,812,2.317,871,5.29,1117,4.186,1169,3.373,1179,3.117,1272,1.309,1296,1.838,1439,5.29,1440,3.755,1441,6.287,1442,6.287,1443,3.755,1444,3.755,1445,3.755,1446,3.755,1447,5.54,1448,6.122,1449,3.755,1450,3.755,1451,4.952,1452,4.952,1453,3.755,1454,3.755,1455,3.755,1456,3.755,1457,3.755,1458,3.755,1459,3.755,1460,4.952,1461,3.755,1462,3.755,1463,3.755,1464,3.755,1465,3.755,1466,3.755,1467,3.755,1468,4.952,1469,6.411,1470,5.54,1471,3.755,1472,3.755,1473,3.755,1474,3.755,1475,3.755,1476,3.755,1477,3.755,1478,3.755,1479,3.755,1480,3.755,1481,3.755,1482,4.952,1483,3.755,1484,3.755,1485,3.755,1486,3.755,1487,4.952,1488,3.755,1489,3.755,1490,3.755,1491,3.755]],["title/interfaces/ITopic.html",[308,0.48,1376,1.729]],["body/interfaces/ITopic.html",[0,0.331,3,0.106,4,0.106,5,0.093,8,0.331,16,0.016,17,0.306,19,1.28,25,0.264,26,0.009,27,0.009,31,0.609,43,0.585,50,0.443,62,0.448,68,0.866,87,1.649,114,1.142,138,1.201,151,0.922,160,0.561,168,0.585,179,0.825,203,1.877,205,0.43,206,0.841,230,1.41,247,1.883,285,1.468,290,0.841,308,0.917,312,1.883,318,2.233,324,0.912,336,1.468,397,2.381,398,2.12,418,1.808,521,0.746,560,2.762,581,2.972,585,2.248,588,2.135,603,1.973,618,1.649,626,1.883,629,1.28,668,2.284,674,1.8,679,0.95,681,1.171,700,0.876,742,1.075,769,1.883,773,1.224,780,1.8,837,1.142,855,1.8,941,0.912,1044,2.97,1089,1.28,1094,1.883,1102,1.28,1147,1.121,1271,2.34,1272,0.912,1273,1.341,1274,2.07,1275,2.07,1276,2.07,1277,2.07,1278,2.455,1279,2.455,1280,2.07,1281,2.07,1282,2.07,1283,2.07,1284,2.455,1285,2.07,1286,2.07,1287,2.07,1288,2.07,1289,1.973,1290,1.407,1291,1.341,1292,1.407,1293,1.973,1294,1.407,1295,2.07,1296,1.28,1297,1.407,1298,1.407,1299,2.884,1300,2.884,1301,2.07,1302,2.07,1303,1.407,1304,1.973,1305,2.07,1306,2.07,1307,2.07,1308,2.07,1309,3.016,1310,1.407,1311,1.407,1312,1.407,1313,2.34,1314,1.407,1315,1.973,1316,1.407,1317,1.407,1318,1.407,1319,1.407,1320,1.407,1321,1.407,1322,1.407,1323,1.407,1324,1.407,1325,1.407,1326,2.07,1327,1.407,1328,1.407,1329,1.407,1330,2.884,1331,1.973,1332,2.749,1333,1.407,1334,1.407,1335,1.407,1336,1.407,1337,1.407,1338,1.407,1339,1.407,1340,1.407,1341,1.407,1342,1.407,1343,1.407,1344,1.407,1345,1.341,1346,1.341,1347,1.407,1348,2.07,1349,2.34,1350,2.07,1351,2.07,1352,2.07,1353,2.07,1354,2.07,1355,2.07,1356,2.07,1357,2.07,1358,2.07,1359,2.07,1360,1.407,1361,1.407,1362,2.07,1363,1.407,1364,1.407,1365,1.407,1366,1.407,1367,1.341,1368,2.749,1369,1.341,1370,1.407,1371,1.28,1372,1.407,1373,1.973,1374,1.407,1375,1.407,1376,2.34,1377,1.407,1378,1.407,1379,1.341,1380,1.341,1381,1.407,1382,1.407,1383,1.407,1384,1.407,1385,1.407,1386,1.407,1387,1.407,1388,1.407,1389,1.407,1390,1.407,1391,1.407,1392,1.407,1393,1.407,1394,1.407,1395,1.28,1396,1.407,1397,1.407,1398,1.407,1399,1.407,1400,1.407,1401,1.407,1402,1.407,1403,1.407,1404,1.407,1405,1.407,1406,1.407,1407,1.407,1408,1.407,1409,1.407,1410,1.407,1411,1.407,1412,1.407,1413,1.341,1414,1.407,1415,1.407,1416,1.341,1417,1.341,1418,1.341,1419,1.28,1420,1.341,1421,1.28]],["title/interfaces/IUser.html",[308,0.48,1313,1.729]],["body/interfaces/IUser.html",[0,0.314,3,0.096,4,0.096,5,0.084,8,0.314,16,0.016,17,0.29,18,1.226,19,1.168,25,0.26,26,0.008,27,0.008,31,0.556,43,0.533,50,0.413,62,0.483,68,0.867,87,1.54,114,1.067,138,1.162,151,0.891,160,0.511,168,0.533,179,0.77,203,1.868,205,0.392,206,0.768,230,1.335,247,2.354,285,1.743,290,0.768,308,0.902,312,1.759,318,2.115,324,0.832,336,1.39,397,1.976,398,1.634,418,1.804,521,0.681,560,2.884,581,2.884,585,1.95,588,2.022,603,1.842,618,1.54,626,1.759,629,1.168,668,1.895,674,1.681,679,0.866,681,1.068,700,0.799,742,0.981,769,1.759,773,1.116,780,1.681,837,1.067,855,1.681,941,0.832,1044,2.898,1089,1.168,1094,1.759,1102,1.168,1147,1.023,1271,2.216,1272,0.832,1273,1.224,1274,1.933,1275,1.933,1276,1.933,1277,1.933,1278,2.325,1279,2.325,1280,1.933,1281,1.933,1282,1.933,1283,1.933,1284,2.325,1285,1.933,1286,1.933,1287,1.933,1288,1.933,1289,1.842,1290,1.284,1291,1.224,1292,1.284,1293,1.842,1294,1.284,1295,1.933,1296,1.168,1297,1.284,1298,1.284,1299,1.933,1300,1.933,1301,1.933,1302,1.933,1303,1.284,1304,1.842,1305,1.933,1306,1.933,1307,1.933,1308,1.933,1309,2.325,1310,1.284,1311,1.284,1312,1.284,1313,2.466,1314,1.284,1315,1.842,1316,1.284,1317,1.284,1318,1.284,1319,1.284,1320,1.284,1321,1.284,1322,1.284,1323,1.284,1324,1.284,1325,1.284,1326,1.933,1327,1.284,1328,1.284,1329,1.284,1330,1.933,1331,1.842,1332,2.645,1333,1.284,1334,1.284,1335,1.284,1336,1.284,1337,1.284,1338,1.284,1339,1.284,1340,1.284,1341,1.284,1342,1.284,1343,1.284,1344,1.284,1345,1.224,1346,1.224,1347,1.284,1348,2.775,1349,2.779,1350,2.775,1351,2.775,1352,2.775,1353,2.775,1354,2.775,1355,2.775,1356,2.775,1357,2.775,1358,2.775,1359,2.775,1360,2.587,1361,2.587,1362,2.775,1363,2.587,1364,2.587,1365,2.587,1366,2.587,1367,1.224,1368,2.645,1369,1.224,1370,1.284,1371,1.168,1372,1.284,1373,1.842,1374,1.284,1375,1.284,1376,1.842,1377,1.284,1378,1.284,1379,1.224,1380,1.224,1381,1.284,1382,1.284,1383,1.284,1384,1.284,1385,1.284,1386,1.284,1387,1.284,1388,1.284,1389,1.284,1390,1.284,1391,1.284,1392,1.284,1393,1.284,1394,1.284,1395,1.168,1396,1.284,1397,1.284,1398,1.284,1399,1.284,1400,1.284,1401,1.284,1402,1.284,1403,1.284,1404,1.284,1405,1.284,1406,1.284,1407,1.284,1408,1.284,1409,1.284,1410,1.284,1411,1.284,1412,1.284,1413,1.224,1414,1.284,1415,1.284,1416,1.224,1417,1.224,1418,1.224,1419,1.168,1420,1.224,1421,1.168]],["title/interfaces/Icategory.html",[308,0.48,1426,2.009]],["body/interfaces/Icategory.html",[3,0.192,4,0.192,5,0.168,8,0.345,16,0.016,17,0.319,22,2.039,25,0.276,26,0.013,27,0.013,50,0.661,62,0.417,68,0.847,203,1.759,243,3.425,285,1.53,287,2.225,290,2.065,308,0.97,393,2.948,418,1.453,521,1.357,549,2.558,750,2.438,790,3.251,812,2.225,837,1.412,941,1.658,1205,2.833,1272,1.658,1422,3.425,1423,2.994,1424,2.994,1425,2.833,1426,3.682,1427,2.994,1428,2.833,1429,2.994,1430,2.833,1431,3.093,1432,3.425,1433,2.833,1434,2.994,1435,2.994,1436,2.994,1437,2.833,1438,2.994]],["title/interfaces/Icontext.html",[308,0.48,1430,2.009]],["body/interfaces/Icontext.html",[3,0.192,4,0.192,5,0.168,8,0.345,16,0.016,17,0.319,22,2.039,25,0.276,26,0.013,27,0.013,50,0.661,62,0.417,68,0.847,203,1.759,243,3.292,285,1.53,287,2.225,290,1.53,308,0.97,393,2.948,418,1.623,521,1.831,549,2.558,750,2.438,790,3.251,812,2.225,837,1.412,941,1.658,1205,2.833,1272,1.658,1422,3.425,1423,2.994,1424,2.994,1425,2.833,1426,3.425,1427,2.994,1428,2.833,1429,2.994,1430,3.425,1431,3.093,1432,3.425,1433,2.833,1434,2.994,1435,2.994,1436,2.994,1437,2.833,1438,2.994]],["title/interfaces/IdiscussionConfig.html",[22,1.446,308,0.48]],["body/interfaces/IdiscussionConfig.html",[3,0.174,4,0.174,5,0.152,8,0.312,16,0.016,17,0.288,18,1.255,22,2.316,25,0.27,26,0.012,27,0.012,50,0.622,62,0.496,68,0.854,203,1.833,243,3.342,285,1.993,287,2.899,290,1.383,308,0.952,393,3.274,418,1.567,521,1.226,549,3.334,750,3.178,790,3.055,812,2.764,837,1.276,941,1.498,1205,3.693,1272,1.498,1422,3.219,1423,2.706,1424,2.706,1425,3.693,1426,3.693,1427,3.901,1428,3.693,1429,3.901,1430,2.561,1431,2.906,1432,3.219,1433,2.561,1434,2.706,1435,2.706,1436,2.706,1437,2.561,1438,2.706]],["title/components/LibEntryComponent.html",[28,0.48,157,1.042]],["body/components/LibEntryComponent.html",[0,0.26,1,3.22,3,0.096,4,0.096,5,0.084,8,0.173,9,0.737,13,1.354,15,0.964,16,0.016,17,0.345,18,0.777,20,1.154,21,0.994,22,1.85,23,1.692,24,1.692,25,0.096,26,0.008,27,0.008,28,0.683,29,0.766,30,1.153,31,1.005,32,0.864,33,0.864,34,0.864,38,1.108,39,1.444,40,3.546,41,0.707,42,2.43,43,1.513,44,0.83,46,1.302,48,1.302,50,0.413,54,3.947,55,1.674,57,1.892,58,0.944,60,2.309,62,0.445,65,1.54,67,3.408,68,0.525,72,0.563,73,1.537,74,0.938,75,0.864,77,1.28,78,1.065,79,1.677,81,2.237,88,3.546,89,2.948,97,1.165,98,1.87,101,2.537,103,2.393,104,2.409,105,2.247,106,2.028,109,1.498,111,2.15,112,2.018,113,1.113,114,1.065,115,1.356,122,1.165,123,2.136,124,0.707,125,1.25,126,1.201,127,0.864,128,0.864,129,0.864,130,0.766,131,0.83,132,0.864,133,0.766,134,1.566,135,0.864,136,0.864,137,0.766,138,0.768,139,1.302,140,0.766,141,1.302,142,0.766,143,1.881,144,0.864,145,0.766,146,0.736,147,0.864,148,0.736,149,0.864,150,0.766,151,0.709,152,0.864,153,0.766,154,0.864,155,0.736,156,0.864,157,1.484,158,0.864,159,0.766,160,0.51,161,0.864,162,0.736,163,1.566,164,0.766,165,0.736,166,0.864,167,0.766,168,0.532,169,0.766,170,0.83,171,0.864,172,0.766,173,0.864,174,0.83,175,0.864,176,0.736,177,0.797,178,0.766,179,0.768,180,0.766,181,0.83,182,0.864,183,0.864,190,1.931,203,0.983,204,1.388,205,0.709,206,1.545,230,1.333,233,1.631,256,2.881,262,2.138,265,3.066,269,2.279,276,1.418,277,1.28,278,1.28,279,1.065,283,2.38,286,2.38,287,1.113,288,2.38,289,2.38,290,0.766,316,2.136,319,1.498,320,1.588,321,2.913,335,2.136,341,1.537,342,1.418,345,1.755,349,3.546,352,2.136,353,2.136,354,2.028,359,2.35,361,2.948,363,1.418,364,2.136,365,2.716,382,1.346,383,1.956,384,1.956,406,1.929,418,0.907,456,1.588,489,3.949,508,2.38,540,1.113,549,1.28,615,2.879,616,3.586,617,2.548,619,2.716,638,1.755,652,2.571,653,2.247,654,1.588,700,0.797,701,1.28,702,1.346,703,1.346,705,4.314,743,2.028,754,1.498,758,4.802,759,3.586,763,3.586,764,2.38,835,2.38,885,2.73,910,4.235,984,2.38,1060,1.956,1062,1.812,1074,2.38,1108,2.38,1157,1.692,1179,3.023,1200,5.945,1395,2.75,1419,1.755,1428,2.571,1492,7.643,1493,2.748,1494,3.22,1495,4.981,1496,4.14,1497,4.314,1498,4.981,1499,4.981,1500,4.981,1501,4.981,1502,4.981,1503,4.981,1504,5.545,1505,5.545,1506,5.545,1507,4.14,1508,4.981,1509,4.14,1510,4.14,1511,2.748,1512,2.748,1513,2.748,1514,2.748,1515,2.748,1516,2.748,1517,4.14,1518,2.748,1519,2.748,1520,2.748,1521,2.748,1522,2.748,1523,2.748,1524,2.748,1525,2.748,1526,2.748,1527,2.748,1528,2.748,1529,2.748,1530,2.748,1531,2.748,1532,2.748,1533,2.748,1534,2.748,1535,2.748,1536,2.748,1537,2.748,1538,2.748,1539,2.748,1540,2.38,1541,2.748,1542,2.138,1543,1.956,1544,2.748,1545,2.748,1546,2.748,1547,4.14,1548,4.14,1549,2.748,1550,2.748,1551,3.586,1552,2.748,1553,2.748,1554,2.748,1555,2.748,1556,2.748,1557,2.748,1558,4.981,1559,4.14,1560,2.748,1561,4.14,1562,2.748,1563,2.748,1564,2.748,1565,2.748,1566,2.748,1567,2.748,1568,2.748,1569,2.748,1570,3.586,1571,4.14,1572,2.748,1573,2.748,1574,2.748,1575,2.748,1576,2.748,1577,2.748,1578,4.14,1579,2.748]],["title/components/LoadAlertComponent.html",[28,0.48,159,1.085]],["body/components/LoadAlertComponent.html",[0,0.218,3,0.121,4,0.121,5,0.106,8,0.309,9,0.873,13,1.207,15,1.102,16,0.016,17,0.379,18,0.889,20,1.013,21,0.985,25,0.121,26,0.009,27,0.009,28,0.702,29,0.966,30,1.367,31,0.699,32,1.09,33,1.09,34,1.09,38,1.313,39,1.651,41,0.892,42,2.491,43,1.521,44,1.047,46,1.543,48,1.543,55,1.869,58,1.119,60,1.234,62,0.389,65,1.352,68,0.6,71,1.09,72,0.471,73,1.287,74,1.183,75,1.09,78,1.344,79,1.405,81,1.135,97,2.625,98,2.31,99,2.403,100,2.414,101,1.822,103,2.004,104,1.822,105,2.509,106,3.033,107,2.414,108,1.47,109,1.89,111,2.208,112,1.988,113,2.307,114,0.892,115,2.373,116,2.885,117,2.08,119,1.789,120,2.403,122,2.414,124,0.892,125,1.481,126,1.423,127,1.09,128,1.09,129,1.09,130,0.966,131,1.047,132,1.09,133,0.966,134,1.79,135,1.09,136,1.09,137,0.966,138,0.911,139,1.543,140,0.966,141,1.543,142,0.966,143,2.023,144,1.09,145,0.966,146,0.928,147,1.09,148,0.928,149,1.09,150,0.966,151,0.699,152,1.09,153,0.966,154,1.09,155,0.928,156,1.09,157,0.928,158,1.09,159,1.725,160,1.323,161,1.09,162,0.928,163,1.79,164,0.966,165,0.928,166,1.09,167,0.966,168,0.671,169,0.966,170,1.047,171,1.09,172,0.966,173,1.09,174,1.047,175,1.09,176,0.928,177,1.005,178,0.966,179,0.911,180,0.966,181,1.047,182,1.09,183,1.09,269,1.183,276,1.789,279,1.344,321,3.161,329,2.004,330,1.789,336,1.367,337,2.004,341,1.287,342,2.532,343,2.286,345,2.77,347,1.698,348,2.403,349,2.468,350,2.134,351,3.003,352,1.789,353,1.789,354,1.698,357,2.675,358,3.195,359,1.47,362,2.286,363,2.939,365,2.403,368,2.286,373,2.286,378,2.836,406,2.286,471,2.286,536,1.746,619,1.89,621,2.004,625,2.134,641,3.493,650,2.532,652,2.532,653,2.509,658,3.045,660,3.817,698,2.939,700,1.005,701,1.615,702,1.698,703,2.403,754,2.675,765,2.286,808,2.697,828,2.697,910,4.652,911,2.697,914,2.134,950,3.493,952,3.817,962,2.697,963,2.468,1031,5.659,1046,3.003,1054,3.003,1065,4.43,1067,2.697,1069,3.003,1070,3.003,1071,2.697,1072,2.697,1075,2.468,1076,1.789,1077,3.003,1091,3.003,1097,3.003,1157,3.505,1163,3.755,1179,1.89,1244,6.041,1421,3.115,1580,6.976,1581,3.467,1582,5.695,1583,4.906,1584,4.906,1585,5.695,1586,3.467,1587,4.906,1588,3.467,1589,3.467,1590,4.906,1591,3.467,1592,3.467,1593,3.467,1594,3.467,1595,4.906,1596,3.467,1597,4.906,1598,4.906,1599,4.906,1600,3.467,1601,3.467,1602,3.467,1603,4.906,1604,3.003,1605,3.467,1606,3.003,1607,3.467,1608,3.467]],["title/components/MyDiscussionComponent.html",[28,0.48,162,1.042]],["body/components/MyDiscussionComponent.html",[0,0.12,3,0.067,4,0.067,5,0.058,8,0.247,9,0.552,13,1.292,15,1.092,16,0.016,17,0.353,18,0.835,19,2.114,20,1.046,21,0.827,25,0.067,26,0.006,27,0.006,28,0.484,29,0.53,30,0.864,31,0.384,32,0.598,33,0.598,34,0.598,38,0.83,39,1.138,41,0.489,42,2.31,43,1.397,44,0.574,46,0.975,48,0.975,50,0.309,55,1.367,57,2.077,58,0.707,60,1.611,62,0.411,65,1.396,68,0.675,71,0.598,72,0.258,73,1.681,74,0.649,75,0.598,77,0.886,78,0.737,79,0.771,81,1.286,86,1.099,87,1.458,88,2.208,89,3.808,96,2.617,97,1.314,98,2.054,99,0.931,100,1.314,101,1.458,104,1.986,105,1.835,106,1.519,107,1.664,108,1.314,109,1.037,110,1.254,111,1.756,112,2.021,113,0.771,114,0.797,115,2.379,116,2.628,117,2.114,118,1.691,119,2.026,120,1.519,122,1.314,123,1.6,124,0.489,125,0.936,126,0.899,127,0.598,128,0.598,129,0.598,130,0.53,131,0.574,132,0.598,133,0.53,134,1.234,135,0.598,136,0.598,137,0.53,138,0.576,139,0.975,140,0.53,141,0.975,142,0.53,143,1.706,144,0.598,145,0.53,146,0.509,147,0.598,148,0.509,149,0.598,150,0.53,151,0.645,152,0.598,153,0.53,154,0.598,155,0.509,156,0.598,157,0.509,158,0.598,159,0.53,160,0.353,161,0.598,162,1.212,163,1.234,164,0.53,165,1.051,166,0.598,167,0.53,168,0.368,169,0.53,170,0.574,171,0.598,172,0.53,173,0.598,174,0.574,175,0.598,176,0.509,177,0.551,178,0.53,179,0.576,180,0.53,181,0.574,182,0.598,183,0.598,190,1.522,193,1.479,203,1.075,204,1.571,205,0.891,206,1.947,230,1.432,233,1.926,269,1.925,279,0.737,285,0.53,290,0.864,301,2.208,306,0.845,309,3.07,316,1.6,318,2.715,319,1.037,320,1.099,321,2.492,322,1.647,323,1.254,324,1.615,325,2.76,326,1.792,327,1.171,328,3.07,329,2.269,330,1.6,332,1.037,335,2.026,336,1.261,337,1.099,338,1.479,339,1.354,341,1.852,342,0.981,343,0.886,344,0.886,345,2.114,349,1.354,352,1.6,353,0.981,354,1.923,355,1.479,356,1.099,357,1.037,358,1.6,359,0.806,364,1.6,365,0.931,366,1.354,368,2.986,378,1.099,380,4.016,382,0.931,397,1.103,398,1.633,406,0.886,418,1.171,421,0.931,422,0.931,445,2.787,465,5.684,481,2.412,482,3.879,540,0.771,549,0.886,560,1.756,573,2.208,586,1.647,598,2.208,609,2.412,610,1.479,611,1.647,612,1.647,619,1.037,620,2.412,621,1.792,626,1.92,629,0.806,634,2.044,638,2.652,639,2.795,645,2.044,651,1.479,652,2.026,653,1.835,669,2.044,673,2.412,679,0.598,680,1.792,681,1.202,700,0.551,701,0.886,702,0.931,703,0.931,709,1.354,721,4.803,725,4.223,727,3.551,728,4.319,734,3.4,754,1.037,773,0.771,774,3.922,775,3.4,776,3.4,777,2.685,778,2.685,780,2.647,785,2.412,786,3.922,787,3.922,799,2.412,808,3.054,809,1.479,810,2.685,812,0.771,819,2.685,828,1.479,837,1.164,838,1.647,839,1.647,840,1.647,841,2.685,842,2.685,843,1.647,844,1.647,845,1.647,846,1.647,850,2.412,855,0.771,856,2.588,858,3.4,859,4.319,862,4.633,865,6.452,868,1.479,869,1.354,875,3.4,876,4.319,877,1.647,878,1.647,879,1.647,880,1.647,881,2.685,882,2.685,883,2.685,884,1.479,1076,1.6,1090,1.354,1147,1.458,1163,2.044,1227,1.254,1255,2.412,1304,2.375,1349,0.845,1369,1.377,1379,2.612,1380,2.612,1395,2.114,1413,0.845,1570,4.319,1609,7.307,1610,1.479,1611,3.054,1612,2.412,1613,3.926,1614,4.987,1615,3.926,1616,3.926,1617,3.4,1618,3.101,1619,3.101,1620,1.647,1621,3.101,1622,1.902,1623,3.101,1624,5.349,1625,5.349,1626,5.349,1627,5.641,1628,1.902,1629,3.054,1630,3.101,1631,1.902,1632,1.902,1633,1.902,1634,1.902,1635,1.902,1636,1.902,1637,1.479,1638,1.647,1639,1.647,1640,1.647,1641,1.479,1642,1.647,1643,1.647,1644,1.647,1645,1.647,1646,1.647,1647,1.902,1648,1.647,1649,1.647,1650,3.101,1651,1.902,1652,1.902,1653,5.349,1654,1.902,1655,4.987,1656,1.902,1657,1.902,1658,1.902,1659,1.902,1660,3.101,1661,1.902,1662,1.902,1663,1.902,1664,1.902,1665,3.101,1666,1.902,1667,1.902,1668,5.349,1669,1.902,1670,1.902,1671,1.902,1672,3.101,1673,1.902,1674,1.902,1675,1.902,1676,3.926,1677,1.902,1678,1.902,1679,3.101,1680,1.902,1681,1.902,1682,1.902,1683,1.902,1684,1.902,1685,2.685,1686,3.926,1687,1.902,1688,1.902,1689,1.902,1690,1.902,1691,1.902,1692,1.902,1693,1.902,1694,1.902,1695,1.902,1696,1.902,1697,1.902,1698,1.902,1699,3.101,1700,1.902,1701,1.902,1702,1.902,1703,1.902,1704,1.902,1705,1.647,1706,4.528,1707,2.685,1708,3.101,1709,3.101,1710,3.101,1711,3.101,1712,3.101,1713,4.319,1714,1.902,1715,1.902,1716,1.902,1717,1.902,1718,3.101,1719,1.902,1720,1.902,1721,1.902,1722,1.647,1723,1.647,1724,1.902,1725,1.902]],["title/injectables/NavigationServiceService.html",[256,1.729,485,1.385]],["body/injectables/NavigationServiceService.html",[0,0.321,3,0.179,4,0.179,5,0.156,8,0.321,9,1.13,13,1.286,15,1.337,16,0.016,17,0.401,18,1.078,20,1.13,21,0.939,25,0.179,26,0.012,27,0.012,39,1.481,50,0.633,58,1.164,62,0.434,65,1.507,68,0.761,71,1.996,72,0.694,204,1.422,205,0.727,256,2.819,258,4.422,277,2.958,278,2.379,280,3.972,485,2.259,486,2.635,542,2.635,543,2.635,638,2.165,856,4.186,1255,5.623,1371,2.691,1540,5.499,1543,5.146,1629,4.938,1726,7.434,1727,4.422,1728,6.909,1729,3.908,1730,5.106,1731,5.374,1732,7.766,1733,5.623,1734,6.349,1735,7.685,1736,6.349,1737,5.106,1738,6.349,1739,4.938,1740,5.106,1741,6.349,1742,6.349,1743,5.106,1744,5.106,1745,5.106,1746,5.106,1747,5.106,1748,5.106]],["title/pipes/PipeFilterPipe.html",[1749,1.814,1750,2.772]],["body/pipes/PipeFilterPipe.html",[0,0.358,3,0.199,4,0.199,5,0.175,9,1.014,13,1.014,15,1.103,16,0.016,17,0.421,18,0.889,20,1.014,21,0.774,25,0.199,26,0.013,27,0.013,38,1.525,41,1.465,62,0.358,68,0.835,72,0.774,205,1.032,536,2.028,552,2.415,1076,2.94,1749,3.162,1750,4.832,1751,3.507,1752,5.279,1753,5.279,1754,4.935,1755,6.787,1756,4.832,1757,6.278,1758,6.499,1759,4.935,1760,4.475,1761,4.935,1762,4.935,1763,4.935,1764,4.935,1765,4.935,1766,4.935]],["title/pipes/PipeListFilterPipe.html",[1749,1.814,1767,2.772]],["body/pipes/PipeListFilterPipe.html",[0,0.354,3,0.197,4,0.197,5,0.172,9,1.001,13,1.001,15,1.089,16,0.016,17,0.418,18,0.878,20,1.001,21,0.765,25,0.197,26,0.013,27,0.013,38,1.506,41,1.447,62,0.354,68,0.833,72,0.765,205,1.027,536,2.002,552,2.397,680,4.32,1076,2.904,1749,3.139,1751,3.464,1752,5.24,1753,5.24,1754,4.873,1756,4.796,1757,6.245,1758,6.472,1759,4.873,1760,4.442,1761,4.873,1762,4.873,1763,4.873,1764,4.873,1765,4.873,1766,4.873,1767,4.796,1768,6.736,1769,6.736,1770,5.627]],["title/pipes/PipeRelativeTimePipe.html",[1749,1.814,1771,2.772]],["body/pipes/PipeRelativeTimePipe.html",[0,0.345,3,0.192,4,0.192,5,0.168,9,0.977,13,0.977,15,1.063,16,0.016,17,0.414,18,0.857,20,0.977,21,0.746,25,0.192,26,0.013,27,0.013,38,1.47,41,1.412,62,0.345,72,0.746,115,1.798,205,1.016,233,1.798,330,2.833,341,2.465,344,3.454,418,1.562,536,1.954,552,2.539,596,4.755,598,4.726,1076,2.833,1749,3.093,1751,3.38,1752,5.163,1756,4.726,1760,4.377,1771,4.726,1772,5.749,1773,5.491,1774,5.491,1775,6.638,1776,5.491,1777,5.491,1778,5.491,1779,7.135,1780,7.412,1781,5.491,1782,5.491,1783,4.271,1784,5.491,1785,5.491]],["title/modules/PipesModule.html",[431,1.907,449,2.396]],["body/modules/PipesModule.html",[0,0.319,3,0.178,4,0.178,5,0.155,16,0.016,21,1.043,25,0.178,26,0.012,27,0.012,72,0.689,124,1.305,255,3.124,344,2.947,431,2.485,433,2.767,434,2.933,435,4.241,436,3.346,437,4.241,444,4.17,445,3.124,446,3.124,448,3.346,449,4.993,454,4.17,455,4.17,456,2.933,680,3.656,1749,3.21,1750,5.665,1753,4.919,1767,5.665,1771,5.665,1772,4.395,1786,4.395,1787,4.395,1788,4.395,1789,5.665,1790,5.665,1791,5.074,1792,6.324,1793,5.074,1794,4.395,1795,5.074,1796,5.074,1797,5.074,1798,4.395,1799,5.074]],["title/components/PostReplyComponent.html",[28,0.48,164,1.085]],["body/components/PostReplyComponent.html",[0,0.206,3,0.115,4,0.115,5,0.1,8,0.206,9,0.839,13,1.333,15,1.069,16,0.016,17,0.371,18,0.861,20,1.185,21,0.64,25,0.115,26,0.009,27,0.009,28,0.68,29,0.913,30,1.313,31,0.661,32,1.03,33,1.03,34,1.03,38,1.262,39,1.601,41,0.843,42,2.477,43,1.512,44,0.989,46,1.482,48,1.482,50,0.47,55,1.822,56,1.828,58,1.075,62,0.431,65,1.433,68,0.723,71,1.898,72,0.445,73,1.217,81,1.073,97,1.998,98,2.248,99,2.704,100,1.998,101,1.217,104,2.375,105,1.328,107,2.34,108,1.389,111,2.14,112,2.446,113,1.328,114,1.713,115,1.544,116,2.572,117,1.998,118,3.01,119,1.691,122,1.998,124,0.843,125,1.423,126,1.367,127,1.03,128,1.03,129,1.03,130,0.913,131,0.989,132,1.03,133,0.913,134,1.735,135,1.03,136,1.03,137,0.913,138,0.875,139,1.482,140,0.913,141,1.482,142,0.913,143,1.99,144,1.03,145,0.913,146,0.877,147,1.03,148,0.877,149,1.03,150,0.913,151,0.467,152,1.03,153,0.913,154,1.03,155,0.877,156,1.03,157,0.877,158,1.03,159,0.913,160,0.608,161,1.03,162,0.877,163,1.735,164,1.682,165,1.987,166,1.03,167,0.913,168,0.634,169,0.913,170,0.989,171,1.03,172,0.913,173,1.03,174,0.989,175,1.03,176,0.877,177,0.95,178,0.913,179,0.875,180,0.913,181,0.989,182,1.03,183,1.03,203,1.119,204,1.538,205,0.786,206,1.538,230,1.477,233,1.073,321,2.813,324,1.822,330,2.433,335,1.691,336,1.538,342,1.691,343,1.527,344,1.527,345,1.998,347,1.605,348,1.605,350,2.017,356,1.895,357,2.57,359,1.389,364,2.433,382,1.605,471,2.161,484,2.902,536,1.166,552,1.964,619,1.787,650,2.433,658,2.572,698,2.433,885,3.108,902,5.228,903,4.083,907,5.228,908,5.539,911,3.667,912,5.228,926,4.083,928,4.781,936,4.083,939,3.667,959,4.781,962,2.549,974,2.839,976,2.839,979,2.839,992,4.083,994,2.839,997,4.781,1003,2.839,1047,4.695,1058,5.228,1061,2.839,1075,2.333,1081,2.839,1082,2.839,1083,2.839,1084,2.839,1086,2.549,1094,1.389,1117,2.017,1147,1.217,1148,3.667,1157,2.017,1165,2.333,1182,4.781,1241,6.538,1606,2.839,1800,7.55,1801,3.278,1802,6.395,1803,5.52,1804,4.714,1805,5.52,1806,5.52,1807,6.037,1808,4.714,1809,5.52,1810,3.278,1811,4.714,1812,3.278,1813,3.278,1814,3.278,1815,3.278,1816,3.278,1817,3.278,1818,3.278,1819,3.278,1820,4.714,1821,3.278,1822,3.278,1823,3.278,1824,3.278,1825,3.278,1826,3.278,1827,3.278,1828,3.278,1829,3.278,1830,3.278,1831,3.278,1832,3.278,1833,3.278,1834,4.714,1835,3.278,1836,3.278,1837,3.278,1838,3.278,1839,3.278,1840,4.714,1841,3.278,1842,4.714,1843,3.278,1844,3.278,1845,3.278,1846,3.278,1847,2.839,1848,3.278,1849,3.278,1850,3.278]],["title/components/RelatedDiscussionComponent.html",[28,0.48,167,1.085]],["body/components/RelatedDiscussionComponent.html",[0,0.289,3,0.111,4,0.111,5,0.097,8,0.199,9,0.818,13,1.298,15,1.048,16,0.016,17,0.366,18,0.845,20,1.057,21,0.945,25,0.111,26,0.009,27,0.009,28,0.667,29,0.882,30,1.281,31,0.639,32,0.995,33,0.995,34,0.995,38,1.23,39,1.57,41,0.814,42,2.468,43,1.506,44,0.956,46,1.445,48,1.445,50,0.458,55,1.793,56,1.782,57,1.569,58,1.048,60,2.416,62,0.427,65,1.41,71,1.867,72,0.43,74,1.08,75,0.995,78,1.227,81,1.945,86,1.83,87,1.175,97,2.295,98,2.187,99,1.551,100,1.342,101,2.342,104,2.521,105,2.407,107,1.342,108,1.342,111,2.099,112,2.407,113,1.283,114,0.814,115,2.476,116,2.768,117,1.949,118,2.506,119,1.634,120,2.252,121,2.254,122,1.949,124,0.814,125,1.388,126,1.333,127,0.995,128,0.995,129,0.995,130,0.882,131,0.956,132,0.995,133,0.882,134,1.702,135,0.995,136,0.995,137,0.882,138,1.005,139,1.445,140,0.882,141,1.445,142,0.882,143,2.139,144,0.995,145,0.882,146,0.847,147,0.995,148,0.847,149,0.995,150,0.882,151,0.771,152,0.995,153,0.882,154,0.995,155,0.847,156,0.995,157,0.847,158,0.995,159,0.882,160,0.588,161,0.995,162,0.847,163,1.702,164,0.882,165,0.847,166,0.995,167,1.655,168,1.472,169,0.882,170,0.956,171,0.995,172,0.882,173,0.995,174,0.956,175,0.995,176,0.847,177,0.918,178,0.882,179,0.853,180,0.882,181,0.956,182,0.995,183,0.995,204,0.882,205,0.451,206,1.655,230,0.847,233,1.037,256,2.638,269,2.317,277,1.475,278,1.475,279,1.227,301,4.491,316,2.372,319,1.726,320,1.83,321,2.939,323,2.087,324,1.388,325,2.372,326,1.83,327,1.949,328,3.883,332,1.726,335,1.634,336,1.508,342,1.634,343,1.475,344,1.475,345,1.342,347,1.551,348,1.551,350,1.949,352,2.372,353,1.634,354,2.252,358,1.634,359,2.518,363,1.634,364,2.372,365,1.551,367,2.462,376,2.462,378,1.83,380,3.273,399,3.129,418,1.185,421,1.551,422,1.551,496,1.726,536,1.127,540,1.283,598,3.273,615,2.657,617,2.83,620,3.576,623,2.462,624,3.981,625,1.949,638,2.79,650,2.372,654,3.129,658,2.768,668,1.08,679,0.995,698,2.372,700,0.918,701,1.475,742,1.127,745,1.949,789,2.087,837,0.814,869,2.254,1032,2.462,1039,2.462,1062,2.087,1165,2.254,1240,6.388,1494,2.462,1610,2.462,1611,4.21,1612,3.576,1637,2.462,1639,3.981,1640,2.742,1641,2.462,1851,7.376,1852,4.688,1853,4.688,1854,5.413,1855,4.688,1856,4.597,1857,4.597,1858,5.144,1859,5.413,1860,5.413,1861,3.166,1862,3.166,1863,4.597,1864,2.742,1865,4.597,1866,3.166,1867,2.742,1868,2.742,1869,2.462,1870,2.742,1871,3.166,1872,3.166,1873,4.688,1874,3.166,1875,3.166,1876,3.166,1877,3.166,1878,3.166,1879,3.166,1880,3.166,1881,3.166,1882,2.742,1883,3.166,1884,3.166,1885,4.597,1886,3.166,1887,3.166,1888,3.166,1889,3.166]],["title/injectables/RouterServiceService.html",[485,1.385,1733,3.028]],["body/injectables/RouterServiceService.html",[0,0.355,3,0.198,4,0.198,5,0.173,8,0.355,9,1.2,13,1.284,15,1.306,16,0.016,17,0.392,18,1.053,20,1.004,21,0.917,25,0.198,26,0.013,27,0.013,50,0.672,58,1.287,62,0.424,65,1.339,71,1.774,72,0.767,190,2.616,485,2.401,486,2.912,496,3.076,540,2.286,542,2.912,543,2.912,638,3.374,789,3.72,1727,4.887,1729,4.153,1733,5.249,1739,5.249,1890,7.48,1891,5.643,1892,5.643,1893,5.643,1894,5.643,1895,5.643,1896,5.643,1897,5.643,1898,4.389,1899,4.389]],["title/components/SidePannelComponent.html",[28,0.48,169,1.085]],["body/components/SidePannelComponent.html",[0,0.156,3,0.087,4,0.087,5,0.076,8,0.295,9,0.683,13,1.327,15,0.907,16,0.016,17,0.33,18,0.731,20,1.07,21,0.938,22,1.74,23,1.532,24,1.532,25,0.087,26,0.007,27,0.007,28,0.577,29,0.693,30,1.069,31,0.502,32,0.782,33,0.782,34,0.782,38,1.027,39,1.359,40,3.336,41,0.64,42,2.401,43,1.459,44,0.751,45,2.155,46,1.207,48,1.207,50,0.382,54,3.75,55,1.59,57,1.599,58,0.875,60,2.025,62,0.459,65,1.351,67,2.555,68,0.714,72,0.338,73,0.924,74,0.849,75,0.782,77,1.159,78,0.965,79,1.008,81,1.257,88,1.772,89,2.733,97,2.412,98,2.297,99,1.88,100,2.412,101,1.956,104,1.74,105,2.134,106,1.219,107,2.412,108,1.055,110,1.641,111,2.43,112,1.555,113,1.899,114,0.64,115,2.51,116,2.454,117,1.986,120,1.219,122,2.412,124,0.64,125,1.159,126,1.113,127,0.782,128,0.782,129,0.782,130,0.693,131,0.751,132,0.782,133,0.693,134,1.891,135,0.782,136,0.782,137,0.693,138,0.712,139,1.207,140,0.693,141,1.207,142,0.693,143,1.817,144,0.782,145,0.693,146,0.666,147,0.782,148,0.666,149,0.782,150,0.693,151,0.354,152,0.782,153,0.693,154,0.782,155,0.666,156,0.782,157,0.666,158,0.782,159,0.693,160,0.462,161,0.782,162,0.666,163,1.473,164,0.693,165,0.666,166,0.782,167,0.693,168,0.482,169,1.467,170,1.954,171,0.782,172,0.693,173,0.782,174,0.751,175,0.782,176,0.666,177,0.722,178,0.693,179,0.978,180,0.693,181,0.751,182,0.782,183,0.782,190,2.575,203,1.351,204,1.305,205,0.667,206,1.305,217,1.641,230,1.61,233,0.815,243,1.705,269,2.139,279,0.965,285,1.305,287,2.134,306,1.105,316,3.103,319,1.357,320,1.438,321,3.306,324,1.59,325,1.981,326,2.219,327,2.363,329,3.29,332,2.093,335,3.234,336,1.85,337,2.709,339,1.772,341,1.74,343,1.789,344,1.159,345,2.549,347,2.58,348,2.58,357,2.093,359,1.055,362,1.641,363,1.981,364,1.284,365,2.295,373,3.09,374,2.986,378,1.438,379,2.155,382,1.219,406,2.454,421,1.219,422,1.219,457,6.497,489,3.92,495,3.09,540,1.008,552,1.668,609,1.936,610,1.936,614,2.155,615,1.438,617,1.532,619,2.555,621,2.219,625,3.242,627,2.155,634,3.752,638,2.815,652,2.418,653,2.134,680,2.709,682,1.936,700,0.722,701,1.159,702,1.219,703,1.219,709,2.733,714,2.155,754,1.357,756,2.155,765,2.531,789,1.641,829,2.155,870,1.936,885,4.132,910,1.772,1060,1.772,1062,1.641,1075,1.772,1087,3.752,1089,2.412,1090,1.772,1102,1.055,1163,1.641,1227,1.641,1425,1.284,1431,1.159,1551,2.155,1604,4.058,1705,2.155,1722,2.155,1723,2.155,1729,2.363,1847,2.155,1898,1.936,1899,1.936,1900,7.501,1901,2.488,1902,3.838,1903,4.686,1904,3.838,1905,4.686,1906,4.686,1907,4.686,1908,7.414,1909,4.686,1910,4.686,1911,5.267,1912,3.838,1913,5.267,1914,3.838,1915,2.488,1916,2.488,1917,2.488,1918,5.267,1919,3.838,1920,2.488,1921,3.838,1922,2.488,1923,2.488,1924,2.488,1925,2.488,1926,2.488,1927,2.488,1928,2.488,1929,2.488,1930,2.488,1931,2.488,1932,2.488,1933,2.488,1934,2.488,1935,2.488,1936,2.488,1937,2.488,1938,2.488,1939,2.488,1940,2.488,1941,2.488,1942,2.488,1943,2.488,1944,5.691,1945,2.488,1946,2.488,1947,2.488,1948,5.267,1949,5.267,1950,3.838,1951,2.488,1952,7.363,1953,2.488,1954,6.013,1955,2.488,1956,4.929,1957,2.488,1958,3.838,1959,2.488,1960,2.488,1961,2.488,1962,2.488,1963,2.488,1964,2.488,1965,2.488,1966,2.488,1967,2.488,1968,2.155,1969,2.155,1970,2.488,1971,2.488,1972,2.488,1973,2.155,1974,2.488,1975,2.488,1976,2.488,1977,2.488,1978,2.488,1979,2.488,1980,2.488,1981,2.488,1982,3.838,1983,2.488,1984,2.488,1985,2.155,1986,2.488]],["title/components/SlidersComponent.html",[28,0.48,172,1.085]],["body/components/SlidersComponent.html",[0,0.173,3,0.097,4,0.097,5,0.084,8,0.408,9,0.738,13,1.259,15,0.534,16,0.016,17,0.346,18,0.43,20,0.988,21,0.755,25,0.097,26,0.008,27,0.008,28,0.615,29,0.768,30,1.156,31,0.556,32,0.867,33,0.867,34,0.867,38,1.111,39,1.447,41,0.709,42,2.431,43,1.466,44,0.832,46,1.305,48,1.305,50,0.414,55,1.677,56,1.609,58,1.138,62,0.375,65,1.318,67,2.721,68,0.29,71,1.305,72,0.375,77,1.285,96,2.885,97,2.354,98,1.746,100,2.653,101,2.412,103,1.594,104,2.212,106,2.033,107,2.899,108,2.833,111,2.309,112,1.117,113,2.022,114,0.709,115,2.596,116,2.326,117,3.227,120,1.351,121,1.963,122,2.116,124,0.709,125,1.253,126,1.204,127,0.867,128,0.867,129,0.867,130,0.768,131,0.832,132,0.867,133,0.768,134,1.569,135,0.867,136,0.867,137,0.768,138,0.77,139,1.305,140,0.768,141,1.305,142,0.768,143,1.883,144,0.867,145,0.768,146,0.738,147,0.867,148,0.738,149,0.867,150,0.768,151,0.393,152,0.867,153,0.768,154,0.867,155,0.738,156,0.867,157,0.738,158,0.867,159,0.768,160,0.512,161,0.867,162,0.738,163,1.569,164,0.768,165,0.738,166,0.867,167,0.768,168,0.534,169,0.768,170,0.832,171,0.867,172,1.547,173,1.569,174,1.507,175,0.867,176,0.738,177,0.8,178,0.768,179,0.77,180,0.768,181,0.832,182,0.867,183,0.867,190,1.935,204,1.547,205,0.791,267,1.963,324,0.832,325,2.576,326,1.594,328,2.555,329,3.863,330,2.142,332,3.028,336,1.659,337,1.594,341,2.763,342,2.576,343,2.588,344,1.285,345,3.039,347,2.033,348,2.033,352,2.142,353,1.423,354,2.445,355,3.229,358,3.074,359,1.169,362,3.291,363,2.142,365,2.445,367,3.883,373,2.737,374,3.229,382,1.351,418,1.216,521,1.472,560,2.153,585,0.903,619,1.503,623,2.145,625,1.697,765,3.291,809,2.145,933,2.388,950,1.963,1065,4.32,1071,2.145,1076,2.142,1087,1.818,1147,1.541,1157,3.667,1163,1.818,1367,1.224,1497,6.129,1783,2.145,1870,2.388,1956,2.388,1968,4.81,1969,3.595,1973,4.81,1985,2.388,1987,2.757,1988,4.151,1989,4.991,1990,4.151,1991,4.991,1992,4.991,1993,4.991,1994,5.554,1995,4.151,1996,4.991,1997,4.151,1998,4.151,1999,4.151,2000,4.151,2001,2.757,2002,4.991,2003,4.151,2004,2.757,2005,2.757,2006,2.757,2007,4.151,2008,2.757,2009,2.757,2010,4.151,2011,2.757,2012,2.757,2013,2.757,2014,2.757,2015,2.757,2016,3.595,2017,2.757,2018,2.757,2019,2.757,2020,2.757,2021,2.757,2022,2.757,2023,2.757,2024,4.151,2025,4.151,2026,2.757,2027,2.757,2028,2.757,2029,2.757,2030,2.757,2031,4.991,2032,4.151,2033,4.151,2034,4.151,2035,5.554,2036,4.151,2037,5.554,2038,2.757,2039,4.151,2040,2.757,2041,2.757,2042,2.757,2043,5.957,2044,3.595,2045,4.151,2046,2.757,2047,2.757,2048,2.757,2049,2.757,2050,2.757,2051,5.554,2052,5.554,2053,4.151,2054,2.757,2055,6.342,2056,2.757,2057,2.388,2058,2.757,2059,2.757,2060,4.323,2061,4.323,2062,2.757,2063,5.159,2064,2.757,2065,4.151,2066,2.757,2067,4.151,2068,2.757,2069,2.757,2070,2.757,2071,2.757,2072,4.151,2073,2.757,2074,4.151]],["title/pipes/SortByPipe.html",[1749,1.814,1789,2.772]],["body/pipes/SortByPipe.html",[0,0.34,3,0.189,4,0.189,5,0.166,9,0.961,13,0.961,15,1.046,16,0.016,17,0.411,18,0.843,20,0.961,21,0.893,25,0.189,26,0.013,27,0.013,38,1.446,41,1.39,57,2.516,62,0.34,68,0.809,72,0.734,73,2.006,75,1.699,79,2.189,552,2.623,1076,2.788,1749,3.063,1751,3.326,1760,4.334,1789,4.68,1794,5.693,1869,4.203,2075,6.574,2076,5.404,2077,6.574,2078,6.574,2079,7.683,2080,7.777,2081,5.404,2082,5.404,2083,5.404,2084,5.404,2085,5.404,2086,5.404,2087,5.404,2088,5.404,2089,5.404,2090,5.404,2091,5.404,2092,5.404]],["title/pipes/SplitInitialsPipe.html",[1749,1.814,1790,2.772]],["body/pipes/SplitInitialsPipe.html",[0,0.362,3,0.201,4,0.201,5,0.176,9,1.024,13,1.024,15,1.114,16,0.016,17,0.437,18,0.898,20,1.024,21,0.782,25,0.201,26,0.013,27,0.013,38,1.54,41,1.48,62,0.362,68,0.767,72,0.782,205,0.972,233,1.884,552,2.048,1076,2.969,1617,6.52,1707,5.912,1749,3.181,1751,3.542,1756,4.86,1760,4.501,1790,4.86,1798,5.912,2093,6.827,2094,5.754,2095,5.754,2096,5.754,2097,5.754,2098,5.754]],["title/components/TagAllDiscussionComponent.html",[28,0.48,176,1.042]],["body/components/TagAllDiscussionComponent.html",[0,0.152,3,0.085,4,0.085,5,0.074,8,0.152,9,0.668,13,1.363,15,1.2,16,0.016,17,0.382,18,0.968,20,1.14,21,0.931,25,0.085,26,0.007,27,0.007,28,0.567,29,0.673,30,1.045,31,0.487,32,0.76,33,0.76,34,0.76,38,1.004,39,1.334,41,0.621,42,2.392,43,1.453,44,0.729,46,1.18,48,1.18,50,0.374,55,1.565,56,1.455,57,2.028,58,0.855,60,1.845,62,0.472,65,1.472,67,2.508,68,0.693,71,1.63,72,0.328,73,0.897,74,0.825,75,0.76,77,1.126,78,0.937,81,2.031,83,2.918,86,2.169,87,1.393,97,1.591,98,1.63,101,0.897,104,0.897,105,0.979,107,1.024,108,1.024,112,0.979,113,0.979,114,0.621,115,1.839,123,2.676,124,0.621,125,1.133,126,1.088,127,0.76,128,0.76,129,0.76,130,0.673,131,0.729,132,0.76,133,0.673,134,1.446,135,0.76,136,0.76,137,0.673,138,0.696,139,1.18,140,0.673,141,1.18,142,0.673,143,1.798,144,0.76,145,0.673,146,0.647,147,0.76,148,0.647,149,0.76,150,0.673,151,0.883,152,0.76,153,0.673,154,0.76,155,0.647,156,0.76,157,0.647,158,0.76,159,0.673,160,0.448,161,0.76,162,0.647,163,1.446,164,0.673,165,0.647,166,0.76,167,0.673,168,0.89,169,0.673,170,0.729,171,0.76,172,0.673,173,0.76,174,0.729,175,0.76,176,1.388,177,2.107,178,0.673,179,0.696,180,0.673,181,0.729,182,0.76,183,0.76,190,2.304,204,1.445,205,0.739,206,1.786,230,1.231,233,1.698,256,2.303,265,1.487,269,2.116,277,1.126,278,1.126,279,0.937,306,1.666,309,1.487,316,2.374,336,1.655,341,0.897,350,1.487,354,1.183,360,2.093,382,1.183,393,2.043,397,1.637,398,1.229,399,2.659,406,1.126,412,2.918,421,1.183,422,1.183,479,5.979,484,1.487,489,4.075,493,3.578,495,3.033,496,2.046,521,0.597,536,0.86,540,0.979,552,1.335,569,2.918,573,1.72,575,2.918,577,2.918,585,0.791,588,1.52,634,3.033,638,2.628,645,2.474,650,1.936,652,2.374,653,2.101,654,2.659,658,2.416,668,1.77,669,2.474,673,4.033,676,2.474,679,1.18,681,2.765,682,2.918,698,1.936,700,0.701,701,1.126,702,1.183,703,1.838,715,2.093,732,1.879,742,0.86,743,1.838,745,1.487,753,1.593,754,1.317,772,3.984,773,0.979,780,0.979,781,3.984,785,2.918,790,1.838,799,2.918,812,0.979,823,1.879,847,3.249,848,2.093,849,2.093,850,1.879,852,2.093,853,2.093,855,0.979,863,3.984,864,1.593,870,1.879,884,2.918,891,3.578,893,3.984,913,3.578,914,3.192,947,3.249,948,3.249,949,3.249,950,2.671,951,3.249,952,2.918,963,1.72,966,1.879,968,2.918,969,1.879,986,4.622,1005,1.879,1006,1.879,1010,2.093,1032,4.033,1039,2.918,1109,3.578,1136,2.093,1137,2.093,1138,1.879,1140,4.686,1149,1.879,1157,1.487,1165,1.72,1227,1.593,1371,1.024,1543,1.72,1610,1.879,1611,3.578,1612,2.918,1620,2.093,1629,4.367,1637,1.879,1638,2.093,1641,1.879,1642,2.093,1643,2.093,1644,2.093,1645,2.093,1646,2.093,1648,2.093,1649,2.093,1729,2.309,1853,3.984,1855,3.984,1864,2.093,1867,3.249,1868,2.093,1873,5.146,1882,3.249,1898,2.918,1899,2.918,2099,7.687,2100,4.6,2101,4.6,2102,4.6,2103,3.752,2104,3.752,2105,3.752,2106,5.185,2107,4.6,2108,4.6,2109,2.416,2110,3.752,2111,2.416,2112,3.752,2113,2.416,2114,2.416,2115,2.416,2116,2.416,2117,3.752,2118,3.752,2119,3.752,2120,2.416,2121,2.416,2122,2.416,2123,2.416,2124,2.416,2125,2.416,2126,2.416,2127,4.6,2128,2.416,2129,3.984,2130,2.416,2131,3.752,2132,2.416,2133,2.416,2134,2.416,2135,4.6,2136,2.416,2137,2.416,2138,3.752,2139,4.6,2140,2.416,2141,4.6,2142,4.6,2143,3.752,2144,2.416,2145,2.416,2146,2.416,2147,2.416,2148,2.416,2149,2.416,2150,2.416,2151,2.416,2152,2.416,2153,2.416,2154,2.416,2155,2.416,2156,2.416,2157,2.416,2158,2.416,2159,3.752,2160,2.416,2161,2.416,2162,2.416,2163,2.416,2164,2.416,2165,2.416,2166,2.416,2167,3.752]],["title/components/TagsWidgetComponent.html",[28,0.48,178,1.085]],["body/components/TagsWidgetComponent.html",[0,0.249,3,0.138,4,0.138,5,0.121,8,0.249,9,0.956,13,1.327,15,1.04,16,0.016,17,0.38,18,0.839,20,1.086,21,0.983,22,1.468,25,0.138,26,0.01,27,0.01,28,0.753,29,1.101,30,1.497,31,0.798,32,1.243,33,1.243,34,1.243,39,1.147,41,1.017,42,2.52,43,1.534,44,1.194,46,1.69,48,1.69,50,0.536,55,1.844,56,2.084,57,1.349,58,0.901,60,2.619,62,0.444,65,1.449,68,0.762,72,0.537,78,1.533,98,2.06,124,1.017,125,1.623,126,1.559,127,1.243,128,1.243,129,1.243,130,1.101,131,1.194,132,1.243,133,2.078,134,2.154,135,1.69,136,1.243,137,1.101,138,0.998,139,1.69,140,1.101,141,1.69,142,1.101,143,2.097,144,1.243,145,1.101,146,1.058,147,1.243,148,1.058,149,1.243,150,1.101,151,0.563,152,1.243,153,1.101,154,1.243,155,1.058,156,1.243,157,1.058,158,1.243,159,1.101,160,0.734,161,1.243,162,1.058,163,1.92,164,1.101,165,1.058,166,1.243,167,1.101,168,0.765,169,1.101,170,1.194,171,1.243,172,1.101,173,1.243,174,1.844,175,1.243,176,1.058,177,1.147,178,1.825,179,1.424,180,1.101,181,1.194,182,1.243,183,1.243,204,1.497,205,0.766,253,2.815,256,3.211,257,4.033,261,4.181,263,4.181,264,5.097,265,3.308,267,4.665,268,4.181,269,2.236,273,4.181,276,2.04,277,1.842,278,1.842,279,1.533,294,4.181,295,5.289,389,3.424,390,4.655,391,5.289,392,4.655,400,4.655,402,5.935,403,3.424,409,3.424,411,4.655,414,3.424,420,3.424,421,1.937,422,1.937,423,3.075,424,3.424,1140,4.348,1144,4.75,1226,5.935,2129,4.655,2168,6.853,2169,3.954,2170,3.954,2171,5.375,2172,3.954,2173,5.375,2174,4.655,2175,3.954]],["title/injectables/TelemetryUtilsService.html",[485,1.385,653,1.577]],["body/injectables/TelemetryUtilsService.html",[0,0.245,3,0.136,4,0.136,5,0.119,8,0.381,9,0.947,13,1.338,15,1.362,16,0.016,17,0.408,18,1.098,20,1.282,21,0.885,25,0.136,26,0.01,27,0.01,50,0.53,57,1.817,58,1.213,62,0.481,65,1.618,68,0.411,72,0.529,73,1.447,74,1.33,75,1.225,79,1.579,81,1.743,126,1.13,151,0.555,165,1.043,204,1.483,205,0.863,233,2.402,276,2.011,308,0.48,341,2.418,393,2.692,406,1.816,485,1.894,486,2.011,501,5.066,521,1.685,540,1.579,542,2.011,543,2.011,552,2.157,637,5.705,638,3.054,653,2.156,676,2.57,679,1.906,743,1.909,812,2.456,871,5.066,1169,3.031,1179,3.551,1296,1.652,1439,4.715,1440,6.578,1441,5.249,1442,5.249,1443,5.249,1444,5.249,1445,4.609,1446,4.609,1447,5.249,1448,5.905,1449,3.375,1450,4.609,1451,4.609,1452,4.609,1453,3.375,1454,3.375,1455,3.375,1456,3.375,1457,3.375,1458,4.609,1459,4.609,1460,4.609,1461,4.609,1462,3.375,1463,3.375,1464,3.375,1465,3.375,1466,3.375,1467,3.375,1468,4.609,1469,6.239,1470,5.249,1471,3.375,1472,4.609,1473,3.375,1474,3.375,1475,3.375,1476,3.375,1477,3.375,1478,3.375,1479,3.375,1480,3.375,1481,3.375,1482,4.609,1483,3.375,1484,3.375,1485,3.375,1486,5.641,1487,4.609,1488,3.375,1489,3.375,1490,3.375,1491,3.375,2176,5.322,2177,5.322,2178,5.322,2179,5.322,2180,5.322,2181,3.897,2182,5.322,2183,3.897,2184,3.897,2185,3.897,2186,3.897,2187,3.897,2188,3.897,2189,3.897,2190,3.897]],["title/components/TrendingTagsComponent.html",[28,0.48,180,1.085]],["body/components/TrendingTagsComponent.html",[0,0.176,3,0.098,4,0.21,5,0.086,8,0.176,9,0.746,13,1.263,15,0.974,16,0.016,17,0.348,18,0.785,20,0.995,21,0.912,25,0.098,26,0.008,27,0.008,28,0.62,29,0.778,30,1.168,31,0.564,32,0.878,33,0.878,34,0.878,38,1.122,39,1.459,41,0.718,42,2.435,43,1.483,44,0.843,46,1.318,48,1.318,50,0.418,55,1.688,56,1.625,57,1.43,58,0.956,62,0.446,65,1.422,71,1.581,72,0.379,73,1.556,74,0.953,75,0.878,79,1.132,81,1.373,97,2.132,98,2.051,100,2.539,101,2.548,103,2.423,104,2.548,105,1.132,106,2.738,107,2.844,108,2.132,111,1.625,112,1.132,113,2.038,114,1.078,115,2.248,117,1.184,122,1.777,123,2.163,124,0.718,125,1.265,126,1.215,127,0.878,128,0.878,129,0.878,130,0.778,131,0.843,132,0.878,133,0.778,134,1.581,135,0.878,136,0.878,137,0.778,138,0.778,139,1.318,140,0.778,141,1.318,142,0.778,143,1.99,144,0.878,145,0.778,146,0.748,147,0.878,148,0.748,149,0.878,150,0.778,151,0.398,152,0.878,153,0.778,154,0.878,155,0.748,156,0.878,157,0.748,158,0.878,159,0.778,160,0.518,161,0.878,162,0.748,163,1.581,164,0.778,165,0.748,166,0.878,167,0.778,168,1.159,169,0.778,170,0.843,171,0.878,172,0.778,173,0.878,174,0.843,175,0.878,176,0.748,177,1.459,178,0.778,179,1.317,180,1.557,181,2.143,182,0.878,183,0.878,190,1.95,204,0.778,205,0.597,213,1.989,216,2.419,217,1.842,233,1.647,256,2.483,269,2.226,277,1.301,278,1.301,279,1.083,306,1.24,316,2.163,324,0.843,325,3.463,330,1.441,332,1.523,336,1.401,341,2.076,343,1.301,345,2.132,352,2.163,353,1.441,354,2.053,356,1.614,357,1.523,358,2.163,359,2.539,363,2.885,364,2.596,365,2.464,366,2.984,368,2.763,382,1.368,383,1.989,384,1.989,398,0.915,399,2.908,418,0.612,421,1.368,422,1.368,483,6.227,496,2.285,536,0.994,540,1.132,552,0.994,585,0.915,599,4.265,615,1.614,617,1.719,621,2.423,638,2.909,650,2.163,654,2.908,658,2.605,676,1.842,681,1.083,698,2.163,700,0.81,701,1.301,742,0.994,743,2.053,745,1.719,750,1.24,751,2.984,753,1.842,789,1.842,864,1.842,944,4.348,966,3.913,975,5.448,1067,2.173,1087,1.842,1104,2.419,1105,4.357,1106,3.63,1109,3.913,1111,3.63,1113,2.419,1116,3.63,1117,2.58,1127,2.419,1138,4.348,1139,3.63,1140,2.984,1141,2.419,1142,2.419,1143,2.419,1144,2.173,1145,2.419,1146,2.419,1147,1.037,1148,2.173,1149,2.173,1150,3.63,1162,2.419,1345,2.483,1432,1.441,1729,1.719,1783,2.173,1852,4.357,1858,3.63,2044,2.419,2055,2.419,2057,4.841,2060,3.63,2061,3.63,2063,2.419,2174,2.419,2191,7.19,2192,5.03,2193,5.59,2194,4.191,2195,2.793,2196,2.793,2197,2.793,2198,2.793,2199,4.191,2200,5.59,2201,2.793,2202,2.793,2203,2.793,2204,4.191,2205,4.191,2206,4.191,2207,4.191,2208,4.191,2209,2.793,2210,2.793,2211,2.793,2212,2.793,2213,2.793,2214,2.793,2215,2.793,2216,2.793,2217,2.793,2218,5.59,2219,5.59,2220,5.59,2221,5.59,2222,5.59,2223,4.191,2224,4.191,2225,4.191,2226,4.191,2227,4.191,2228,4.191,2229,4.191,2230,2.793,2231,2.793,2232,2.793,2233,2.793,2234,2.793,2235,2.793,2236,2.793,2237,2.793,2238,2.793,2239,2.793,2240,2.793,2241,2.793,2242,2.793,2243,2.793,2244,2.793,2245,2.793,2246,2.793,2247,2.793,2248,2.793]],["title/injectables/WrapperNavigateService.html",[485,1.385,1731,3.028]],["body/injectables/WrapperNavigateService.html",[0,0.351,3,0.196,4,0.196,5,0.171,8,0.351,9,1.194,13,1.279,15,1.299,16,0.016,17,0.389,18,1.047,20,0.994,21,0.977,25,0.196,26,0.013,27,0.013,50,0.669,58,1.274,62,0.351,65,1.327,71,1.757,72,0.759,204,1.557,205,0.796,257,4.59,276,2.884,280,4.347,306,2.482,485,2.387,486,2.884,536,2.387,542,2.884,543,2.884,658,3.35,1072,4.347,1259,4.84,1542,4.347,1543,3.979,1729,4.13,1731,5.218,1739,5.218,2249,7.456,2250,5.589,2251,7.189,2252,5.589,2253,6.709,2254,6.709,2255,5.589,2256,5.589,2257,5.589,2258,5.589]],["title/dependencies.html",[434,2.707,2259,2.813]],["body/dependencies.html",[16,0.016,26,0.014,27,0.014,72,0.836,75,1.934,434,4.104,456,3.557,475,5.329,476,5.329,1869,4.786,2260,6.153,2261,6.153,2262,6.153,2263,7.1,2264,5.329,2265,6.153,2266,6.153,2267,6.153,2268,6.153,2269,6.153]],["title/miscellaneous/enumerations.html",[2270,2,2271,4.056]],["body/miscellaneous/enumerations.html",[8,0.375,16,0.016,26,0.013,27,0.013,43,1.154,87,2.589,138,1.371,151,1.119,160,1.107,179,1.107,205,1.137,618,2.589,769,2.956,1273,2.649,1416,3.096,1417,2.649,1418,2.649,1419,2.528,1420,2.649,1421,2.528,2270,3.671,2271,5.165,2272,5.964]],["title/miscellaneous/functions.html",[2270,2,2273,4.056]],["body/miscellaneous/functions.html",[8,0.396,16,0.014,26,0.014,27,0.014,1180,4.482,1219,6.23,1228,6.541,2270,3.875,2273,5.452,2274,5.452]],["title/index.html",[8,0.204,1685,2.813,2275,3.249]],["body/index.html",[5,0.17,16,0.013,17,0.322,26,0.013,27,0.013,28,0.883,151,1.101,204,1.546,309,3.417,319,4.215,446,3.417,484,3.417,536,1.975,727,3.952,1154,5.197,1542,5.197,2264,6.592,2276,5.551,2277,4.807,2278,6.208,2279,6.208,2280,4.807,2281,4.807,2282,5.551,2283,7.439,2284,7.168,2285,7.819,2286,5.551,2287,5.551,2288,5.551,2289,5.551,2290,5.551,2291,5.551,2292,7.612,2293,5.551,2294,5.551,2295,6.681,2296,5.551,2297,5.551,2298,5.551,2299,6.681,2300,5.551,2301,5.551,2302,5.551,2303,5.551,2304,5.551,2305,5.551,2306,6.681,2307,6.681,2308,5.551,2309,5.551,2310,5.551,2311,5.551,2312,5.551,2313,7.168,2314,5.551,2315,5.551]],["title/modules.html",[433,2.9]],["body/modules.html",[16,0.014,26,0.014,27,0.014,432,4.057,433,3.355,443,3.787,449,3.787,677,4.786,1193,4.057,1213,4.381,2316,7.691,2317,7.691,2318,7.691,2319,7.822,2320,6.153]],["title/overview.html",[2321,4.606]],["body/overview.html",[0,0.245,16,0.016,26,0.01,27,0.01,29,2.072,30,1.087,60,2.158,124,1.003,130,2.007,133,2.007,137,2.007,140,2.007,142,2.007,145,2.007,146,1.929,148,1.929,150,2.007,153,2.007,155,1.929,157,1.623,159,2.007,162,1.929,164,2.007,167,2.007,169,2.007,172,2.007,176,1.929,178,2.007,180,2.007,255,2.401,269,2.07,341,1.448,431,1.911,432,5.37,433,2.127,434,2.255,435,2.401,436,2.572,437,2.401,438,3.378,439,3.378,440,3.378,441,3.378,442,3.378,443,4.968,444,3.512,445,2.401,446,2.401,449,4.837,486,2.013,653,2.457,823,4.143,1179,3.306,1193,3.998,1213,5.664,1214,3.378,1215,3.378,1216,3.378,1217,3.378,1218,3.378,1233,3.378,1234,3.378,1235,3.378,1272,1.178,1750,5.13,1751,2.401,1767,5.13,1771,5.13,1786,3.378,1787,3.378,1788,3.378,1789,5.13,1790,5.13,2321,3.378,2322,3.901,2323,3.901,2324,3.901]],["title/properties.html",[50,0.467,2259,2.813]],["body/properties.html",[16,0.016,26,0.014,27,0.014,30,1.674,50,0.599,396,5.203,837,1.545,1154,4.673,2016,5.203,2277,5.203,2278,6.064,2279,5.203,2280,6.064,2281,5.203,2325,6.008,2326,6.008,2327,6.008,2328,6.008,2329,7.002,2330,7.411,2331,6.008,2332,6.008,2333,6.008,2334,6.008,2335,6.008,2336,6.008,2337,6.008,2338,6.008,2339,6.008,2340,6.008,2341,6.008]],["title/miscellaneous/variables.html",[2270,2,2342,4.056]],["body/miscellaneous/variables.html",[8,0.314,16,0.016,26,0.012,27,0.012,62,0.43,68,0.806,151,0.711,165,1.337,177,1.448,204,1.905,205,0.974,285,1.391,397,2.628,398,2.24,418,1.57,467,3.884,668,2.334,679,1.57,699,4.87,743,2.446,812,2.771,941,1.89,1044,2.654,1289,2.218,1494,4.87,1713,4.325,2270,3.074,2274,4.325,2342,4.325,2343,4.994,2344,6.261,2345,6.261,2346,6.261,2347,4.994,2348,4.994,2349,4.994,2350,4.994,2351,6.261,2352,6.261,2353,6.261,2354,4.994,2355,6.261,2356,4.994,2357,4.994,2358,4.994,2359,4.994,2360,4.994,2361,4.994,2362,4.994,2363,4.994,2364,4.994,2365,4.994,2366,4.994,2367,4.994,2368,4.994,2369,4.994,2370,4.994,2371,4.994,2372,4.994,2373,4.994,2374,4.994,2375,4.994,2376,4.994,2377,4.994,2378,4.994,2379,4.994,2380,4.994,2381,4.994,2382,4.994,2383,4.994,2384,4.994,2385,4.994,2386,4.994,2387,4.994,2388,4.994,2389,4.994,2390,4.994,2391,4.994,2392,4.994,2393,4.994,2394,4.994,2395,4.994,2396,4.994,2397,4.994,2398,4.994,2399,4.994,2400,4.994,2401,4.994,2402,4.994,2403,4.994,2404,4.994,2405,4.994,2406,4.994,2407,4.994,2408,4.994,2409,4.994]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":115,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["0!important",{"_index":2240,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["0.0625rem",{"_index":356,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["0.1",{"_index":1966,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["0.12",{"_index":611,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["0.125rem",{"_index":1960,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["0.14",{"_index":610,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["0.15",{"_index":2048,"title":{},"body":{"components/SlidersComponent.html":{}}}],["0.1875rem",{"_index":1075,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{}}}],["0.2",{"_index":609,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["0.25",{"_index":1973,"title":{},"body":{"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["0.25rem",{"_index":123,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["0.2625px",{"_index":1721,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["0.375rem",{"_index":624,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["0.4s",{"_index":1970,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["0.5",{"_index":2050,"title":{},"body":{"components/SlidersComponent.html":{}}}],["0.5rem",{"_index":364,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["0.5s",{"_index":2069,"title":{},"body":{"components/SlidersComponent.html":{}}}],["0.6",{"_index":2068,"title":{},"body":{"components/SlidersComponent.html":{}}}],["0.75",{"_index":2066,"title":{},"body":{"components/SlidersComponent.html":{}}}],["0.75rem",{"_index":1090,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["0.8",{"_index":1972,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["0.8125rem",{"_index":1080,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["0.875rem",{"_index":118,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["000000",{"_index":216,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["006400",{"_index":225,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["00ff00",{"_index":2214,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["0625rem",{"_index":1097,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["0px",{"_index":110,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["0rem",{"_index":1161,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["1",{"_index":341,"title":{"interfaces/IMenuOptions-1.html":{}},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["1)\">&#10094",{"_index":2038,"title":{},"body":{"components/SlidersComponent.html":{}}}],["1)\">&#10095",{"_index":2040,"title":{},"body":{"components/SlidersComponent.html":{}}}],["1.125rem",{"_index":1160,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["1.1rem",{"_index":2059,"title":{},"body":{"components/SlidersComponent.html":{}}}],["1.25rem",{"_index":2167,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["1.375rem",{"_index":1965,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["1.4rem",{"_index":386,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["1.5rem",{"_index":109,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["1.5s",{"_index":2053,"title":{},"body":{"components/SlidersComponent.html":{}}}],["10",{"_index":842,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["100",{"_index":100,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["100%!important",{"_index":1575,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["1000",{"_index":1778,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["100000",{"_index":1978,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["100vh",{"_index":1967,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["10px",{"_index":1981,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["116699",{"_index":2238,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["11rem",{"_index":346,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["12",{"_index":333,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{}}}],["120",{"_index":2065,"title":{},"body":{"components/SlidersComponent.html":{}}}],["12px",{"_index":2043,"title":{},"body":{"components/SlidersComponent.html":{}}}],["13.875rem",{"_index":1167,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["13px",{"_index":2235,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["14",{"_index":331,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{}}}],["14.3.0",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":1959,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["15",{"_index":2046,"title":{},"body":{"components/SlidersComponent.html":{}}}],["156px",{"_index":1079,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["15rem",{"_index":1977,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["16px",{"_index":1983,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["17.25rem",{"_index":2231,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["18.75rem",{"_index":1889,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["1800px",{"_index":1579,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["1em",{"_index":1159,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["1em!important",{"_index":1578,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["1fr",{"_index":763,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{}}}],["1px",{"_index":328,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["1rem",{"_index":105,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["1s",{"_index":1070,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["2",{"_index":330,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["2!important",{"_index":1066,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["2.0.0",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2269,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":1100,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["2.5rem",{"_index":1604,"title":{},"body":{"components/LoadAlertComponent.html":{},"components/SidePannelComponent.html":{}}}],["20",{"_index":2217,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["200",{"_index":1081,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["20px",{"_index":1850,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["22",{"_index":2322,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2324,"title":{},"body":{"overview.html":{}}}],["243px",{"_index":2041,"title":{},"body":{"components/SlidersComponent.html":{}}}],["24px",{"_index":1984,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["28.125rem",{"_index":1166,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["280ms",{"_index":338,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["2px",{"_index":327,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["2rem",{"_index":366,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["3",{"_index":379,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/SidePannelComponent.html":{}}}],["3.125rem",{"_index":360,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["3.5rem",{"_index":1607,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["3.75rem",{"_index":1605,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["300",{"_index":1724,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["306933",{"_index":214,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["30px",{"_index":1986,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["30rem",{"_index":1602,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["33.75rem",{"_index":1845,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["350px",{"_index":2054,"title":{},"body":{"components/SlidersComponent.html":{}}}],["3670b2",{"_index":218,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["3px",{"_index":332,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["4",{"_index":1968,"title":{},"body":{"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["4.17.20",{"_index":2268,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":323,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["442px",{"_index":2042,"title":{},"body":{"components/SlidersComponent.html":{}}}],["4e9e87",{"_index":220,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["4fr",{"_index":1573,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["4px",{"_index":2067,"title":{},"body":{"components/SlidersComponent.html":{}}}],["4rem",{"_index":1717,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["5",{"_index":823,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{},"overview.html":{}}}],["5.1.2",{"_index":2267,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":2325,"title":{},"body":{"properties.html":{}}}],["50",{"_index":358,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["500",{"_index":816,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["50rem",{"_index":1073,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["5px",{"_index":1982,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["5rem",{"_index":1603,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["6.75rem",{"_index":1844,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["600",{"_index":1722,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["6px",{"_index":1985,"title":{},"body":{"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["7.2.0",{"_index":2281,"title":{},"body":{"index.html":{},"properties.html":{}}}],["700",{"_index":378,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["700px",{"_index":767,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["75",{"_index":2049,"title":{},"body":{"components/SlidersComponent.html":{}}}],["767px",{"_index":1576,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["768px",{"_index":617,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["7e4c8d",{"_index":221,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["8",{"_index":1054,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["8.4375rem",{"_index":1716,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["80",{"_index":2215,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["800",{"_index":1705,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["8125rem",{"_index":1606,"title":{},"body":{"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{}}}],["85",{"_index":2047,"title":{},"body":{"components/SlidersComponent.html":{}}}],["8px",{"_index":614,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/SidePannelComponent.html":{}}}],["9",{"_index":2323,"title":{},"body":{"overview.html":{}}}],["9.5rem",{"_index":1715,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["90",{"_index":1074,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{}}}],["94",{"_index":102,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["96",{"_index":1085,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["97.6",{"_index":1843,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["99999",{"_index":1069,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["_",{"_index":74,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["_.chain(this.tags).orderby('score",{"_index":2207,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["_.filter(data.topics",{"_index":1877,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["_.find(this._context",{"_index":1452,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.find(this.telemetryutils.getcontext",{"_index":848,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["_.get(_.maxby(this.tags",{"_index":2205,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["_.get(data",{"_index":864,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["_.get(discussiondata",{"_index":850,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["_.get(element",{"_index":983,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["_.get(event",{"_index":871,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.get(params",{"_index":550,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{}}}],["_.get(rawcategories",{"_index":289,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/LibEntryComponent.html":{}}}],["_.get(response",{"_index":734,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["_.get(result",{"_index":1674,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["_.get(target",{"_index":1479,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.get(this.config",{"_index":284,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["_.get(this.currentobj",{"_index":1469,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.get(this.data",{"_index":89,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["_.get(this.getparams",{"_index":555,"title":{},"body":{"injectables/ConfigService.html":{}}}],["_.get(this.topicdata",{"_index":1045,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["_.isempty(data",{"_index":1454,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.isempty(event",{"_index":1191,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["_.isequal(data",{"_index":1455,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.last(context",{"_index":1449,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.last(this._context",{"_index":1457,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.map(_.get(topicdata",{"_index":982,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["_.map(tags",{"_index":1019,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["_.merge(result[0",{"_index":1693,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["_.reject(this._context",{"_index":1460,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_.trim(_.get(discussiondata",{"_index":2160,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["_.union(_.get(data",{"_index":866,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["_.uniqby(response['posts",{"_index":1676,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["_.uniqby(this.data.bestposts",{"_index":1670,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["_.uniqby(this.data.latestposts",{"_index":1681,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["__content",{"_index":1723,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["__menu",{"_index":1976,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["_config",{"_index":488,"title":{},"body":{"injectables/ConfigService.html":{}}}],["_context",{"_index":1443,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["_eventservice",{"_index":2254,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["_header",{"_index":1342,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["_navitemsource",{"_index":1247,"title":{},"body":{"injectables/EventsService.html":{}}}],["a.all_update_link",{"_index":2248,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["aboutme",{"_index":1398,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["absolute",{"_index":362,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"classes/AbstractConfigService.html":{}}}],["abstractconfigservice",{"_index":1,"title":{"classes/AbstractConfigService.html":{}},"body":{"classes/AbstractConfigService.html":{},"components/LibEntryComponent.html":{}}}],["accessors",{"_index":1998,"title":{},"body":{"components/SlidersComponent.html":{}}}],["action",{"_index":743,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["actionevent",{"_index":1182,"title":{},"body":{"injectables/DiscussionEventsService.html":{},"components/PostReplyComponent.html":{}}}],["activatedroute",{"_index":489,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["activatedroute.data.subscribe((config",{"_index":544,"title":{},"body":{"injectables/ConfigService.html":{}}}],["activatedroute.queryparams.subscribe((params",{"_index":547,"title":{},"body":{"injectables/ConfigService.html":{}}}],["active",{"_index":1089,"title":{},"body":{"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/SidePannelComponent.html":{}}}],["actual_component",{"_index":183,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["add",{"_index":484,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/PostReplyComponent.html":{},"components/TagAllDiscussionComponent.html":{},"index.html":{}}}],["added",{"_index":2290,"title":{},"body":{"index.html":{}}}],["again",{"_index":951,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["ago",{"_index":1780,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["alert",{"_index":1421,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LoadAlertComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert'},{'name",{"_index":161,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["alert.component",{"_index":1245,"title":{},"body":{"modules/ElementsModule.html":{}}}],["alert.component.html",{"_index":1583,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.scss",{"_index":1582,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.ts",{"_index":1581,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.ts:19",{"_index":1588,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.ts:20",{"_index":1587,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.ts:26",{"_index":1592,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.ts:30",{"_index":1591,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert.component.ts:35",{"_index":1589,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["alert/load",{"_index":1244,"title":{},"body":{"modules/ElementsModule.html":{},"components/LoadAlertComponent.html":{}}}],["alertmodal",{"_index":1600,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["align",{"_index":352,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["all'},{'name",{"_index":144,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["all.component",{"_index":478,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{}}}],["all/discuss",{"_index":477,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{}}}],["allcategories",{"_index":889,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["alltags",{"_index":890,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["angular",{"_index":2278,"title":{},"body":{"index.html":{},"properties.html":{}}}],["angular.json",{"_index":2291,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":456,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":452,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":471,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussStartComponent.html":{},"modules/ElementsModule.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{}}}],["angular/router",{"_index":540,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["animation",{"_index":2051,"title":{},"body":{"components/SlidersComponent.html":{}}}],["anonymous",{"_index":594,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["answer",{"_index":1842,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["answered",{"_index":2224,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["anymore",{"_index":1258,"title":{},"body":{"injectables/EventsService.html":{}}}],["api",{"_index":876,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["apibasepath",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apislug",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":44,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["apploadercomponent",{"_index":29,"title":{"components/AppLoaderComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["approach",{"_index":1545,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["area",{"_index":1725,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["array",{"_index":243,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/DiscussStartComponent.html":{},"injectables/EventsService.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/SidePannelComponent.html":{}}}],["array[0",{"_index":246,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["array[0].charat(0",{"_index":250,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["array[1",{"_index":249,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["array[1].charat(0",{"_index":251,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["artifacts",{"_index":2293,"title":{},"body":{"index.html":{}}}],["asc",{"_index":2086,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["assets/styles/global.scss",{"_index":2230,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["author",{"_index":2339,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":106,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["auto!important",{"_index":1577,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["autoprefixer",{"_index":370,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["available",{"_index":677,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussTagsComponent.html":{},"modules.html":{}}}],["avatar",{"_index":131,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["avatarphotocomponent",{"_index":130,"title":{"components/AvatarPhotoComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["avoid",{"_index":1700,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["back",{"_index":705,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{}}}],["background",{"_index":97,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["background:var",{"_index":334,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["badges",{"_index":1294,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["banned",{"_index":1354,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["banned:expire",{"_index":1355,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["banned_until",{"_index":1363,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["banned_until_readable",{"_index":1364,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["banner",{"_index":1497,"title":{},"body":{"components/LibEntryComponent.html":{},"components/SlidersComponent.html":{}}}],["banner_${math.random",{"_index":2002,"title":{},"body":{"components/SlidersComponent.html":{}}}],["bannerdata",{"_index":1996,"title":{},"body":{"components/SlidersComponent.html":{}}}],["banneroption",{"_index":1428,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{}}}],["bannersubscription",{"_index":1498,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["base",{"_index":135,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["based",{"_index":1629,"title":{},"body":{"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/TagAllDiscussionComponent.html":{}}}],["basewrappercomponent",{"_index":133,"title":{"components/BaseWrapperComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["basewrappercomponent:17",{"_index":403,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["basewrappercomponent:18",{"_index":420,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["basewrappercomponent:21",{"_index":409,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["basewrappercomponent:24",{"_index":2170,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["basewrappercomponent:28",{"_index":2169,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["basewrappercomponent:30",{"_index":408,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["basewrappercomponent:42",{"_index":407,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["basis",{"_index":622,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["before",{"_index":1701,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["behavior",{"_index":1568,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["behaviorsubject",{"_index":1265,"title":{},"body":{"injectables/EventsService.html":{}}}],["behaviorsubject(0",{"_index":1260,"title":{},"body":{"injectables/EventsService.html":{}}}],["being",{"_index":1257,"title":{},"body":{"injectables/EventsService.html":{}}}],["best",{"_index":1624,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["bestpost",{"_index":1672,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["bestposts",{"_index":1414,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["beta.1",{"_index":2326,"title":{},"body":{"properties.html":{}}}],["between",{"_index":384,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/LibEntryComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["bezier(.4",{"_index":340,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["bezier(0.25",{"_index":1971,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["bezier(0.4",{"_index":612,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["bg",{"_index":335,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["bg:var",{"_index":1062,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["bgcolor",{"_index":588,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/TagAllDiscussionComponent.html":{}}}],["birthday",{"_index":1396,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["bl",{"_index":1963,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["bl:var",{"_index":1953,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["black",{"_index":217,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["block",{"_index":342,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["blockscount",{"_index":1408,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["blue",{"_index":219,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["bodyclass",{"_index":1341,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["bold",{"_index":121,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussTagsComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["bookmark",{"_index":1322,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["bookmarked",{"_index":1378,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["bookmarkpost",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookmarks",{"_index":1381,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["boolean",{"_index":203,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{}}}],["bootstrap",{"_index":436,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":107,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["border:0",{"_index":1093,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["bottom",{"_index":122,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["bottom:1rem",{"_index":1848,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["box",{"_index":325,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["breadcrumbs",{"_index":1338,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["break",{"_index":380,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["break:break",{"_index":377,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["breakpoint",{"_index":2061,"title":{},"body":{"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["browse",{"_index":2319,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2316,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":885,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{}}}],["btn,.df",{"_index":1849,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["bugs",{"_index":2332,"title":{},"body":{"properties.html":{}}}],["build",{"_index":2292,"title":{},"body":{"index.html":{}}}],["building",{"_index":2298,"title":{},"body":{"index.html":{}}}],["button",{"_index":706,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["buttons",{"_index":1091,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["by.pipe",{"_index":1795,"title":{},"body":{"modules/PipesModule.html":{}}}],["by.pipe.ts",{"_index":2076,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:11",{"_index":2081,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by/sort",{"_index":1794,"title":{},"body":{"modules/PipesModule.html":{},"pipes/SortByPipe.html":{}}}],["calc(100",{"_index":1078,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["call",{"_index":875,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["called",{"_index":1702,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["calling",{"_index":984,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{}}}],["came",{"_index":1825,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["can't",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canban",{"_index":1410,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["cancel",{"_index":1058,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["canedit",{"_index":1409,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["card",{"_index":301,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["card'},{'name",{"_index":139,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["card.component",{"_index":1237,"title":{},"body":{"modules/ElementsModule.html":{}}}],["card.component.html",{"_index":303,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{}}}],["card.component.scss",{"_index":302,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{}}}],["card.component.ts",{"_index":300,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{}}}],["card.component.ts:10",{"_index":574,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["card.component.ts:12",{"_index":304,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.ts:14",{"_index":582,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["card.component.ts:16",{"_index":305,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.ts:18",{"_index":576,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["card.component.ts:24",{"_index":584,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["card.component.ts:37",{"_index":578,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["card.component.ts:41",{"_index":580,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["card/category",{"_index":299,"title":{},"body":{"components/CategoryCardComponent.html":{},"modules/ElementsModule.html":{}}}],["card/discuss",{"_index":568,"title":{},"body":{"components/DiscussCardComponent.html":{},"modules/ElementsModule.html":{}}}],["card_body",{"_index":2246,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["card_head",{"_index":2244,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["cards",{"_index":757,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["case",{"_index":1668,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["catch",{"_index":2027,"title":{},"body":{"components/SlidersComponent.html":{}}}],["categories",{"_index":287,"title":{},"body":{"components/BaseWrapperComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"modules/DiscussionRoutingModule.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["category",{"_index":138,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["category'},{'name",{"_index":147,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["category.component",{"_index":462,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{}}}],["category.component.css",{"_index":632,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.html",{"_index":633,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts",{"_index":631,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:102",{"_index":667,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:110",{"_index":672,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:146",{"_index":685,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:150",{"_index":661,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:154",{"_index":670,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:158",{"_index":683,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:22",{"_index":688,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:24",{"_index":692,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:25",{"_index":657,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:26",{"_index":656,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:27",{"_index":659,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:29",{"_index":694,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:31",{"_index":693,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:33",{"_index":697,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:35",{"_index":689,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":695,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:39",{"_index":655,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":691,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:43",{"_index":690,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:44",{"_index":696,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:45",{"_index":686,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:50",{"_index":684,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:72",{"_index":663,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.component.ts:88",{"_index":665,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["category.description",{"_index":314,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["category.totalpostcount",{"_index":317,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["category.totaltopiccount",{"_index":315,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["category/:slug",{"_index":1210,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["category/discuss",{"_index":461,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussCategoryComponent.html":{},"modules/DiscussionRoutingModule.html":{}}}],["categoryaction",{"_index":648,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["categorycardcomponent",{"_index":137,"title":{"components/CategoryCardComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["categoryhomeaction",{"_index":788,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["categoryid",{"_index":490,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{}}}],["categoryids",{"_index":649,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["categoryobj",{"_index":1436,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["categorywidgetcomponent",{"_index":140,"title":{"components/CategoryWidgetComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["catid",{"_index":1859,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["cb/resolver",{"_index":2017,"title":{},"body":{"components/SlidersComponent.html":{}}}],["cb/utils",{"_index":2019,"title":{},"body":{"components/SlidersComponent.html":{}}}],["cd",{"_index":2301,"title":{},"body":{"index.html":{}}}],["cdata",{"_index":1468,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["center",{"_index":354,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["change",{"_index":708,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["changed",{"_index":1664,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["characters",{"_index":1055,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["check",{"_index":309,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"index.html":{}}}],["checkcontext",{"_index":491,"title":{},"body":{"injectables/ConfigService.html":{}}}],["child",{"_index":1103,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["children",{"_index":674,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"modules/DiscussionRoutingModule.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["children').foreach(subcategorydata",{"_index":746,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["children').length",{"_index":738,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["chips",{"_index":476,"title":{},"body":{"modules/ComponentsModule.html":{},"dependencies.html":{}}}],["cid",{"_index":668,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"miscellaneous/variables.html":{}}}],["cid.result",{"_index":2145,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["cids",{"_index":891,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["circlecolor",{"_index":191,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["clamp",{"_index":369,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractConfigService.html":{}},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"overview.html":{}}}],["class=\"next",{"_index":2039,"title":{},"body":{"components/SlidersComponent.html":{}}}],["class=\"prev",{"_index":2036,"title":{},"body":{"components/SlidersComponent.html":{}}}],["class=\"topic",{"_index":881,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractConfigService.html":{}}}],["cleanup",{"_index":1259,"title":{},"body":{"injectables/EventsService.html":{},"injectables/WrapperNavigateService.html":{}}}],["cli",{"_index":2279,"title":{},"body":{"index.html":{},"properties.html":{}}}],["cli](https://github.com/angular/angular",{"_index":2327,"title":{},"body":{"properties.html":{}}}],["click",{"_index":676,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"interfaces/ITelemetryObj.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["click)=\"slideto(currentindex",{"_index":2037,"title":{},"body":{"components/SlidersComponent.html":{}}}],["clicked",{"_index":707,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["close",{"_index":910,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/SidePannelComponent.html":{}}}],["close(event",{"_index":1510,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["closeloadalert",{"_index":1504,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["closemodal",{"_index":641,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["closemodal(event",{"_index":660,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/LoadAlertComponent.html":{}}}],["closemodal(eventmessage",{"_index":920,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["closenav",{"_index":1911,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["closesidenav",{"_index":2251,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["cluster_componentsmodule",{"_index":438,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":439,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_exports",{"_index":440,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_imports",{"_index":441,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_providers",{"_index":442,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_discussionuimodule",{"_index":1214,"title":{},"body":{"modules/DiscussionUiModule.html":{},"overview.html":{}}}],["cluster_discussionuimodule_declarations",{"_index":1215,"title":{},"body":{"modules/DiscussionUiModule.html":{},"overview.html":{}}}],["cluster_discussionuimodule_exports",{"_index":1216,"title":{},"body":{"modules/DiscussionUiModule.html":{},"overview.html":{}}}],["cluster_discussionuimodule_imports",{"_index":1217,"title":{},"body":{"modules/DiscussionUiModule.html":{},"overview.html":{}}}],["cluster_discussionuimodule_providers",{"_index":1218,"title":{},"body":{"modules/DiscussionUiModule.html":{},"overview.html":{}}}],["cluster_elementsmodule",{"_index":1233,"title":{},"body":{"modules/ElementsModule.html":{},"overview.html":{}}}],["cluster_elementsmodule_declarations",{"_index":1234,"title":{},"body":{"modules/ElementsModule.html":{},"overview.html":{}}}],["cluster_elementsmodule_exports",{"_index":1235,"title":{},"body":{"modules/ElementsModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1786,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1788,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1787,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":727,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"index.html":{}}}],["color",{"_index":336,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["colors",{"_index":192,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["column",{"_index":1165,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["columns",{"_index":759,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{}}}],["combinelatest",{"_index":1650,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["comments",{"_index":608,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["common",{"_index":1060,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["common/constants.json",{"_index":422,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["commonmodule",{"_index":455,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{}}}],["component",{"_index":28,"title":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"index.html":{}}}],["component_template",{"_index":128,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["components",{"_index":30,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{},"properties.html":{}}}],["components/components.module",{"_index":1220,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["components/discuss",{"_index":1198,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["components/discussion",{"_index":1196,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["components/lib",{"_index":1199,"title":{},"body":{"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{}}}],["components/my",{"_index":1197,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["components/tag",{"_index":1204,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["componentsmodule",{"_index":432,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":265,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/LibEntryComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["config.data",{"_index":546,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.model",{"_index":24,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["config.model.ts",{"_index":1424,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["config.service",{"_index":1532,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["config.service.ts",{"_index":7,"title":{},"body":{"classes/AbstractConfigService.html":{}}}],["config.service.ts:5",{"_index":14,"title":{},"body":{"classes/AbstractConfigService.html":{}}}],["configs",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":269,"title":{"injectables/ConfigService.html":{}},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["configsvc",{"_index":268,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["console.error('error",{"_index":2143,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["console.log",{"_index":2022,"title":{},"body":{"components/SlidersComponent.html":{}}}],["console.log('conent",{"_index":1824,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["console.log('discussiondata",{"_index":586,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["console.log('error",{"_index":869,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["console.log('getrecenttopics",{"_index":1692,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["console.log('issue",{"_index":729,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["console.log('lib",{"_index":1190,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["console.log('rollup",{"_index":1489,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["console.log(error",{"_index":1696,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["console.log(response",{"_index":1652,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["console.log(this.category",{"_index":313,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["const",{"_index":233,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["constants",{"_index":421,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["constants.category",{"_index":410,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["constants.category_details",{"_index":412,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["constants.category_home",{"_index":415,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{}}}],["constants.menuoptions",{"_index":1943,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["constants.tag_all_discuss",{"_index":1145,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["constants.tags",{"_index":2171,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["constants.tagsall",{"_index":2173,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["constructor(_eventservice",{"_index":2252,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["constructor(activatedroute",{"_index":508,"title":{},"body":{"injectables/ConfigService.html":{},"components/LibEntryComponent.html":{}}}],["constructor(configsvc",{"_index":400,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["constructor(discussionevents",{"_index":2181,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["constructor(discussionservice",{"_index":59,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussTagsComponent.html":{}}}],["constructor(discussservice",{"_index":651,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["constructor(formbuilder",{"_index":1810,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["constructor(navigationserviceservice",{"_index":266,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["constructor(private",{"_index":280,"title":{},"body":{"components/BaseWrapperComponent.html":{},"injectables/NavigationServiceService.html":{},"injectables/WrapperNavigateService.html":{}}}],["constructor(public",{"_index":1894,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["constructor(route",{"_index":2109,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["constructor(router",{"_index":789,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["constructor(telemetryutils",{"_index":1586,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["constructor(wrapperservice",{"_index":1730,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["container",{"_index":96,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["containing",{"_index":1175,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["content",{"_index":114,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["context",{"_index":393,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{}}}],["context_props",{"_index":699,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"miscellaneous/variables.html":{}}}],["contextidarr",{"_index":1434,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["contexts",{"_index":2133,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["contexttype",{"_index":1435,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["control",{"_index":1061,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["count",{"_index":629,"title":{},"body":{"components/DiscussCardComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["countdown",{"_index":51,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["countdown:subscription",{"_index":80,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["counter",{"_index":1779,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["cover:position",{"_index":1405,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["cover:url",{"_index":1404,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["covid",{"_index":2222,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["create",{"_index":307,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["createerrormsg",{"_index":892,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["createinititals",{"_index":196,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["createpost",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["csmodule",{"_index":1231,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["css",{"_index":2193,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["cubic",{"_index":339,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["current",{"_index":1666,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["currentactivepage",{"_index":772,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["currentfilter",{"_index":1613,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["currentindex",{"_index":1991,"title":{},"body":{"components/SlidersComponent.html":{}}}],["currentobj",{"_index":1444,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["currentpage",{"_index":773,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["currentroute",{"_index":1499,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["currenttarget.attributes.id",{"_index":1474,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["cursor",{"_index":347,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["custom",{"_index":2233,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["custom_profile_info",{"_index":1366,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["d.label",{"_index":1949,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["d3d3d3",{"_index":2071,"title":{},"body":{"components/SlidersComponent.html":{}}}],["data",{"_index":57,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"pipes/SortByPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["data.action",{"_index":295,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["data.foreach((element",{"_index":1488,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["data.foreach((obj",{"_index":2089,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["data.id",{"_index":1453,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["data.length",{"_index":2083,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["data.map(e",{"_index":2084,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["data.pagedata",{"_index":1537,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["data.pagedata.data.banner",{"_index":1539,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["data.pagination",{"_index":863,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["data.result",{"_index":1010,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["data.sort",{"_index":2087,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["data.sort().reverse",{"_index":2088,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["data.tabledata.currentvalue.columns",{"_index":2210,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["data.tagname",{"_index":2175,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["data.topics",{"_index":2140,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["data?.email",{"_index":1708,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["data?.lastonline",{"_index":1712,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["data?.postcount",{"_index":1710,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["data?.topiccount",{"_index":1709,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["data?.username",{"_index":1706,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["date",{"_index":596,"title":{},"body":{"components/DiscussCardComponent.html":{},"pipes/PipeRelativeTimePipe.html":{}}}],["date(value",{"_index":1777,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["day",{"_index":1782,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["days",{"_index":1785,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["debugger",{"_index":966,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["declarations",{"_index":435,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decorators",{"_index":809,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["deep",{"_index":1095,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["deep:root",{"_index":320,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["default",{"_index":204,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulterror",{"_index":893,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["defaultlandingpage",{"_index":1429,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["defaultpage",{"_index":1905,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["defined",{"_index":13,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["delete",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecontext",{"_index":2176,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["deletecontext(prevtopic",{"_index":1458,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["deleted",{"_index":1309,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["deletepost",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleter",{"_index":1324,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["deleteruid",{"_index":1308,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["deletetopic",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["department",{"_index":1614,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["dependencies",{"_index":434,"title":{"dependencies.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc').take(5).value",{"_index":2208,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["description",{"_index":837,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"properties.html":{}}}],["descriptionparsed",{"_index":1274,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["detail",{"_index":2118,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["details",{"_index":87,"title":{},"body":{"components/AppLoaderComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["details'},{'name",{"_index":152,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["details.component",{"_index":468,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{}}}],["details.component.ts",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details/discussion",{"_index":467,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["detailspage",{"_index":394,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["detailstoggle",{"_index":395,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["detals",{"_index":2212,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["df",{"_index":321,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["df_back",{"_index":1560,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["df_close",{"_index":1563,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["dicussion",{"_index":2117,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["dimmer",{"_index":1601,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["direction",{"_index":350,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["directive",{"_index":127,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["directives",{"_index":182,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2286,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2296,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1094,"title":{},"body":{"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/PostReplyComponent.html":{}}}],["discuss",{"_index":143,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["discussallcomponent",{"_index":142,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discusscardcomponent",{"_index":145,"title":{"components/DiscussCardComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discusscategorycomponent",{"_index":146,"title":{"components/DiscussCategoryComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discusshomecomponent",{"_index":148,"title":{"components/DiscussHomeComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discussion",{"_index":151,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["discussion'},{'name",{"_index":163,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["discussion.component",{"_index":466,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/ElementsModule.html":{}}}],["discussion.component.html",{"_index":1612,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.scss",{"_index":1611,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts",{"_index":1610,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:124",{"_index":2122,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:134",{"_index":2120,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:142",{"_index":2116,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:161",{"_index":2115,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:17",{"_index":1861,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["discussion.component.ts:173",{"_index":2114,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:18",{"_index":1862,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["discussion.component.ts:190",{"_index":1633,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:196",{"_index":1632,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:20",{"_index":1641,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:204",{"_index":1631,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:21",{"_index":1638,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:22",{"_index":1640,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["discussion.component.ts:226",{"_index":1636,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:23",{"_index":1637,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:24",{"_index":1639,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["discussion.component.ts:25",{"_index":1643,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:26",{"_index":1645,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:27",{"_index":1649,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:28",{"_index":1648,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:29",{"_index":1644,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:30",{"_index":1646,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:31",{"_index":2123,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:32",{"_index":2124,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:33",{"_index":1642,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:34",{"_index":1868,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:35",{"_index":2125,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:36",{"_index":1620,"title":{},"body":{"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:37",{"_index":1867,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:41",{"_index":1647,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:43",{"_index":1864,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:45",{"_index":1622,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:50",{"_index":2121,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:62",{"_index":1866,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["discussion.component.ts:65",{"_index":1635,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:74",{"_index":1634,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:75",{"_index":2113,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.component.ts:85",{"_index":1628,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["discussion.component.ts:92",{"_index":2111,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["discussion.service",{"_index":539,"title":{},"body":{"injectables/ConfigService.html":{}}}],["discussion.timestamp",{"_index":1885,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["discussion/my",{"_index":465,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"components/MyDiscussionComponent.html":{}}}],["discussion/related",{"_index":1240,"title":{},"body":{"modules/ElementsModule.html":{},"components/RelatedDiscussionComponent.html":{}}}],["discussion/tag",{"_index":479,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussiondata",{"_index":573,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussiondata.category.name",{"_index":592,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata.downvotes",{"_index":602,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata.lastposttime",{"_index":595,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata.postcount",{"_index":607,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata.tid",{"_index":852,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussiondata.timestamp",{"_index":597,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata.title",{"_index":853,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussiondata.upvotes",{"_index":601,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata.viewcount",{"_index":605,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondata?.user?.username",{"_index":593,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["discussiondetailscomponent",{"_index":150,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discussionevents",{"_index":1445,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["discussioneventservice",{"_index":1508,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["discussioneventsservice",{"_index":1179,"title":{"injectables/DiscussionEventsService.html":{}},"body":{"injectables/DiscussionEventsService.html":{},"modules/DiscussionUiModule.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"injectables/TelemetryUtilsService.html":{},"overview.html":{}}}],["discussionlist",{"_index":774,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["discussionroutingmodule",{"_index":1193,"title":{"modules/DiscussionRoutingModule.html":{}},"body":{"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules.html":{},"overview.html":{}}}],["discussions",{"_index":316,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["discussionservice",{"_index":60,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"overview.html":{}}}],["discussionui",{"_index":2276,"title":{},"body":{"index.html":{}}}],["discussionuimodule",{"_index":1213,"title":{"modules/DiscussionUiModule.html":{}},"body":{"modules/DiscussionUiModule.html":{},"modules.html":{},"overview.html":{}}}],["discussservice",{"_index":634,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussstartcomponent",{"_index":153,"title":{"components/DiscussStartComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discusstagscomponent",{"_index":155,"title":{"components/DiscussTagsComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["discussutils",{"_index":913,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["discussutilsservice",{"_index":914,"title":{"injectables/DiscussUtilsService.html":{}},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"components/LoadAlertComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["display",{"_index":111,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["display_delete_tools",{"_index":1387,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["display_edit_tools",{"_index":1386,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["display_moderator_tools",{"_index":1388,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["display_move_tools",{"_index":1389,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["display_post_menu",{"_index":1390,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["dist",{"_index":2295,"title":{},"body":{"index.html":{}}}],["dist/discussion",{"_index":2302,"title":{},"body":{"index.html":{}}}],["div",{"_index":1162,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["div:hover",{"_index":1164,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["document.body.classlist.contains('widget",{"_index":1939,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["document.queryselector('[tabindex",{"_index":964,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["dom",{"_index":33,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["don't",{"_index":2288,"title":{},"body":{"index.html":{}}}],["dot",{"_index":623,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["dot.active",{"_index":2070,"title":{},"body":{"components/SlidersComponent.html":{}}}],["dots",{"_index":2062,"title":{},"body":{"components/SlidersComponent.html":{}}}],["down",{"_index":878,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["downvoted",{"_index":1380,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["downvotes",{"_index":1306,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["dt",{"_index":95,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["duration",{"_index":1969,"title":{},"body":{"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["e",{"_index":2028,"title":{},"body":{"components/SlidersComponent.html":{}}}],["e.trim",{"_index":2085,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["e9e8d9",{"_index":1063,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["each",{"_index":675,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["ease",{"_index":1071,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/SlidersComponent.html":{}}}],["eb7181",{"_index":212,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["ed/discussions",{"_index":2330,"title":{},"body":{"properties.html":{}}}],["edata",{"_index":1441,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["edit",{"_index":981,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["editable",{"_index":894,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["edited",{"_index":1374,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["editediso",{"_index":1375,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["editor",{"_index":1377,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["eid",{"_index":1442,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["elaborate",{"_index":1056,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["element.charat(0",{"_index":2098,"title":{},"body":{"pipes/SplitInitialsPipe.html":{}}}],["element.tostring",{"_index":1491,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["elementref",{"_index":808,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["elements/elements.module",{"_index":453,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{}}}],["elementsmodule",{"_index":443,"title":{"modules/ElementsModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules.html":{},"overview.html":{}}}],["elementview",{"_index":775,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["ellipsis",{"_index":375,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["email",{"_index":1392,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["email:confirmed",{"_index":1393,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["emit",{"_index":1040,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["emittelemetry",{"_index":1184,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["emittelemetry(event",{"_index":1186,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["empty",{"_index":1155,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["enable",{"_index":1432,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/TrendingTagsComponent.html":{}}}],["enabled",{"_index":1295,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["enablesubmitbutton",{"_index":895,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["end",{"_index":1847,"title":{},"body":{"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{}}}],["endindex",{"_index":2153,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["endpoint",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entry",{"_index":1419,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["entry'},{'name",{"_index":158,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["entry.component",{"_index":1201,"title":{},"body":{"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{}}}],["entry.component.html",{"_index":1496,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.scss",{"_index":1495,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts",{"_index":1493,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:105",{"_index":1512,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:109",{"_index":1515,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:113",{"_index":1518,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":1525,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":1526,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:30",{"_index":1520,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:31",{"_index":1522,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":1521,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:33",{"_index":1524,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":1528,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:35",{"_index":1523,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:36",{"_index":1527,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":1529,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:38",{"_index":1509,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:41",{"_index":1519,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:58",{"_index":1516,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:80",{"_index":1514,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:87",{"_index":1513,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry.component.ts:95",{"_index":1511,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["entry/lib",{"_index":1200,"title":{},"body":{"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{}}}],["enum",{"_index":1415,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["enumerations",{"_index":2271,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1032,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["err.error",{"_index":1035,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["err.error.message",{"_index":1036,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["err.error.message.split('|')[1",{"_index":1038,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["error",{"_index":725,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["es",{"_index":1869,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"pipes/SortByPipe.html":{},"dependencies.html":{}}}],["event",{"_index":406,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"injectables/DiscussionEventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{}}}],["event.action",{"_index":426,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["event.tid",{"_index":428,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["event.title",{"_index":430,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["eventaction",{"_index":1559,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["eventemitter",{"_index":658,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["eventmessage",{"_index":922,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["events",{"_index":1072,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["events.service",{"_index":276,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/DiscussionUiModule.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"injectables/WrapperNavigateService.html":{}}}],["events.service.ts",{"_index":1181,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["events.service.ts:11",{"_index":1189,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["events.service.ts:12",{"_index":1185,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["events.service.ts:16",{"_index":1187,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["eventservice",{"_index":267,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/SlidersComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["eventsservice",{"_index":257,"title":{"injectables/EventsService.html":{}},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/EventsService.html":{},"components/TagsWidgetComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["execute",{"_index":2309,"title":{},"body":{"index.html":{}}}],["exit",{"_index":1585,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["exitforum",{"_index":1584,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["exitforum(event",{"_index":1590,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["experiencing",{"_index":1597,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["export",{"_index":25,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["exports",{"_index":437,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["extends",{"_index":390,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["extensively",{"_index":2229,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["eye",{"_index":385,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["f2f2f2",{"_index":2058,"title":{},"body":{"components/SlidersComponent.html":{}}}],["fade",{"_index":2052,"title":{},"body":{"components/SlidersComponent.html":{}}}],["fallback",{"_index":1552,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["false",{"_index":206,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["family",{"_index":1082,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["fetch",{"_index":673,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["fetchallavailablecategories",{"_index":642,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["fetchallavailablecategories(ids",{"_index":662,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["fetchallcategories",{"_index":643,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["fetchalltags",{"_index":1110,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["fetchcategory",{"_index":644,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["fetchcategory(cid",{"_index":666,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["fetchcontextbasedtagdetails",{"_index":2103,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["fetchcontextbasedtagdetails(tagname",{"_index":2110,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["fetching",{"_index":86,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["fetchnetworkprofile",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchnewdata",{"_index":2100,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["fetchprofile",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchrelateddiscussiondata",{"_index":1856,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["fetchrelateddiscussiondata(cid",{"_index":1863,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["fetchsinglecategoryloader",{"_index":1853,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["fetchsingletagdetails",{"_index":2104,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["fetchsingletagdetails(tagname",{"_index":2112,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["fetchuserprofile",{"_index":1618,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["fetchuserprofile(username",{"_index":1621,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["ff0000",{"_index":2216,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["field",{"_index":928,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"index.html":{}}}],["fill",{"_index":761,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["filter",{"_index":1570,"title":{},"body":{"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["filter((item",{"_index":1761,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["filter(key",{"_index":1623,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["filter.pipe",{"_index":1792,"title":{},"body":{"modules/PipesModule.html":{}}}],["filter.pipe.ts",{"_index":1754,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["filter.pipe.ts:8",{"_index":1759,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["filter/pipe",{"_index":1753,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"modules/PipesModule.html":{}}}],["filteredtags",{"_index":1107,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["finally",{"_index":2029,"title":{},"body":{"components/SlidersComponent.html":{}}}],["first",{"_index":1102,"title":{},"body":{"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/SidePannelComponent.html":{}}}],["fixed",{"_index":1067,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["flags",{"_index":1401,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["flex",{"_index":112,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["flex.flex",{"_index":2166,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["float",{"_index":1092,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["focus",{"_index":1088,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["focused",{"_index":1098,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["folder",{"_index":2300,"title":{},"body":{"index.html":{}}}],["followercount",{"_index":1402,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["followingcount",{"_index":1403,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["font",{"_index":116,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["forget",{"_index":2289,"title":{},"body":{"index.html":{}}}],["form",{"_index":936,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["form.reset",{"_index":1029,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["form.value.description",{"_index":1025,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["form.value.question",{"_index":1024,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["form.value.tags",{"_index":1026,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["formbuilder",{"_index":911,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{}}}],["formgroup",{"_index":1593,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["formsmodule",{"_index":469,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ElementsModule.html":{}}}],["forum",{"_index":1572,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["forumids",{"_index":635,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["full",{"_index":1207,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["fullname",{"_index":1348,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["function",{"_index":1227,"title":{},"body":{"modules/DiscussionUiModule.html":{},"injectables/EventsService.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["functions",{"_index":2273,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2312,"title":{},"body":{"index.html":{}}}],["gap",{"_index":764,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{}}}],["generate",{"_index":2284,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2277,"title":{},"body":{"index.html":{},"properties.html":{}}}],["getallcategories",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getalldiscussions",{"_index":1111,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["getalldiscussions(tag",{"_index":1116,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["getalltags",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getbanneroption",{"_index":498,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbgcolor",{"_index":569,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["getbgcolor(tagtitle",{"_index":575,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["getcategories",{"_index":499,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcategoryid",{"_index":500,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfig",{"_index":11,"title":{},"body":{"classes/AbstractConfigService.html":{},"injectables/ConfigService.html":{}}}],["getconfig(key",{"_index":12,"title":{},"body":{"classes/AbstractConfigService.html":{}}}],["getcontext",{"_index":501,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["getcontextbaseddiscussion",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontextbasedtagdiscussion",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontextbasedtags",{"_index":1112,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["getcontextbasedtags(cid",{"_index":1120,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["getcontextbasedtopics",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontextdata",{"_index":492,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontrast",{"_index":570,"title":{},"body":{"components/DiscussCardComponent.html":{},"injectables/DiscussUtilsService.html":{}}}],["getdiscussion",{"_index":1857,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["getdiscussion(discuss",{"_index":1865,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["getdiscussionlist",{"_index":784,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["getdiscussionlist(slug",{"_index":796,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["getheaderoption",{"_index":502,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getisopeninnewtab",{"_index":2011,"title":{},"body":{"components/SlidersComponent.html":{}}}],["getnextdata(tagname",{"_index":2147,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["getparams",{"_index":493,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["getrecenttopics",{"_index":1619,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["getrecenttopics(scrollindex",{"_index":1630,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["getrollup",{"_index":1486,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["getrouterslug",{"_index":503,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getsinglecategorydetails",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gettagbaseddiscussion",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1685,"title":{"index.html":{}},"body":{"components/MyDiscussionComponent.html":{}}}],["gettopic",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gi').test(item[key",{"_index":1766,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["git+https://github.com/sunbird",{"_index":2337,"title":{},"body":{"properties.html":{}}}],["go",{"_index":2299,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1505,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["gonna",{"_index":2257,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["gradient",{"_index":2045,"title":{},"body":{"components/SlidersComponent.html":{}}}],["gradient(to",{"_index":2213,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["graph",{"_index":2320,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":99,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["green",{"_index":215,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["grid",{"_index":758,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{}}}],["groups",{"_index":1411,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["grouptitle",{"_index":1358,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["grouptitlearray",{"_index":1359,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["hamburger",{"_index":1955,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["handleloaderalert",{"_index":1506,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["hascontext",{"_index":504,"title":{},"body":{"injectables/ConfigService.html":{}}}],["hascontextdata",{"_index":494,"title":{},"body":{"injectables/ConfigService.html":{}}}],["hash",{"_index":591,"title":{},"body":{"components/DiscussCardComponent.html":{},"injectables/DiscussUtilsService.html":{}}}],["hasmore",{"_index":1383,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["header",{"_index":349,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["headermessage",{"_index":52,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["headeroption",{"_index":1500,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["headeroptions",{"_index":1427,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["height",{"_index":345,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["help",{"_index":2313,"title":{},"body":{"index.html":{}}}],["here",{"_index":939,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/PostReplyComponent.html":{}}}],["hidden",{"_index":374,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["hidesidepanel",{"_index":1906,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["high",{"_index":1598,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["histtorystartindex",{"_index":1501,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["home",{"_index":769,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["home'},{'name",{"_index":149,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["home.component",{"_index":460,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{}}}],["home.component.css",{"_index":770,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.html",{"_index":771,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts",{"_index":768,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:102",{"_index":797,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:119",{"_index":804,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:123",{"_index":798,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:127",{"_index":795,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:139",{"_index":803,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:20",{"_index":793,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:21",{"_index":792,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:22",{"_index":794,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:24",{"_index":811,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:25",{"_index":807,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:26",{"_index":821,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:27",{"_index":826,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:29",{"_index":814,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:30",{"_index":825,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:31",{"_index":805,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:32",{"_index":820,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:35",{"_index":813,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:41",{"_index":815,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:42",{"_index":817,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:43",{"_index":824,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:45",{"_index":806,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:46",{"_index":818,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:47",{"_index":827,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:48",{"_index":791,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:51",{"_index":822,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:58",{"_index":802,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:76",{"_index":801,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home.component.ts:83",{"_index":800,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["home/discuss",{"_index":459,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussHomeComponent.html":{},"modules/DiscussionRoutingModule.html":{}}}],["homepage",{"_index":396,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"properties.html":{}}}],["host",{"_index":1494,"title":{},"body":{"components/LibEntryComponent.html":{},"components/RelatedDiscussionComponent.html":{},"miscellaneous/variables.html":{}}}],["hostbinding",{"_index":2013,"title":{},"body":{"components/SlidersComponent.html":{}}}],["hostbinding('id",{"_index":2010,"title":{},"body":{"components/SlidersComponent.html":{}}}],["hostbindings",{"_index":1997,"title":{},"body":{"components/SlidersComponent.html":{}}}],["hover",{"_index":1962,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["htmldecode",{"_index":985,"title":{},"body":{"components/DiscussStartComponent.html":{},"injectables/DiscussUtilsService.html":{}}}],["htmldecode(str",{"_index":1172,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["htmlelement).focus",{"_index":965,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["http://localhost:3002",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclientmodule",{"_index":451,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["https://dev.sunbirded.org",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/sunbird",{"_index":2329,"title":{},"body":{"properties.html":{}}}],["icategorie",{"_index":1271,"title":{"interfaces/ICategorie.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["icategory",{"_index":1426,"title":{"interfaces/Icategory.html":{}},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["icategorydata",{"_index":1333,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["icategoryobj",{"_index":1422,"title":{"interfaces/ICategoryObj.html":{}},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["icon",{"_index":312,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["icon:bgcolor",{"_index":1361,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["icon:text",{"_index":1360,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["icons",{"_index":1329,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["icontext",{"_index":1430,"title":{"interfaces/Icontext.html":{}},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["icoursecontext",{"_index":1437,"title":{"interfaces/ICourseContext.html":{}},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["id",{"_index":521,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{}}}],["id').tostring",{"_index":1470,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["id=\"topic",{"_index":882,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["idea",{"_index":1057,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["identifier",{"_index":1438,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["idiscussionallcontext",{"_index":1433,"title":{"interfaces/IDiscussionAllContext.html":{}},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["idiscussionconfig",{"_index":22,"title":{"interfaces/IdiscussionConfig.html":{}},"body":{"classes/AbstractConfigService.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["idiscussiondata",{"_index":1298,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["idiscussiontab",{"_index":1293,"title":{"interfaces/IDiscussionTab.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["idiscussjsondata",{"_index":1291,"title":{"interfaces/IDiscussJsonData.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["ids",{"_index":664,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["ids.foreach((cid",{"_index":722,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["ieditor",{"_index":1373,"title":{"interfaces/IEditor.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["if(this.navigateservice",{"_index":1746,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["if(this.widgettagname",{"_index":2128,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["ignored",{"_index":1321,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["igroup",{"_index":1412,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["image",{"_index":355,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["imageclass",{"_index":1275,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["imenuoptions",{"_index":1431,"title":{"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{}},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/SidePannelComponent.html":{}}}],["img",{"_index":361,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{}}}],["implements",{"_index":38,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["import_export",{"_index":600,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["important",{"_index":103,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["imports",{"_index":448,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{}}}],["impression",{"_index":1464,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["impressionevent",{"_index":1463,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["impressionevent.context",{"_index":1467,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["include",{"_index":2060,"title":{},"body":{"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":481,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["infinitescrollconfig",{"_index":776,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["infinitescrollmodule",{"_index":480,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["inherited",{"_index":402,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["initalized",{"_index":1742,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["initializedata",{"_index":901,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["initializeformfields",{"_index":902,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["initializeformfields(topicdata",{"_index":924,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["initials",{"_index":197,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["initials.pipe",{"_index":1799,"title":{},"body":{"modules/PipesModule.html":{}}}],["initials.pipe.ts",{"_index":2094,"title":{},"body":{"pipes/SplitInitialsPipe.html":{}}}],["initials.pipe.ts:8",{"_index":2095,"title":{},"body":{"pipes/SplitInitialsPipe.html":{}}}],["initials/split",{"_index":1798,"title":{},"body":{"modules/PipesModule.html":{},"pipes/SplitInitialsPipe.html":{}}}],["initservice",{"_index":1540,"title":{},"body":{"components/LibEntryComponent.html":{},"injectables/NavigationServiceService.html":{}}}],["initservice(wrapperservice",{"_index":1736,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["inject",{"_index":1530,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["inject('configservice",{"_index":1534,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["injectable",{"_index":485,"title":{"injectables/ConfigService.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"injectables/TelemetryUtilsService.html":{},"injectables/WrapperNavigateService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"injectables/TelemetryUtilsService.html":{},"injectables/WrapperNavigateService.html":{}}}],["injectables",{"_index":486,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"injectables/TelemetryUtilsService.html":{},"injectables/WrapperNavigateService.html":{},"overview.html":{}}}],["inline",{"_index":625,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["inner",{"_index":2236,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["input",{"_index":71,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["input.active",{"_index":1101,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["input.data.queryparams",{"_index":1897,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["input__text",{"_index":1099,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["inputs",{"_index":56,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["interact",{"_index":1478,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["interactevent",{"_index":1477,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["interactevent.context",{"_index":1484,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["interface",{"_index":308,"title":{"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}},"body":{"components/CategoryCardComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"injectables/TelemetryUtilsService.html":{}}}],["interfaces",{"_index":1272,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"overview.html":{}}}],["interval",{"_index":2018,"title":{},"body":{"components/SlidersComponent.html":{}}}],["interval(8000).subscribe",{"_index":2030,"title":{},"body":{"components/SlidersComponent.html":{}}}],["intialize",{"_index":1738,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["invert(1",{"_index":1571,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["invoke",{"_index":1544,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["ipagedata",{"_index":1368,"title":{"interfaces/IPageData.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["ipagename",{"_index":1416,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["ipagination",{"_index":1331,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["iposts",{"_index":1332,"title":{"interfaces/IPosts.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["iprofile",{"_index":1391,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["irelateddiscussion",{"_index":1346,"title":{"interfaces/IRelatedDiscussion.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isactive",{"_index":1912,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["isactive(selecteditem",{"_index":1916,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["isblocked",{"_index":1407,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isbuttonenabled",{"_index":1805,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["isc",{"_index":2335,"title":{},"body":{"properties.html":{}}}],["isfieldvalid",{"_index":903,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["isfieldvalid(field",{"_index":926,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["isfollowing",{"_index":1317,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isignored",{"_index":1337,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isignoring",{"_index":1319,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isnotfollowing",{"_index":1318,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isnotwatched",{"_index":1336,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["isopeninnewtab",{"_index":1999,"title":{},"body":{"components/SlidersComponent.html":{}}}],["isowner",{"_index":1320,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["issection",{"_index":1276,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["issinglecoment",{"_index":571,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["issinglecoment(postcount",{"_index":579,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["istopiccreator",{"_index":636,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["iswatched",{"_index":1335,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["itag",{"_index":1315,"title":{"interfaces/ITag.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["itelemetryobj",{"_index":1439,"title":{"interfaces/ITelemetryObj.html":{}},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["item.hasownproperty(key",{"_index":1764,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["item[key",{"_index":1769,"title":{},"body":{"pipes/PipeListFilterPipe.html":{}}}],["items",{"_index":353,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["itopic",{"_index":1376,"title":{"interfaces/ITopic.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["iuser",{"_index":1313,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["joindate",{"_index":1394,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["joindateiso",{"_index":1406,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["json",{"_index":2033,"title":{},"body":{"components/SlidersComponent.html":{}}}],["json.parse(_.get(params",{"_index":551,"title":{},"body":{"injectables/ConfigService.html":{}}}],["justify",{"_index":382,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["karma",{"_index":2311,"title":{},"body":{"index.html":{}}}],["key",{"_index":19,"title":{},"body":{"classes/AbstractConfigService.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["keyframes",{"_index":2072,"title":{},"body":{"components/SlidersComponent.html":{}}}],["keys",{"_index":1757,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["keys.split",{"_index":1762,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["keywords",{"_index":2328,"title":{},"body":{"properties.html":{}}}],["kumar",{"_index":2341,"title":{},"body":{"properties.html":{}}}],["l",{"_index":1870,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["label",{"_index":119,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["landingpage",{"_index":1907,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["last",{"_index":1369,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["lastonline",{"_index":1357,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["lastonlineiso",{"_index":1362,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["lastposttime",{"_index":1301,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["lastposttimeiso",{"_index":1303,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["later",{"_index":1208,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["latestposts",{"_index":1413,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["leaderboard",{"_index":1950,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["left",{"_index":365,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["length",{"_index":1148,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/PostReplyComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["letter",{"_index":1719,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["lib",{"_index":43,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["lib_entry",{"_index":1418,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["libentrycomponent",{"_index":157,"title":{"components/LibEntryComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["library",{"_index":1154,"title":{},"body":{"components/DiscussTagsComponent.html":{},"index.html":{},"properties.html":{}}}],["license",{"_index":2334,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":1697,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["line",{"_index":368,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["line:no",{"_index":1839,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["linear",{"_index":2044,"title":{},"body":{"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["link",{"_index":1277,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["list",{"_index":680,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeListFilterPipe.html":{},"modules/PipesModule.html":{},"components/SidePannelComponent.html":{}}}],["listdownvoted",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listsaved",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listupvote",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":1117,"title":{},"body":{"components/DiscussTagsComponent.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IPosts.html":{},"interfaces/ITelemetryObj.html":{},"components/PostReplyComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["load",{"_index":160,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["load_alert",{"_index":1420,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["loadalertcomponent",{"_index":159,"title":{"components/LoadAlertComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["loader",{"_index":45,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/SidePannelComponent.html":{}}}],["loader'},{'name",{"_index":129,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["loader.component",{"_index":1239,"title":{},"body":{"modules/ElementsModule.html":{}}}],["loader.component.css",{"_index":47,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.html",{"_index":49,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts",{"_index":37,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts:16",{"_index":63,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts:17",{"_index":69,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":70,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":61,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts:25",{"_index":66,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader.component.ts:38",{"_index":64,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["loader/app",{"_index":36,"title":{},"body":{"components/AppLoaderComponent.html":{},"modules/ElementsModule.html":{}}}],["loadermessage",{"_index":53,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["localstorage.setitem(this.configsvc.userprofile.userid",{"_index":1657,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["location",{"_index":1395,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["locked",{"_index":1310,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["lodash",{"_index":75,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"pipes/SortByPipe.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"dependencies.html":{}}}],["loggedin",{"_index":1339,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["logimpression",{"_index":2177,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["logimpression(pageid",{"_index":1461,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["loginteract",{"_index":2178,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["loginteract(event",{"_index":1472,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["logtelemetry",{"_index":645,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["logtelemetry(event",{"_index":669,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["look",{"_index":704,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["m",{"_index":2063,"title":{},"body":{"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["main",{"_index":381,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{}}}],["main_discuss_lib",{"_index":1533,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["mainpid",{"_index":1299,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["mandatory",{"_index":1052,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["margin",{"_index":104,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["margin:0.5rem",{"_index":2232,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["mat",{"_index":311,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["matchedc",{"_index":1451,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["matchedtopic",{"_index":847,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["matching",{"_index":27,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor((+new",{"_index":1776,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["math.floor(math.random",{"_index":235,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["math.floor(this.colors.length",{"_index":236,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["math.floor(this.randomcolors.length",{"_index":241,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["math.random().tostring(36).slice(2",{"_index":223,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["max",{"_index":359,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["maxtags",{"_index":1278,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["media",{"_index":615,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["menu",{"_index":1908,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["menu:#f5f6fa",{"_index":1957,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["menuarr",{"_index":1940,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["menuoptions",{"_index":1425,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/SidePannelComponent.html":{}}}],["menuoptions').length",{"_index":1941,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["merge",{"_index":1899,"title":{},"body":{"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["merger",{"_index":1325,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["message",{"_index":872,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{}}}],["meta",{"_index":933,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/SlidersComponent.html":{}}}],["metadata",{"_index":41,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["method",{"_index":986,"title":{},"body":{"components/DiscussStartComponent.html":{},"injectables/DiscussUtilsService.html":{},"components/TagAllDiscussionComponent.html":{}}}],["methods",{"_index":9,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["min",{"_index":1157,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["minimum",{"_index":1053,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["minmax(292px",{"_index":762,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["mintags",{"_index":1279,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["miscellaneous",{"_index":2270,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mob",{"_index":1964,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["modal",{"_index":1031,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["modalscrolldistance",{"_index":777,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["modalscrollthrottle",{"_index":778,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["mode",{"_index":908,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["models/discuss.model",{"_index":701,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["models/discussion",{"_index":23,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["module",{"_index":431,"title":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["modules",{"_index":433,"title":{"modules.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1224,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["more",{"_index":2314,"title":{},"body":{"index.html":{}}}],["msgs",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["my_discussion",{"_index":1417,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["mydiscussioncomponent",{"_index":162,"title":{"components/MyDiscussionComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["mymodal",{"_index":1064,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["name",{"_index":17,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"index.html":{}}}],["name.foreach(element",{"_index":2097,"title":{},"body":{"pipes/SplitInitialsPipe.html":{}}}],["namespace",{"_index":1290,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["navigate",{"_index":1729,"title":{},"body":{"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["navigate(input",{"_index":1739,"title":{},"body":{"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"injectables/WrapperNavigateService.html":{}}}],["navigate(pagename",{"_index":1919,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["navigate.service",{"_index":1743,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["navigate.service.ts",{"_index":2250,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["navigate.service.ts:12",{"_index":2253,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["navigate.service.ts:16",{"_index":2255,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["navigateservice",{"_index":1728,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["navigatetodiscussiondetails",{"_index":785,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["navigatetodiscussiondetails(discussiondata",{"_index":799,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["navigatetodiscussionpage",{"_index":646,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["navigatetodiscussionpage(cid",{"_index":671,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["navigatewithpage",{"_index":2105,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["navigatewithpage(page",{"_index":2119,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["navigating",{"_index":1741,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["navigation",{"_index":277,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"injectables/NavigationServiceService.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["navigationservice",{"_index":654,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["navigationserviceservice",{"_index":256,"title":{"injectables/NavigationServiceService.html":{}},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"injectables/NavigationServiceService.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["navitem",{"_index":1248,"title":{},"body":{"injectables/EventsService.html":{}}}],["nbsp",{"_index":884,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["need",{"_index":2256,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["new",{"_index":536,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LoadAlertComponent.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"index.html":{}}}],["next",{"_index":1147,"title":{},"body":{"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["nextstart",{"_index":1334,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["ng",{"_index":319,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"index.html":{}}}],["ng2",{"_index":1096,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["ngafterviewchecked",{"_index":786,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["ngmodule",{"_index":454,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{}}}],["ngonchanges",{"_index":1858,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["ngonchanges(data",{"_index":2199,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["ngondestroy",{"_index":54,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["ngoninit",{"_index":55,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["ngx",{"_index":475,"title":{},"body":{"modules/ComponentsModule.html":{},"dependencies.html":{}}}],["none",{"_index":1087,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["normal",{"_index":1158,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["note",{"_index":2287,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2303,"title":{},"body":{"index.html":{}}}],["nsdiscussdata",{"_index":700,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["nsdiscussdata.icategorie",{"_index":687,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{}}}],["nsdiscussdata.icategorydata",{"_index":1875,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["nsdiscussdata.idiscussiondata",{"_index":2138,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["nsdiscussdata.ipagename.category",{"_index":755,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["nsdiscussdata.ipagename.home",{"_index":870,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["nsdiscussdata.ipagename.lib_entry",{"_index":1564,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["nsdiscussdata.ipagename.load_alert",{"_index":1595,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["nsdiscussdata.ipagename.my_discussion",{"_index":1684,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["nsdiscussdata.ipagename.start",{"_index":1050,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["nsdiscussdata.itag",{"_index":944,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["nswidgetresolver",{"_index":2014,"title":{},"body":{"components/SlidersComponent.html":{}}}],["null",{"_index":560,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["number",{"_index":418,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["numrecentreplies",{"_index":1280,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["obj",{"_index":548,"title":{},"body":{"injectables/ConfigService.html":{}}}],["obj[sortfield",{"_index":2090,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["obj[sortfield].trim",{"_index":2091,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["object",{"_index":812,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"miscellaneous/variables.html":{}}}],["object.create",{"_index":819,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["object['rollup",{"_index":1481,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["observable",{"_index":1267,"title":{},"body":{"injectables/EventsService.html":{}}}],["oncancelclick",{"_index":1807,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["onchanges",{"_index":1852,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["ondestroy",{"_index":40,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["oninit",{"_index":39,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["online",{"_index":1711,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["onmodalscrolldown",{"_index":787,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["onreplyclick",{"_index":1808,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["onreplyclick(mode",{"_index":1820,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["onscrolltopactive",{"_index":1507,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["onscrolltopactive(event",{"_index":1517,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["opacity",{"_index":1065,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/SlidersComponent.html":{}}}],["open",{"_index":1954,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["opened",{"_index":1041,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["openinnewtab",{"_index":1993,"title":{},"body":{"components/SlidersComponent.html":{}}}],["opensnackbar(this.toasterror.nativeelement.value",{"_index":1034,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["optional",{"_index":18,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/IUser.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["order",{"_index":1281,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["orderby",{"_index":2082,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["orderby(data",{"_index":2092,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["orient",{"_index":371,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["out",{"_index":446,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":1086,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/PostReplyComponent.html":{}}}],["output",{"_index":698,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["outputs",{"_index":650,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["overflow",{"_index":373,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["overlay",{"_index":1956,"title":{},"body":{"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["overview",{"_index":2321,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.blue_heading",{"_index":2245,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["p.ismainpost",{"_index":1655,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["package",{"_index":2259,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":113,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["page",{"_index":681,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["page).subscribe",{"_index":2149,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["pagecount",{"_index":1372,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["pageid",{"_index":637,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["pagekey",{"_index":1502,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["pagename",{"_index":1921,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pager",{"_index":2101,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["pages",{"_index":1371,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"injectables/NavigationServiceService.html":{},"components/TagAllDiscussionComponent.html":{}}}],["pagesize",{"_index":779,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["pagination",{"_index":780,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["paginationdata",{"_index":2102,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["pannel",{"_index":1902,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel'},{'name",{"_index":171,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["pannel.component",{"_index":458,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["pannel.component.html",{"_index":1904,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.scss",{"_index":1903,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts",{"_index":1901,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:23",{"_index":1931,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:25",{"_index":1935,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:27",{"_index":1927,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:29",{"_index":1926,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:30",{"_index":1929,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:31",{"_index":1930,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:32",{"_index":1933,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:33",{"_index":1934,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:34",{"_index":1914,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:37",{"_index":1932,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:38",{"_index":1928,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:39",{"_index":1925,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:44",{"_index":1923,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:61",{"_index":1917,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:74",{"_index":1920,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:84",{"_index":1922,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:90",{"_index":1924,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel.component.ts:94",{"_index":1915,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["pannel/side",{"_index":457,"title":{},"body":{"modules/ComponentsModule.html":{},"components/SidePannelComponent.html":{}}}],["param",{"_index":856,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"injectables/EventsService.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["params",{"_index":835,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/LibEntryComponent.html":{}}}],["params.tagname",{"_index":2131,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["paramssubscription",{"_index":495,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussTagsComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["parent",{"_index":844,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["parentcid",{"_index":1282,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["parsed",{"_index":987,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["parseint(form.value.category",{"_index":1023,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["parses",{"_index":1174,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["passing",{"_index":940,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["path",{"_index":1205,"title":{},"body":{"modules/DiscussionRoutingModule.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["pathmatch",{"_index":1206,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["peer",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["photo",{"_index":187,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo'},{'name",{"_index":132,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["photo.component",{"_index":1238,"title":{},"body":{"modules/ElementsModule.html":{}}}],["photo.component.css",{"_index":188,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.html",{"_index":189,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts",{"_index":186,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:10",{"_index":202,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:11",{"_index":201,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:12",{"_index":208,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:13",{"_index":207,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:14",{"_index":200,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:15",{"_index":227,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:16",{"_index":211,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:17",{"_index":224,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:21",{"_index":222,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:30",{"_index":226,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:39",{"_index":210,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo.component.ts:55",{"_index":209,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["photo/avatar",{"_index":185,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"modules/ElementsModule.html":{}}}],["photourl",{"_index":198,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["picture",{"_index":1352,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["pid",{"_index":941,"title":{},"body":{"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":1311,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["pipe",{"_index":1749,"title":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{}},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{}}}],["pipefilter",{"_index":1755,"title":{},"body":{"pipes/PipeFilterPipe.html":{}}}],["pipefilterpipe",{"_index":1750,"title":{"pipes/PipeFilterPipe.html":{}},"body":{"pipes/PipeFilterPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["pipelistfilter",{"_index":1768,"title":{},"body":{"pipes/PipeListFilterPipe.html":{}}}],["pipelistfilterpipe",{"_index":1767,"title":{"pipes/PipeListFilterPipe.html":{}},"body":{"pipes/PipeListFilterPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["piperelativetime",{"_index":598,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/RelatedDiscussionComponent.html":{}}}],["piperelativetimepipe",{"_index":1771,"title":{"pipes/PipeRelativeTimePipe.html":{}},"body":{"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["pipes",{"_index":1751,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"overview.html":{}}}],["pipes/pipes.module",{"_index":450,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ElementsModule.html":{}}}],["pipesmodule",{"_index":449,"title":{"modules/PipesModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1760,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{}}}],["please",{"_index":83,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["plural",{"_index":1784,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["pointer",{"_index":348,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["popularpost",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popup",{"_index":980,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["position",{"_index":343,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["post",{"_index":165,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["post_count",{"_index":1283,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["postcount",{"_index":581,"title":{},"body":{"components/DiscussCardComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["postcreatereq",{"_index":1022,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["postindex",{"_index":1314,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["postreplycomponent",{"_index":164,"title":{"components/PostReplyComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["posts",{"_index":318,"title":{},"body":{"components/CategoryCardComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["posts').filter(p",{"_index":1654,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["posts[0].content').replace(/]+>/g",{"_index":990,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["posts[0].pid",{"_index":1048,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["postsharing",{"_index":1323,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["posttagsarray",{"_index":896,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["prev",{"_index":1367,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/SlidersComponent.html":{}}}],["prevtopic",{"_index":1459,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["primary",{"_index":621,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["private",{"_index":81,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["privileges",{"_index":1326,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["privileges.topics:create",{"_index":736,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["problem",{"_index":2228,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["profile",{"_index":1713,"title":{},"body":{"components/MyDiscussionComponent.html":{},"miscellaneous/variables.html":{}}}],["profilecard",{"_index":1714,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["profilephoto",{"_index":1615,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["profileviews",{"_index":1400,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["progress",{"_index":2234,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["progress::after",{"_index":2237,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["project",{"_index":2264,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["properties",{"_index":50,"title":{"properties.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"properties.html":{}}}],["property",{"_index":1974,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["protected",{"_index":262,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/LibEntryComponent.html":{}}}],["providecsmodule",{"_index":1228,"title":{},"body":{"modules/DiscussionUiModule.html":{},"miscellaneous/functions.html":{}}}],["providedin",{"_index":542,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"injectables/TelemetryUtilsService.html":{},"injectables/WrapperNavigateService.html":{}}}],["providers",{"_index":255,"title":{},"body":{"components/BaseWrapperComponent.html":{},"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["public",{"_index":190,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["publish",{"_index":2304,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":2297,"title":{},"body":{"index.html":{}}}],["px",{"_index":846,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["query",{"_index":1108,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{}}}],["queryparam",{"_index":1109,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["queryparams",{"_index":496,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["queryparamshandling",{"_index":1898,"title":{},"body":{"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["question",{"_index":975,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["radius",{"_index":108,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["random",{"_index":193,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["randomcolor",{"_index":199,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["randomcolors",{"_index":194,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["randomindex",{"_index":234,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["randomindex1",{"_index":240,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["rawcategories",{"_index":286,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/LibEntryComponent.html":{}}}],["reactiveformsmodule",{"_index":470,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/ElementsModule.html":{}}}],["readme",{"_index":2315,"title":{},"body":{"index.html":{}}}],["recent",{"_index":1686,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["recentfilter",{"_index":1616,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["recentpost",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red",{"_index":213,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["redirect",{"_index":678,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["reduce",{"_index":843,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["refershdata",{"_index":2163,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["refreshdata(tagname",{"_index":2164,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["regexp(`^${term",{"_index":1765,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["registeredevents",{"_index":1249,"title":{},"body":{"injectables/EventsService.html":{}}}],["registeruser",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reinitiateslideinterval",{"_index":1994,"title":{},"body":{"components/SlidersComponent.html":{}}}],["rel",{"_index":1370,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["related",{"_index":168,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["relateddiscussioncomponent",{"_index":167,"title":{"components/RelatedDiscussionComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["relateddiscussions",{"_index":1854,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["relative",{"_index":344,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["relative_path",{"_index":1340,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["relativeto",{"_index":740,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["reliable",{"_index":2220,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["repeat(auto",{"_index":760,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["replace",{"_index":310,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["replaysubject",{"_index":541,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EventsService.html":{}}}],["replaysubject(1",{"_index":537,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/EventsService.html":{}}}],["replies",{"_index":1382,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["reply",{"_index":1802,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply'},{'name",{"_index":166,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["reply.component",{"_index":1242,"title":{},"body":{"modules/ElementsModule.html":{}}}],["reply.component.css",{"_index":1803,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.html",{"_index":1804,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts",{"_index":1801,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:10",{"_index":1814,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:11",{"_index":1813,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:12",{"_index":1812,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:14",{"_index":1815,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:16",{"_index":1823,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:18",{"_index":1811,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:24",{"_index":1818,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:29",{"_index":1816,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:38",{"_index":1822,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:46",{"_index":1817,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:59",{"_index":1821,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply.component.ts:64",{"_index":1819,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["reply/post",{"_index":1241,"title":{},"body":{"modules/ElementsModule.html":{},"components/PostReplyComponent.html":{}}}],["replycontent",{"_index":997,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["replyform",{"_index":1806,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["replypost",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":2336,"title":{},"body":{"properties.html":{}}}],["reputation",{"_index":1350,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["req",{"_index":1006,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["request",{"_index":1049,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["required",{"_index":857,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["reset",{"_index":445,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"components/MyDiscussionComponent.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resetpagination",{"_index":1627,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["respective",{"_index":1663,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["response",{"_index":1653,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["response['posts",{"_index":1677,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["response['posts'].filter(p",{"_index":1679,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["result",{"_index":290,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["result['posts'].filter(p",{"_index":1673,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["result[1",{"_index":1694,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["results",{"_index":26,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":552,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"interfaces/ITelemetryObj.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["returns",{"_index":20,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["reverse",{"_index":1608,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["rgba(0",{"_index":329,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["rgba(0,0,0,.12",{"_index":1888,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["rgba(0,0,0,.14",{"_index":1887,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["rgba(0,0,0,.2",{"_index":1886,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["rgba(0,0,0,.8",{"_index":1068,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["rgba(120",{"_index":2064,"title":{},"body":{"components/SlidersComponent.html":{}}}],["right",{"_index":619,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["right_tag_inner_box",{"_index":2239,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["role=\"button",{"_index":2035,"title":{},"body":{"components/SlidersComponent.html":{}}}],["rollup",{"_index":1487,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["rollup['l",{"_index":1490,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["root",{"_index":543,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ITelemetryObj.html":{},"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{},"injectables/TelemetryUtilsService.html":{},"injectables/WrapperNavigateService.html":{}}}],["route",{"_index":790,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/TagAllDiscussionComponent.html":{}}}],["routeparams",{"_index":781,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["router",{"_index":638,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["routerlink",{"_index":1297,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["routermodule",{"_index":1202,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1212,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["routerservice",{"_index":1732,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["routerserviceservice",{"_index":1733,"title":{"injectables/RouterServiceService.html":{}},"body":{"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{}}}],["routerslug",{"_index":750,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/TrendingTagsComponent.html":{}}}],["routerslug}${constants.routes.category}${this.categoryid",{"_index":752,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["routerslug}${constants.routes.tag}tag",{"_index":1142,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["routerslug}${constants.routes.topic}${_.trim(_.get(discussiondata",{"_index":851,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["routes",{"_index":1203,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["routing.module",{"_index":1221,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["routing.module.ts",{"_index":1195,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["routing/discussion",{"_index":1194,"title":{},"body":{"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{}}}],["row",{"_index":351,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/LoadAlertComponent.html":{}}}],["run",{"_index":2283,"title":{},"body":{"index.html":{}}}],["running",{"_index":2305,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":77,"title":{},"body":{"components/AppLoaderComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["rxjs/behaviorsubject",{"_index":1268,"title":{},"body":{"injectables/EventsService.html":{}}}],["rxjs/internal/behaviorsubject",{"_index":1266,"title":{},"body":{"injectables/EventsService.html":{}}}],["rxjs/operators",{"_index":1936,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["s",{"_index":1783,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["same",{"_index":1704,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["sans",{"_index":1083,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["saved",{"_index":1625,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["sb",{"_index":134,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["scaffolding",{"_index":2282,"title":{},"body":{"index.html":{}}}],["score",{"_index":1345,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/TrendingTagsComponent.html":{}}}],["screen",{"_index":616,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/LibEntryComponent.html":{}}}],["scroll",{"_index":482,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["scrollcontainerheight",{"_index":883,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["scrolled",{"_index":877,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["scrollindex",{"_index":858,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["scrollindex).subscribe(data",{"_index":861,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["scrollupdistance",{"_index":782,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["sd",{"_index":1146,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["search",{"_index":1156,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["seconds",{"_index":1775,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["select",{"_index":1051,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["selectedgroups",{"_index":1365,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["selecteditem",{"_index":1918,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["selectedtab",{"_index":1909,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["selector",{"_index":42,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["selfpost",{"_index":1385,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["serif",{"_index":1084,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["service",{"_index":1543,"title":{},"body":{"components/LibEntryComponent.html":{},"injectables/NavigationServiceService.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["service.service",{"_index":278,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"injectables/NavigationServiceService.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["service.service.ts",{"_index":1727,"title":{},"body":{"injectables/NavigationServiceService.html":{},"injectables/RouterServiceService.html":{}}}],["service.service.ts:10",{"_index":1734,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["service.service.ts:11",{"_index":1892,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["service.service.ts:18",{"_index":1737,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["service.service.ts:25",{"_index":1740,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["service.service.ts:7",{"_index":1891,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["service.service.ts:9",{"_index":1893,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["services",{"_index":2266,"title":{},"body":{"dependencies.html":{}}}],["services/abstract",{"_index":1531,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["services/config.service",{"_index":279,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["services/discuss",{"_index":963,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["services/discussion.service",{"_index":78,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["set",{"_index":838,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["setcategoryid",{"_index":497,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setcategoryid(id",{"_index":519,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setconfig",{"_index":505,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setconfig(activatedroute",{"_index":522,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setconfigfromparams",{"_index":506,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setconfigfromparams(activatedroute",{"_index":524,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setconfigfromwidgetbaseclass",{"_index":507,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setconfigfromwidgetbaseclass(config",{"_index":526,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setcontext",{"_index":2179,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["setcontext(context",{"_index":1446,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["setpagination",{"_index":2106,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["settimeout",{"_index":1699,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["setting",{"_index":1665,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["shadow",{"_index":326,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["showcancel",{"_index":1809,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["showerror",{"_index":904,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["showerror(meta",{"_index":931,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["showerrormsg",{"_index":897,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["showinitials",{"_index":195,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["showloader",{"_index":639,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["showloaderalert",{"_index":1503,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["showmenubutton",{"_index":1913,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["showselectcategory",{"_index":898,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["showsidemenu",{"_index":1910,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["showstartdiscussionmodal",{"_index":640,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["side",{"_index":170,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["sidebar",{"_index":1952,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["sidepannelcomponent",{"_index":169,"title":{"components/SidePannelComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["signature",{"_index":1353,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["similarposts",{"_index":1855,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["simplechanges",{"_index":2200,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["single",{"_index":2144,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["singular",{"_index":1781,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["size",{"_index":117,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["sizing",{"_index":2057,"title":{},"body":{"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["slide.banners",{"_index":2032,"title":{},"body":{"components/SlidersComponent.html":{}}}],["slideinterval",{"_index":1992,"title":{},"body":{"components/SlidersComponent.html":{}}}],["sliders",{"_index":1988,"title":{},"body":{"components/SlidersComponent.html":{}}}],["sliders'},{'name",{"_index":175,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["sliders.component.html",{"_index":1990,"title":{},"body":{"components/SlidersComponent.html":{}}}],["sliders.component.scss",{"_index":1989,"title":{},"body":{"components/SlidersComponent.html":{}}}],["sliders/sliders.component",{"_index":1243,"title":{},"body":{"modules/ElementsModule.html":{}}}],["sliderscomponent",{"_index":172,"title":{"components/SlidersComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/ElementsModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["slideto",{"_index":1995,"title":{},"body":{"components/SlidersComponent.html":{}}}],["slideto(index",{"_index":2007,"title":{},"body":{"components/SlidersComponent.html":{}}}],["slug",{"_index":397,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"miscellaneous/variables.html":{}}}],["smooth",{"_index":1569,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["solid",{"_index":357,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["solo",{"_index":2074,"title":{},"body":{"components/SlidersComponent.html":{}}}],["solution",{"_index":2226,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["some(key",{"_index":1763,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["something",{"_index":947,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["sometime",{"_index":952,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["sort",{"_index":1793,"title":{},"body":{"modules/PipesModule.html":{}}}],["sortby",{"_index":2077,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe",{"_index":1789,"title":{"pipes/SortByPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/SortByPipe.html":{},"overview.html":{}}}],["sortfield",{"_index":2079,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortorder",{"_index":2080,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractConfigService.html":{},"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["space",{"_index":383,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/LibEntryComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["spacing",{"_index":1720,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["span",{"_index":628,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["spinner",{"_index":1937,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["split",{"_index":1797,"title":{},"body":{"modules/PipesModule.html":{}}}],["splitinitials",{"_index":1707,"title":{},"body":{"components/MyDiscussionComponent.html":{},"pipes/SplitInitialsPipe.html":{}}}],["splitinitialspipe",{"_index":1790,"title":{"pipes/SplitInitialsPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/SplitInitialsPipe.html":{},"overview.html":{}}}],["src/.../discuss.model.ts",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../discussion",{"_index":2274,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../discussion.service.ts",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../url.config.ts",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/components.module.ts",{"_index":447,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/lib/components/discuss",{"_index":630,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{}}}],["src/lib/components/discussion",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/lib",{"_index":1492,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["src/lib/components/my",{"_index":1609,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["src/lib/components/side",{"_index":1900,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["src/lib/components/tag",{"_index":2099,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["src/lib/components/trending",{"_index":2191,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["src/lib/config/url.config.ts",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/discussion",{"_index":1180,"title":{},"body":{"injectables/DiscussionEventsService.html":{},"modules/DiscussionRoutingModule.html":{},"modules/DiscussionUiModule.html":{},"miscellaneous/functions.html":{}}}],["src/lib/elements/app",{"_index":35,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["src/lib/elements/avatar",{"_index":184,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["src/lib/elements/category",{"_index":298,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["src/lib/elements/discuss",{"_index":567,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["src/lib/elements/elements.module.ts",{"_index":1236,"title":{},"body":{"modules/ElementsModule.html":{}}}],["src/lib/elements/load",{"_index":1580,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["src/lib/elements/post",{"_index":1800,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["src/lib/elements/related",{"_index":1851,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts",{"_index":1987,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:12",{"_index":2001,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:14",{"_index":2003,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:15",{"_index":2009,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:16",{"_index":2000,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:22",{"_index":2004,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:25",{"_index":2006,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:44",{"_index":2008,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:55",{"_index":2012,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/elements/sliders/sliders.component.ts:62",{"_index":2005,"title":{},"body":{"components/SlidersComponent.html":{}}}],["src/lib/events.service.ts",{"_index":1246,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/lib/events.service.ts:10",{"_index":1261,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/lib/events.service.ts:12",{"_index":1263,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/lib/events.service.ts:13",{"_index":1264,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/lib/events.service.ts:14",{"_index":1252,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/lib/events.service.ts:22",{"_index":1254,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/lib/models/discuss.model.ts",{"_index":1273,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/models/discussion",{"_index":1423,"title":{},"body":{"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{}}}],["src/lib/navigation",{"_index":1726,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["src/lib/pipes/pipe",{"_index":1752,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{}}}],["src/lib/pipes/pipes.module.ts",{"_index":1791,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/lib/pipes/sort",{"_index":2075,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["src/lib/pipes/split",{"_index":2093,"title":{},"body":{"pipes/SplitInitialsPipe.html":{}}}],["src/lib/router",{"_index":1890,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["src/lib/services/abstract",{"_index":6,"title":{},"body":{"classes/AbstractConfigService.html":{}}}],["src/lib/services/config.service.ts",{"_index":487,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:13",{"_index":534,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:14",{"_index":528,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:15",{"_index":530,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:16",{"_index":535,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:17",{"_index":531,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:18",{"_index":533,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:19",{"_index":532,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:20",{"_index":538,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:21",{"_index":509,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:24",{"_index":529,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:28",{"_index":518,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:32",{"_index":523,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:38",{"_index":525,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:48",{"_index":527,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:52",{"_index":513,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:56",{"_index":511,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:61",{"_index":517,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:68",{"_index":514,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:75",{"_index":520,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:81",{"_index":515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:85",{"_index":510,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:89",{"_index":512,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/config.service.ts:93",{"_index":516,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/lib/services/discuss",{"_index":1168,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["src/lib/services/discussion.service.ts",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/telemetry",{"_index":1440,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["src/lib/wrapper",{"_index":2249,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["src/lib/wrapper/base",{"_index":252,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["src/lib/wrapper/category",{"_index":387,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["src/lib/wrapper/tags",{"_index":2168,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["srcelement.attributes.id",{"_index":1476,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["start",{"_index":618,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/enumerations.html":{}}}],["start'},{'name",{"_index":154,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["start.component",{"_index":473,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["start.component.html",{"_index":888,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.scss",{"_index":887,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts",{"_index":886,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:106",{"_index":923,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:142",{"_index":932,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:149",{"_index":935,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:18",{"_index":916,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:187",{"_index":938,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:19",{"_index":918,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:20",{"_index":917,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:201",{"_index":921,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:205",{"_index":929,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:21",{"_index":919,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:23",{"_index":960,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:24",{"_index":954,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:25",{"_index":943,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:26",{"_index":945,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:27",{"_index":956,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:28",{"_index":961,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:29",{"_index":957,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:30",{"_index":958,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:31",{"_index":946,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:32",{"_index":953,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:34",{"_index":955,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:35",{"_index":915,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:45",{"_index":930,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:60",{"_index":925,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:85",{"_index":927,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start.component.ts:98",{"_index":942,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["start/discuss",{"_index":472,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussStartComponent.html":{}}}],["startdiscussion",{"_index":647,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["started",{"_index":2275,"title":{"index.html":{}},"body":{}}],["startform",{"_index":899,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["startindex",{"_index":2151,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["state",{"_index":261,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["statechange",{"_index":399,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["statechange(event",{"_index":404,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["states",{"_index":1256,"title":{},"body":{"injectables/EventsService.html":{}}}],["status",{"_index":1356,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["stay",{"_index":1151,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["stored",{"_index":2294,"title":{},"body":{"index.html":{}}}],["str",{"_index":1177,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["stream",{"_index":1269,"title":{},"body":{"injectables/EventsService.html":{}}}],["string",{"_index":68,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"miscellaneous/variables.html":{}}}],["stringtocolor",{"_index":572,"title":{},"body":{"components/DiscussCardComponent.html":{},"injectables/DiscussUtilsService.html":{}}}],["stringtocolor(title",{"_index":583,"title":{},"body":{"components/DiscussCardComponent.html":{},"injectables/DiscussUtilsService.html":{}}}],["string|'timestamp'|'best'|'saved'|'watched'|'upvoted'|'downvoted",{"_index":1661,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["style",{"_index":1958,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["styles",{"_index":32,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["styleurls",{"_index":46,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["subject",{"_index":1188,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["submit",{"_index":1059,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["submitpost",{"_index":905,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["submitpost(form",{"_index":934,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["subscribe",{"_index":92,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["subscribe(result",{"_index":1691,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["subscriber",{"_index":2126,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["subscription",{"_index":67,"title":{},"body":{"components/AppLoaderComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["subtitle",{"_index":613,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["success",{"_index":873,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{}}}],["such",{"_index":2227,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["sunbird",{"_index":2016,"title":{},"body":{"components/SlidersComponent.html":{},"properties.html":{}}}],["sunbird/client",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["sundaramraj",{"_index":2223,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["super",{"_index":2020,"title":{},"body":{"components/SlidersComponent.html":{}}}],["super(navigationserviceservice",{"_index":424,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["support",{"_index":2317,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":2318,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1667,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["tabs",{"_index":1292,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["tag",{"_index":177,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["tag.score",{"_index":1150,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tag.value",{"_index":599,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tagalldiscussioncomponent",{"_index":176,"title":{"components/TagAllDiscussionComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["tagdata",{"_index":1139,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tagdata.tagname",{"_index":1141,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["taginputmodule",{"_index":474,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["tagname",{"_index":1140,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags",{"_index":179,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tags'},{'name",{"_index":156,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags.component",{"_index":464,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionRoutingModule.html":{}}}],["tags.component.html",{"_index":1106,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags.component.scss",{"_index":1105,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags.component.ts",{"_index":1104,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:17",{"_index":2195,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:18",{"_index":2196,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:20",{"_index":2202,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:21",{"_index":2203,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:22",{"_index":2194,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:23",{"_index":1114,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:24",{"_index":1127,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:25",{"_index":1124,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:26",{"_index":1129,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:27",{"_index":1128,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:28",{"_index":1126,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:29",{"_index":1125,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:30",{"_index":1113,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:35",{"_index":1123,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:36",{"_index":2201,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:41",{"_index":1122,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:45",{"_index":2198,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:54",{"_index":1115,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:63",{"_index":2197,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags.component.ts:66",{"_index":1121,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:81",{"_index":1119,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.component.ts:87",{"_index":1118,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["tags.currentvalue",{"_index":2211,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["tags/discuss",{"_index":463,"title":{},"body":{"modules/ComponentsModule.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{}}}],["tags/tag",{"_index":1209,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["tags/trending",{"_index":483,"title":{},"body":{"modules/ComponentsModule.html":{},"components/TrendingTagsComponent.html":{}}}],["tagsall",{"_index":1144,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["tagswidgetcomponent",{"_index":178,"title":{"components/TagsWidgetComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["tagtitle",{"_index":577,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["tagwhitelist",{"_index":1284,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["target",{"_index":1473,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["target.attributes.id",{"_index":1475,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["teaser",{"_index":1285,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["teaserpid",{"_index":1330,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["telemetry",{"_index":702,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["telemetryevent",{"_index":1183,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["telemetryutils",{"_index":652,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["telemetryutilsservice",{"_index":653,"title":{"injectables/TelemetryUtilsService.html":{}},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"overview.html":{}}}],["telemetryutilsservice,{provide",{"_index":1230,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["tell",{"_index":1541,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["template",{"_index":31,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["templateurl",{"_index":48,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["term",{"_index":1758,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{}}}],["test",{"_index":2308,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2307,"title":{},"body":{"index.html":{}}}],["text",{"_index":324,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["text:var",{"_index":322,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["think",{"_index":2225,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["this._config",{"_index":545,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this._config.banneroption",{"_index":565,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this._config.headeroptions",{"_index":564,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this._config.routerslug",{"_index":566,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this._context",{"_index":1447,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this._context.length",{"_index":1482,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this._context.push(data",{"_index":1456,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this._eventservice.toggle(input",{"_index":2258,"title":{},"body":{"injectables/WrapperNavigateService.html":{}}}],["this._navitemsource.asobservable",{"_index":1262,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.actionevent.emit({action",{"_index":1840,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.activatedroute.data.subscribe((data",{"_index":1550,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.activatedroute.data.subscribe(data",{"_index":1536,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.activatedroute.parent",{"_index":741,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.activatedroute.queryparams.subscribe((params",{"_index":715,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.allcategories",{"_index":1009,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.alltags",{"_index":1018,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.banner",{"_index":1538,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.bannerdata",{"_index":2023,"title":{},"body":{"components/SlidersComponent.html":{}}}],["this.bannerdata.widgetdata.length",{"_index":2024,"title":{},"body":{"components/SlidersComponent.html":{}}}],["this.bannersubscription",{"_index":1535,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.categories",{"_index":717,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.categories.push(data",{"_index":724,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.categories.push(subcategorydata",{"_index":747,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.categoryaction",{"_index":744,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.categoryhomeaction",{"_index":854,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.categoryid",{"_index":562,"title":{},"body":{"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{}}}],["this.categoryids",{"_index":712,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.catid",{"_index":1871,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.cids",{"_index":968,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.cids.result",{"_index":1007,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.circlecolor",{"_index":237,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.close.emit",{"_index":1046,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["this.closemodal('discard",{"_index":1033,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.closemodal('success",{"_index":1028,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.closenav",{"_index":1947,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.colors[randomindex",{"_index":238,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.configservice.getcategories",{"_index":969,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.configservice.getconfig",{"_index":1551,"title":{},"body":{"components/LibEntryComponent.html":{},"components/SidePannelComponent.html":{}}}],["this.configservice.getconfig().routerslug",{"_index":751,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.configservice.getrouterslug()}${constants.routes.discussion}topic/${discuss.slug",{"_index":1883,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.configservice.getrouterslug()}${constants.routes.topic}${slug",{"_index":2161,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.configservice.hascontext",{"_index":1005,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.configservice.setcategoryid(this.categoryid",{"_index":749,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.configservice.setcategoryid.subscribe((categoryids",{"_index":831,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.configservice.setconfig(this.activatedroute",{"_index":1549,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.configservice.setconfigfromparams(this.activatedroute",{"_index":1553,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.configsvc.setconfigfromwidgetbaseclass(this.config",{"_index":282,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["this.configsvc.userprofile",{"_index":1656,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.content",{"_index":1826,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.countdown",{"_index":90,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["this.countdown.unsubscribe",{"_index":94,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["this.createerrormsg",{"_index":1037,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.createinititals",{"_index":232,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.currentactivepage",{"_index":2135,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.currentfilter",{"_index":1662,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.currentindex",{"_index":2031,"title":{},"body":{"components/SlidersComponent.html":{}}}],["this.currentobj",{"_index":1448,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this.data",{"_index":88,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["this.data.menuoptions",{"_index":1942,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.defaulterror",{"_index":1039,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.detailspage",{"_index":425,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["this.discussiondata",{"_index":587,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["this.discussionevents.emittelemetry",{"_index":1462,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this.discussionevents.emittelemetry(impressionevent",{"_index":1471,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this.discussionevents.emittelemetry(interactevent",{"_index":1485,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this.discussioneventservice.emittelemetry(eventaction",{"_index":1561,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.discussionlist",{"_index":865,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.discussionlist.filter(p",{"_index":1695,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussionservice.alertevent.next",{"_index":93,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["this.discussionservice.alertevent.subscribe",{"_index":1557,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.discussionservice.contextbasedtags(req).subscribe(data",{"_index":1135,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["this.discussionservice.fetchalltag().subscribe(data",{"_index":1133,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["this.discussionservice.fetchsinglecategorydetails(cid).subscribe",{"_index":1874,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.discussionservice.forumids",{"_index":288,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/LibEntryComponent.html":{}}}],["this.discussionservice.getcontext(context_props.cid",{"_index":833,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.discussionservice.getcontextbasedtopic(slug",{"_index":860,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.discussionservice.initializeuserdetails(this.config.username",{"_index":291,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["this.discussionservice.initializeuserdetails(this.discussionservice.userid",{"_index":1554,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.discussionservice.showtrafficalert(error",{"_index":867,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.discussionservice.userid",{"_index":283,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/LibEntryComponent.html":{}}}],["this.discussservice.createpost(postcreatereq).subscribe",{"_index":1027,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.discussservice.fetchallcategories().subscribe((data",{"_index":1015,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.discussservice.fetchallcategories().subscribe(data",{"_index":730,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.discussservice.fetchalltag().subscribe(data",{"_index":1017,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.discussservice.fetchbestpost(scrollindex).subscribe(result",{"_index":1671,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.fetchdownvoted(scrollindex).subscribe(response",{"_index":1680,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.fetchnexttagd(tagname",{"_index":2148,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.discussservice.fetchrecentpost(scrollindex",{"_index":1690,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.fetchsaved(scrollindex).subscribe(response",{"_index":1675,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.fetchsinglecategorydetails(cid",{"_index":731,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.discussservice.fetchsinglecategorydetails(cid).subscribe(response",{"_index":733,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.discussservice.fetchupvoted(scrollindex).subscribe(response",{"_index":1678,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.fetchuserprofile(userid",{"_index":1689,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.fetchuserprofile(username).subscribe(response",{"_index":1651,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.forumids",{"_index":713,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.discussservice.getcontextbaseddiscussion(req).subscribe((data",{"_index":1008,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.discussservice.getcontextbasedtagdiscussion(req).subscribe",{"_index":2146,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.discussservice.gettagbaseddiscussion(tagname).subscribe",{"_index":2137,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.discussservice.setcontext(context_props.cid",{"_index":748,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.discussservice.showtrafficalert(error",{"_index":728,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.discussservice.userdetails.userslug",{"_index":1688,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussservice.userid",{"_index":1687,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.discussutils.getcontrast",{"_index":1137,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.discussutils.stringtocolor(tagtitle.tolowercase",{"_index":1136,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.editable",{"_index":1013,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.elementview",{"_index":839,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.elementview.nativeelement",{"_index":840,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.elementview.nativeelement.clientheight",{"_index":845,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.elementview.nativeelement.style.height",{"_index":841,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.enablesubmitbutton",{"_index":1004,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.eventservice.togglemenuitem.subscribe((data",{"_index":292,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["this.exit.emit(event",{"_index":1596,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["this.fetchallavailablecategories(this.forumids",{"_index":719,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.fetchallcategories",{"_index":720,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.fetchalltags",{"_index":1132,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["this.fetchcategory(cid).subscribe(data",{"_index":723,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.fetchcontextbasedtagdetails(this.tagname",{"_index":2134,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.fetchnewdata",{"_index":2159,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.fetchrelateddiscussiondata(this.catid",{"_index":1872,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.fetchsinglecategoryloader",{"_index":1873,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.fetchsingletagdetails(this.tagname",{"_index":2136,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.filter(this.currentfilter",{"_index":1660,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.filteredtags",{"_index":1134,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["this.formbuilder.group",{"_index":974,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["this.forumids",{"_index":711,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.forumids.length",{"_index":718,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.getcategories",{"_index":557,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getcategories().result",{"_index":558,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getcategories().result.length",{"_index":559,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getconfig",{"_index":554,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getcontextbasedtags(this.cids.result",{"_index":1131,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["this.getcontextdata",{"_index":561,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getcontrast",{"_index":590,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["this.getdiscussionlist(_.get(this.routeparams",{"_index":836,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.getdiscussionlist(categoryids",{"_index":834,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.getnextdata(tagname",{"_index":2165,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.getparams",{"_index":553,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getrecenttopics(scrollindex",{"_index":1669,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.getrollup",{"_index":1483,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this.handleloaderalert",{"_index":1555,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.hascontextdata",{"_index":556,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.headermessage",{"_index":82,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["this.hidesidepanel",{"_index":1938,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.histtorystartindex",{"_index":1547,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.initializedata",{"_index":971,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.initializeformfields",{"_index":1827,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.initializeformfields(this.topicdata",{"_index":972,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.initials",{"_index":231,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.isbuttonenabled",{"_index":1830,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.istopiccreator",{"_index":735,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["this.landingpage",{"_index":1945,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.loadermessage",{"_index":85,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["this.location.back",{"_index":1562,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.max",{"_index":2204,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["this.name",{"_index":244,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.navigateservice",{"_index":1745,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["this.navigatetodiscussionpage(_.get(params",{"_index":716,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.navigationservice.navigate(input",{"_index":745,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.navigationserviceservice.initservice('routerservice",{"_index":1546,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.navigationserviceservice.initservice('wrapperservice",{"_index":281,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["this.opensnackbar(err.error.message.split('|')[1",{"_index":1882,"title":{},"body":{"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.opensnackbar(this.toastsuccess.nativeelement.value",{"_index":1030,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.pager",{"_index":2150,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.pagination",{"_index":862,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.pagination.currentpage",{"_index":859,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.pagination.first.page",{"_index":874,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.pagination.next.page",{"_index":880,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.pagination.pagecount",{"_index":879,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.paginationdata",{"_index":2141,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.paginationdata.currentpage",{"_index":2156,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.paginationdata.first.page",{"_index":2152,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.paginationdata.last.page",{"_index":2154,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.paginationdata.pagecount",{"_index":2158,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.paginationdata.pages",{"_index":2155,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.paramssubscription",{"_index":714,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/SidePannelComponent.html":{}}}],["this.paramssubscription.unsubscribe",{"_index":756,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/SidePannelComponent.html":{}}}],["this.photourl",{"_index":228,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.profilephoto",{"_index":1658,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.queryparam",{"_index":1138,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.queryparam.tagname",{"_index":1143,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.randomcolor",{"_index":239,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.randomcolors[randomindex1",{"_index":242,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.reinitiateslideinterval",{"_index":2021,"title":{},"body":{"components/SlidersComponent.html":{}}}],["this.relateddiscussions",{"_index":1876,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.relateddiscussions.push(topic",{"_index":1881,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.replyform",{"_index":1828,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.controls['replycontent'].value.trim",{"_index":1841,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.get(field).dirty",{"_index":1838,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.get(field).valid",{"_index":1837,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.get(field).value",{"_index":1832,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.get(field).value.trim",{"_index":1835,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.get(field).value.trimstart",{"_index":1836,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.patchvalue",{"_index":1834,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.status",{"_index":1831,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.replyform.valuechanges.subscribe(val",{"_index":1829,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":830,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.routeparams",{"_index":832,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["this.router.navigate",{"_index":739,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.router.navigate([`${this.configservice.getrouterslug()}${constants.routes.discussion}${pagename",{"_index":1946,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.router.navigate([`${this.configservice.getrouterslug()}${constants.routes.tag}tag",{"_index":1149,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.router.navigate([`${this.configservice.getrouterslug()}${constants.routes.topic}${_.trim(_.get(discussiondata",{"_index":2162,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.router.navigate([`${this.configservice.getrouterslug()}${constants.routes.topic}${slug",{"_index":1683,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.router.navigate([input.data.url",{"_index":1896,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["this.router.navigate(url",{"_index":1895,"title":{},"body":{"injectables/RouterServiceService.html":{}}}],["this.router.url",{"_index":1466,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["this.routerservice.navigate(input",{"_index":1747,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["this.selectedtab",{"_index":1944,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.setcategoryid.next(id",{"_index":563,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.setpagination",{"_index":2142,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.showerrormsg",{"_index":1021,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.showinitials",{"_index":229,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["this.showloader",{"_index":721,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["this.showloaderalert",{"_index":1558,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.showselectcategory",{"_index":970,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.showsidemenu",{"_index":1948,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["this.showstartdiscussionmodal",{"_index":737,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{}}}],["this.similarposts",{"_index":2139,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.slideinterval",{"_index":2025,"title":{},"body":{"components/SlidersComponent.html":{}}}],["this.slideinterval.unsubscribe",{"_index":2026,"title":{},"body":{"components/SlidersComponent.html":{}}}],["this.slug",{"_index":429,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["this.startform",{"_index":973,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.controls.category.setvalue(this.allcategories[0].cid",{"_index":1014,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.controls['category'].setvalue(this.allcategories[0].cid",{"_index":1012,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.controls['category'].setvalue(this.allcategories[1].cid",{"_index":1016,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.controls['description'].setvalue(_.get(topicdata",{"_index":989,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.controls['question'].setvalue(this.discussutils.htmldecode(_.get(topicdata",{"_index":988,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.controls['tags'].setvalue(tags",{"_index":991,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.get('category",{"_index":1011,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.get(field).dirty",{"_index":1001,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.get(field).valid",{"_index":1000,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.get(field).value",{"_index":993,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.get(field).value.trim",{"_index":998,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.get(field).value.trimstart",{"_index":999,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.patchvalue",{"_index":996,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.status",{"_index":1002,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.startform.valuechanges.subscribe(val",{"_index":978,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.state",{"_index":294,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["this.statechange.emit",{"_index":753,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.statechange.emit(discuss",{"_index":1884,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.stringtocolor(tagtitle.tolowercase",{"_index":589,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["this.subscription",{"_index":1556,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1566,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["this.tabledata!.columns",{"_index":2209,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["this.tagname",{"_index":2129,"title":{},"body":{"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["this.tags",{"_index":2174,"title":{},"body":{"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["this.telemetryevent.next(event",{"_index":1192,"title":{},"body":{"injectables/DiscussionEventsService.html":{}}}],["this.telemetryutils.deletecontext(matchedtopic",{"_index":849,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.telemetryutils.logimpression(nsdiscussdata.ipagename.category",{"_index":710,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["this.telemetryutils.logimpression(nsdiscussdata.ipagename.home",{"_index":829,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/SidePannelComponent.html":{}}}],["this.telemetryutils.logimpression(nsdiscussdata.ipagename.load_alert",{"_index":1594,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["this.telemetryutils.logimpression(nsdiscussdata.ipagename.my_discussion",{"_index":1659,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["this.telemetryutils.logimpression(nsdiscussdata.ipagename.start",{"_index":967,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.telemetryutils.logimpression(nsdiscussdata.ipagename.tags",{"_index":1130,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["this.telemetryutils.loginteract(event",{"_index":754,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.telemetryutils.setcontext",{"_index":709,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{}}}],["this.telemetryutils.uppendcontext",{"_index":732,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["this.tid",{"_index":427,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["this.togglemenuitem.next(data",{"_index":1270,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.topicid",{"_index":1879,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["this.trandingtags",{"_index":2206,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["this.uploadsavedata",{"_index":1020,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["this.validateform",{"_index":979,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["this.widgetcids",{"_index":2127,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.widgettagname",{"_index":2130,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["this.wrappereventlistener(data",{"_index":293,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["this.wrapperinit",{"_index":296,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["this.wrapperservice.navigate(input",{"_index":1748,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["thread_tools",{"_index":1316,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["thumb",{"_index":1312,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["tid",{"_index":398,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":1347,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["time.pipe",{"_index":1796,"title":{},"body":{"modules/PipesModule.html":{}}}],["time.pipe.ts",{"_index":1773,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["time.pipe.ts:7",{"_index":1774,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{}}}],["time/pipe",{"_index":1772,"title":{},"body":{"pipes/PipeRelativeTimePipe.html":{},"modules/PipesModule.html":{}}}],["timer",{"_index":76,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["timer(10000",{"_index":91,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["times",{"_index":1951,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["timestamp",{"_index":1304,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["timestampiso",{"_index":1302,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["timing",{"_index":627,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/SidePannelComponent.html":{}}}],["title",{"_index":585,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["titleraw",{"_index":1300,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["toast",{"_index":726,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{}}}],["toaster",{"_index":868,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["todo",{"_index":306,"title":{},"body":{"components/CategoryCardComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionRoutingModule.html":{},"injectables/EventsService.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["toggle",{"_index":1251,"title":{},"body":{"injectables/EventsService.html":{}}}],["toggle(data",{"_index":1253,"title":{},"body":{"injectables/EventsService.html":{}}}],["togglemenuitem",{"_index":1250,"title":{},"body":{"injectables/EventsService.html":{}}}],["tolocalelowercase().includes(term.tolocalelowercase",{"_index":1770,"title":{},"body":{"pipes/PipeListFilterPipe.html":{}}}],["top",{"_index":363,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["topic",{"_index":679,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"miscellaneous/variables.html":{}}}],["topic.deleted",{"_index":1878,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["topic.slug",{"_index":1682,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["topic.tid",{"_index":1880,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["topic/:topicid/:slug",{"_index":1211,"title":{},"body":{"modules/DiscussionRoutingModule.html":{}}}],["topic/thread",{"_index":1042,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["topic_count",{"_index":1286,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["topiccount",{"_index":1351,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["topicdata",{"_index":909,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["topicid",{"_index":1860,"title":{},"body":{"components/RelatedDiscussionComponent.html":{}}}],["topics",{"_index":855,"title":{},"body":{"components/DiscussHomeComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["topicstaledays",{"_index":1327,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["tostring().split",{"_index":245,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["totalpage",{"_index":2157,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["totalpostcount",{"_index":1287,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["totaltopiccount",{"_index":1288,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["totaltopics",{"_index":783,"title":{},"body":{"components/DiscussHomeComponent.html":{}}}],["traffic.please",{"_index":1599,"title":{},"body":{"components/LoadAlertComponent.html":{}}}],["trandingtags",{"_index":2192,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["transform",{"_index":1076,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{}}}],["transform(data",{"_index":2078,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["transform(value",{"_index":1756,"title":{},"body":{"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"pipes/SplitInitialsPipe.html":{}}}],["transition",{"_index":337,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["translate",{"_index":1077,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{}}}],["translatex",{"_index":2056,"title":{},"body":{"components/SlidersComponent.html":{}}}],["translatey",{"_index":2073,"title":{},"body":{"components/SlidersComponent.html":{}}}],["transparent",{"_index":1961,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["tree",{"_index":34,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["trending",{"_index":181,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["trending_up",{"_index":604,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["trendingtagscomponent",{"_index":180,"title":{"components/TrendingTagsComponent.html":{}},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/ComponentsModule.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{},"overview.html":{}}}],["true",{"_index":230,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["try",{"_index":950,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["tslib",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":73,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/SidePannelComponent.html":{},"pipes/SortByPipe.html":{},"components/TagAllDiscussionComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["tslint:enable",{"_index":79,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"interfaces/ITelemetryObj.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"pipes/SortByPipe.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{}}}],["tuned",{"_index":1152,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["twice",{"_index":1703,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussUtilsService.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SortByPipe.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":248,"title":{},"body":{"components/AvatarPhotoComponent.html":{}}}],["ui",{"_index":2285,"title":{},"body":{"index.html":{}}}],["ui.container",{"_index":1574,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["ui.git",{"_index":2338,"title":{},"body":{"properties.html":{}}}],["ui.git#readme",{"_index":2331,"title":{},"body":{"properties.html":{}}}],["ui.module.ts",{"_index":1219,"title":{},"body":{"modules/DiscussionUiModule.html":{},"miscellaneous/functions.html":{}}}],["ui/issues",{"_index":2333,"title":{},"body":{"properties.html":{}}}],["uid",{"_index":1044,"title":{},"body":{"components/DiscussStartComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":247,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"injectables/ConfigService.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["undone",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":2306,"title":{},"body":{"index.html":{}}}],["unread",{"_index":1289,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["unreplied",{"_index":1328,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["unset",{"_index":766,"title":{},"body":{"components/DiscussCategoryComponent.html":{}}}],["untypedformbuilder",{"_index":912,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["untypedformgroup",{"_index":959,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["update",{"_index":1047,"title":{},"body":{"components/DiscussStartComponent.html":{},"injectables/EventsService.html":{},"components/PostReplyComponent.html":{}}}],["update_box",{"_index":2241,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["update_btn_box",{"_index":2247,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["update_card",{"_index":2243,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["update_inner_box",{"_index":2242,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["updatepost",{"_index":906,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["updatepost(form",{"_index":937,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["updatepostactions",{"_index":1846,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["updates",{"_index":2218,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["updatetopicrequest",{"_index":1043,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["updating",{"_index":1153,"title":{},"body":{"components/DiscussTagsComponent.html":{}}}],["uploadedpicture",{"_index":1399,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["uploadsavedata",{"_index":900,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["uppendcontext",{"_index":2180,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["uppendcontext(data",{"_index":1450,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["uppercase",{"_index":1718,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["upvote",{"_index":2219,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["upvoted",{"_index":1379,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["upvotes",{"_index":1305,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["uri",{"_index":1296,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"injectables/TelemetryUtilsService.html":{}}}],["url",{"_index":742,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussTagsComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/RelatedDiscussionComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["urlconfig",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/categories",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/category/${cid",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/category/${slug",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/category/list",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/popular",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/recent",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/tags",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/tags/${tag",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/tags/list",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/topic",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/topics/unread/total",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/user/${slug}/bookmarks",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/user/${slug}/downvoted",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/user/${slug}/upvoted",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/user/${username",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/user/v1/create",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/users/${slug}/about",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/users/me",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/v2/posts/${pid}/bookmark",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/v2/posts/${pid}/vote",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/v2/topics",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.apibasepath()}/v2/topics/${tid",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlconfig.host}${urlconfig.apislug",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1542,"title":{},"body":{"components/LibEntryComponent.html":{},"injectables/WrapperNavigateService.html":{},"index.html":{}}}],["used",{"_index":1255,"title":{},"body":{"injectables/EventsService.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{}}}],["usefactory",{"_index":1232,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["useful",{"_index":2221,"title":{},"body":{"components/TrendingTagsComponent.html":{}}}],["user",{"_index":626,"title":{},"body":{"components/DiscussCardComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["user/profiledetails/getuserregistry",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdetails",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":549,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["userinitial",{"_index":1617,"title":{},"body":{"components/MyDiscussionComponent.html":{},"pipes/SplitInitialsPipe.html":{}}}],["username",{"_index":285,"title":{},"body":{"components/BaseWrapperComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/ICategoryObj.html":{},"interfaces/ICourseContext.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionAllContext.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IMenuOptions.html":{},"interfaces/IMenuOptions-1.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"interfaces/Icategory.html":{},"interfaces/Icontext.html":{},"interfaces/IdiscussionConfig.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":1384,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["userslug",{"_index":1349,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/MyDiscussionComponent.html":{}}}],["using",{"_index":1698,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["utils.service",{"_index":703,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"modules/DiscussionUiModule.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["utils.service.ts",{"_index":1169,"title":{},"body":{"injectables/DiscussUtilsService.html":{},"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:10",{"_index":1178,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["utils.service.ts:100",{"_index":2185,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:19",{"_index":2190,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:20",{"_index":2182,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:23",{"_index":1171,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["utils.service.ts:27",{"_index":2188,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:31",{"_index":1173,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["utils.service.ts:32",{"_index":2189,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:40",{"_index":2183,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:47",{"_index":2184,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:51",{"_index":2186,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["utils.service.ts:6",{"_index":1170,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["utils.service.ts:70",{"_index":2187,"title":{},"body":{"injectables/TelemetryUtilsService.html":{}}}],["valid",{"_index":1003,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["validateform",{"_index":907,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["validators",{"_index":962,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/PostReplyComponent.html":{}}}],["validators.minlength(8",{"_index":977,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["validators.required",{"_index":976,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["value",{"_index":205,"title":{},"body":{"components/AvatarPhotoComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITelemetryObj.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{},"components/LibEntryComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"pipes/PipeFilterPipe.html":{},"pipes/PipeListFilterPipe.html":{},"pipes/PipeRelativeTimePipe.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"pipes/SplitInitialsPipe.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.split",{"_index":2096,"title":{},"body":{"pipes/SplitInitialsPipe.html":{}}}],["valueescaped",{"_index":1344,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["valuenowhitespace",{"_index":992,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["valuenowhitespace.charat(index",{"_index":995,"title":{},"body":{"components/DiscussStartComponent.html":{}}}],["valuenowhitespace.charat(length",{"_index":1833,"title":{},"body":{"components/PostReplyComponent.html":{}}}],["valuenowhitespace.length",{"_index":994,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/PostReplyComponent.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["variables",{"_index":2342,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":1480,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["version",{"_index":2280,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":372,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["via",{"_index":2310,"title":{},"body":{"index.html":{}}}],["view",{"_index":1465,"title":{},"body":{"interfaces/ITelemetryObj.html":{},"injectables/TelemetryUtilsService.html":{}}}],["viewchild",{"_index":828,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["viewchild('scrollcontainerheight",{"_index":810,"title":{},"body":{"components/DiscussHomeComponent.html":{},"components/MyDiscussionComponent.html":{}}}],["viewcount",{"_index":1307,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["views",{"_index":606,"title":{},"body":{"components/DiscussCardComponent.html":{}}}],["vinu",{"_index":2340,"title":{},"body":{"properties.html":{}}}],["visibility",{"_index":1975,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["void",{"_index":65,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"injectables/ConfigService.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/DiscussionEventsService.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"injectables/NavigationServiceService.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"injectables/RouterServiceService.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"injectables/TelemetryUtilsService.html":{},"components/TrendingTagsComponent.html":{},"injectables/WrapperNavigateService.html":{}}}],["votepost",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["votes",{"_index":603,"title":{},"body":{"components/DiscussCardComponent.html":{},"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["wait",{"_index":84,"title":{},"body":{"components/AppLoaderComponent.html":{}}}],["want",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watched",{"_index":1626,"title":{},"body":{"components/MyDiscussionComponent.html":{}}}],["webkit",{"_index":367,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SlidersComponent.html":{}}}],["website",{"_index":1397,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["weight",{"_index":120,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["went",{"_index":948,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["wheather",{"_index":2132,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["white",{"_index":1163,"title":{},"body":{"components/DiscussTagsComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["widget",{"_index":174,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"injectables/EventsService.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["widget'},{'name",{"_index":141,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["widget.component",{"_index":1223,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["widget.component.css",{"_index":391,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["widget.component.html",{"_index":392,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["widget.component.ts",{"_index":389,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["widget.component.ts:16",{"_index":2172,"title":{},"body":{"components/TagsWidgetComponent.html":{}}}],["widget.component.ts:17",{"_index":414,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["widget.component.ts:18",{"_index":411,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["widget.component.ts:19",{"_index":413,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["widget.component.ts:20",{"_index":416,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["widget.component.ts:21",{"_index":419,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["widget.component.ts:22",{"_index":417,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["widget.component.ts:23",{"_index":401,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["widget.component.ts:34",{"_index":405,"title":{},"body":{"components/CategoryWidgetComponent.html":{}}}],["widget/category",{"_index":388,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"modules/DiscussionUiModule.html":{}}}],["widget/tags",{"_index":1226,"title":{},"body":{"modules/DiscussionUiModule.html":{},"components/TagsWidgetComponent.html":{}}}],["widgetbasecomponent",{"_index":2015,"title":{},"body":{"components/SlidersComponent.html":{}}}],["widgetcids",{"_index":2107,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["widgetdata[currentindex].title",{"_index":2034,"title":{},"body":{"components/SlidersComponent.html":{}}}],["widgets",{"_index":1343,"title":{},"body":{"interfaces/ICategorie.html":{},"interfaces/IDiscussJsonData.html":{},"interfaces/IDiscussionTab.html":{},"interfaces/IEditor.html":{},"interfaces/IPageData.html":{},"interfaces/IPagination.html":{},"interfaces/IPosts.html":{},"interfaces/IRelatedDiscussion.html":{},"interfaces/ITag.html":{},"interfaces/ITopic.html":{},"interfaces/IUser.html":{}}}],["widgettagname",{"_index":2108,"title":{},"body":{"components/TagAllDiscussionComponent.html":{}}}],["width",{"_index":101,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["window.history.go",{"_index":1565,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["window.history.length",{"_index":1548,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["window.scroll",{"_index":1567,"title":{},"body":{"components/LibEntryComponent.html":{}}}],["window['csmodule",{"_index":1229,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["word",{"_index":376,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/DiscussCardComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["works",{"_index":297,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrap",{"_index":620,"title":{},"body":{"components/DiscussCardComponent.html":{},"components/MyDiscussionComponent.html":{},"components/RelatedDiscussionComponent.html":{}}}],["wrapper",{"_index":258,"title":{},"body":{"components/BaseWrapperComponent.html":{},"injectables/NavigationServiceService.html":{}}}],["wrapper'},{'name",{"_index":136,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["wrapper.component",{"_index":423,"title":{},"body":{"components/CategoryWidgetComponent.html":{},"modules/DiscussionUiModule.html":{},"components/TagsWidgetComponent.html":{}}}],["wrapper.component.css",{"_index":259,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.html",{"_index":260,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.ts",{"_index":254,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.ts:17",{"_index":271,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.ts:18",{"_index":270,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.ts:21",{"_index":272,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.ts:37",{"_index":275,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper.component.ts:39",{"_index":274,"title":{},"body":{"components/BaseWrapperComponent.html":{}}}],["wrapper/base",{"_index":253,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"modules/DiscussionUiModule.html":{},"components/TagsWidgetComponent.html":{}}}],["wrapper/category",{"_index":1222,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["wrapper/tags",{"_index":1225,"title":{},"body":{"modules/DiscussionUiModule.html":{}}}],["wrappereventlistener",{"_index":263,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["wrappereventlistener(data",{"_index":273,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["wrapperinit",{"_index":264,"title":{},"body":{"components/BaseWrapperComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/TagsWidgetComponent.html":{}}}],["wrappernavigateservice",{"_index":1731,"title":{"injectables/WrapperNavigateService.html":{}},"body":{"injectables/NavigationServiceService.html":{},"injectables/WrapperNavigateService.html":{}}}],["wrappernavigateservice,private",{"_index":1744,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["wrapperservice",{"_index":1735,"title":{},"body":{"injectables/NavigationServiceService.html":{}}}],["wrong",{"_index":949,"title":{},"body":{"components/DiscussStartComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["ws",{"_index":173,"title":{},"body":{"components/AppLoaderComponent.html":{},"components/AvatarPhotoComponent.html":{},"components/BaseWrapperComponent.html":{},"components/CategoryCardComponent.html":{},"components/CategoryWidgetComponent.html":{},"components/DiscussCardComponent.html":{},"components/DiscussCategoryComponent.html":{},"components/DiscussHomeComponent.html":{},"components/DiscussStartComponent.html":{},"components/DiscussTagsComponent.html":{},"components/LibEntryComponent.html":{},"components/LoadAlertComponent.html":{},"components/MyDiscussionComponent.html":{},"components/PostReplyComponent.html":{},"components/RelatedDiscussionComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{},"components/TagAllDiscussionComponent.html":{},"components/TagsWidgetComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["x",{"_index":1980,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["xml",{"_index":1176,"title":{},"body":{"injectables/DiscussUtilsService.html":{}}}],["xs",{"_index":2055,"title":{},"body":{"components/SlidersComponent.html":{},"components/TrendingTagsComponent.html":{}}}],["y",{"_index":1979,"title":{},"body":{"components/SidePannelComponent.html":{}}}],["yes",{"_index":682,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/SidePannelComponent.html":{},"components/TagAllDiscussionComponent.html":{}}}],["z",{"_index":765,"title":{},"body":{"components/DiscussCategoryComponent.html":{},"components/DiscussStartComponent.html":{},"components/LoadAlertComponent.html":{},"components/SidePannelComponent.html":{},"components/SlidersComponent.html":{}}}],["zoom",{"_index":444,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DiscussionUiModule.html":{},"modules/ElementsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractConfigService.html":{"url":"classes/AbstractConfigService.html","title":"class - AbstractConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/abstract-config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig(key)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/abstract-config.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IdiscussionConfig } from '../models/discussion-config.model';\n\nexport abstract class AbstractConfigService {\n\n    abstract getConfig(key): any\n  \n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLoaderComponent.html":{"url":"components/AppLoaderComponent.html","title":"component - AppLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/app-loader/app-loader.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-app-loader\n            \n\n\n\n            \n                styleUrls\n                ./app-loader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countDown\n                            \n                            \n                                headerMessage\n                            \n                            \n                                loaderMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(discussionService: DiscussionService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/app-loader/app-loader.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/app-loader/app-loader.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/app-loader/app-loader.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/app-loader/app-loader.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countDown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/app-loader/app-loader.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/app-loader/app-loader.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/app-loader/app-loader.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy } from '@angular/core';\n\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { Subscription, timer } from 'rxjs';\nimport { DiscussionService } from '../../services/discussion.service';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-app-loader',\n  templateUrl: './app-loader.component.html',\n  styleUrls: ['./app-loader.component.css']\n})\nexport class AppLoaderComponent implements OnInit, OnDestroy {\n\n  @Input() data;\n  headerMessage: string;\n  loaderMessage: string;\n  countDown:Subscription;\n\n  constructor(\n    private discussionService: DiscussionService\n  ) { }\n\n  ngOnInit() {\n    this.headerMessage = 'Please wait';\n    this.loaderMessage = 'We are fetching details';\n    if (this.data) {\n      this.headerMessage = _.get(this.data, 'headerMessage') || this.headerMessage;\n      this.loaderMessage = _.get(this.data, 'loaderMessage') || this.loaderMessage;\n    }\n    this.countDown = timer(10000)\n      .subscribe(() => {\n        this.discussionService.alertEvent.next()\n      });\n  }\n\n  ngOnDestroy(){\n    this.countDown.unsubscribe();\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n    \n        \n          {{headerMessage}}\n        \n        {{loaderMessage}}\n      \n  \n\n    \n\n    \n                \n                    ./app-loader.component.css\n                \n                .dt-app-loader-container {\n    background: var(--gray-100);\n    width: 94% !important;\n    margin: 1rem auto;\n    border-radius: 1.5rem;\n    border: 0px;\n    display: flex;\n    padding: 1rem;\n}\n​\n.loader-content{\n    margin: 0 1rem;\n    font-size: 0.875rem;\n}\n​\n.loader-label{\n    font-weight: bold;\n    margin-bottom: 0.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{headerMessage}}                {{loaderMessage}}        '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarPhotoComponent.html":{"url":"components/AvatarPhotoComponent.html","title":"component - AvatarPhotoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarPhotoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/avatar-photo/avatar-photo.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-avatar-photo\n            \n\n\n\n            \n                styleUrls\n                ./avatar-photo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./avatar-photo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                circleColor\n                            \n                            \n                                    Private\n                                colors\n                            \n                            \n                                random\n                            \n                            \n                                    Private\n                                randomcolors\n                            \n                            \n                                    Public\n                                showInitials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createInititals\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                initials\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                            \n                                randomColor\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        initials\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        photoUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        randomColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createInititals\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInititals()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        circleColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    // '#EB7181', // red\n    '#306933', // green\n    // '#000000', // black\n    // '#3670B2', // blue\n    // '#4E9E87',\n    // '#7E4C8D',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        random\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Math.random().toString(36).slice(2)\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        randomcolors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    '#EB7181', // red\n    '#006400', // green\n    '#000000', // black\n    '#3670B2', // blue\n    '#4E9E87',\n    '#7E4C8D',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showInitials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/avatar-photo/avatar-photo.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-avatar-photo',\n  templateUrl: './avatar-photo.component.html',\n  styleUrls: ['./avatar-photo.component.css']\n})\nexport class AvatarPhotoComponent implements OnInit {\n\n  @Input() photoUrl!: string;\n  @Input() name!: string;\n  @Input() size = '';\n  @Input() randomColor = false;\n  @Input() initials?: string;\n  public showInitials = false;\n  public circleColor!: string;\n  random = Math.random().toString(36).slice(2);\n\n  // public initials!: string\n\n  private colors = [\n    // '#EB7181', // red\n    '#306933', // green\n    // '#000000', // black\n    // '#3670B2', // blue\n    // '#4E9E87',\n    // '#7E4C8D',\n  ];\n\n  private randomcolors = [\n    '#EB7181', // red\n    '#006400', // green\n    '#000000', // black\n    '#3670B2', // blue\n    '#4E9E87',\n    '#7E4C8D',\n  ];\n\n  ngOnInit() {\n    if (!this.photoUrl) {\n      this.showInitials = true;\n      if (!this.initials) {\n        this.createInititals();\n      }\n      const randomIndex = Math.floor(Math.random() * Math.floor(this.colors.length));\n      this.circleColor = this.colors[randomIndex];\n      if (this.randomColor) {\n        const randomIndex1 = Math.floor(Math.random() * Math.floor(this.randomcolors.length));\n        this.circleColor = this.randomcolors[randomIndex1];\n      }\n    }\n\n  }\n\n  private createInititals(): void {\n    let initials = '';\n    const array = `${this.name} `.toString().split(' ');\n    if (array[0] !== 'undefined' && typeof array[1] !== 'undefined') {\n      initials += array[0].charAt(0);\n      initials += array[1].charAt(0);\n    } else {\n      for (let i = 0; i \n    \n\n    \n        \n  \n\n  \n    {{ initials }}\n  \n\n    \n\n    \n                \n                    ./avatar-photo.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ initials }}  '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvatarPhotoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseWrapperComponent.html":{"url":"components/BaseWrapperComponent.html","title":"component - BaseWrapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseWrapperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/wrapper/base-wrapper/base-wrapper.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                NavigationServiceService\n                                EventsService\n                \n            \n\n\n            \n                selector\n                sb-base-wrapper\n            \n\n\n\n            \n                styleUrls\n                ./base-wrapper.component.css\n            \n\n\n\n            \n                templateUrl\n                ./base-wrapper.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                wrapperEventListener\n                            \n                            \n                                    Protected\n                                wrapperInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationServiceService: NavigationServiceService, eventService: EventsService, configSvc: ConfigService, discussionService: DiscussionService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/wrapper/base-wrapper/base-wrapper.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationServiceService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configSvc\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/wrapper/base-wrapper/base-wrapper.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/wrapper/base-wrapper/base-wrapper.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        wrapperEventListener\n                        \n                    \n                \n            \n            \n                \n                    \n                    wrapperEventListener(data)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/wrapper/base-wrapper/base-wrapper.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        wrapperInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    wrapperInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/wrapper/base-wrapper/base-wrapper.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/base-wrapper/base-wrapper.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { EventsService } from '../../events.service';\nimport { NavigationServiceService } from '../../navigation-service.service';\nimport { ConfigService } from '../../services/config.service';\nimport { DiscussionService } from '../../services/discussion.service';\nimport * as _ from 'lodash'\nimport { IdiscussionConfig } from '../../models/discussion-config.model';\n\n@Component({\n  selector: 'sb-base-wrapper',\n  templateUrl: './base-wrapper.component.html',\n  styleUrls: ['./base-wrapper.component.css'],\n  providers: [NavigationServiceService, EventsService]\n})\nexport class BaseWrapperComponent implements OnInit {\n\n  @Input() config: IdiscussionConfig\n  state: string\n  constructor(private navigationServiceService: NavigationServiceService, private eventService: EventsService, private configSvc: ConfigService, private discussionService: DiscussionService) { }\n\n  ngOnInit() {\n    this.navigationServiceService.initService('wrapperService')\n    this.configSvc.setConfigFromWidgetBaseClass(this.config)\n    this.discussionService.userId = _.get(this.config, 'userName')\n    const rawCategories = _.get(this.config, 'categories')\n    this.discussionService.forumIds = _.get(rawCategories, 'result')\n    this.discussionService.initializeUserDetails(this.config.userName)\n\n    this.eventService.toggleMenuItem.subscribe((data) => {\n      this.wrapperEventListener(data)\n      this.state = data.action\n    \n    })\n    this.wrapperInit()\n  }\n\n  protected wrapperInit() { }\n\n  protected wrapperEventListener(data) { }\n\n}\n\n    \n\n    \n        base-wrapper works!\n\n    \n\n    \n                \n                    ./base-wrapper.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'base-wrapper works!'\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseWrapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryCardComponent.html":{"url":"components/CategoryCardComponent.html","title":"component - CategoryCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/category-card/category-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-category-card\n            \n\n\n\n            \n                styleUrls\n                ./category-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/category-card/category-card.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/category-card/category-card.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/category-card/category-card.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss']\n})\nexport class CategoryCardComponent implements OnInit {\n\n  // TODO: Create interface for type check\n  // TODO: replace mat-icon\n  @Input() category: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.category);\n  }\n\n}\n\n\n    \n\n    \n        \n    \n      \n        \n      \n        \n    \n    {{category.description}}\n    \n      \n        {{category.totalTopicCount}} Discussions\n        {{category.totalPostCount}} Posts\n      \n    \n    \n  \n\n    \n\n    \n                \n                    ./category-card.component.scss\n                \n                ::ng-deep:root {\n    // --df-category-card-label: var(--black);\n    // --df-category-card-text:var(--gray-400);\n    --df-category-card-label: var(--df-text);\n    --df-category-card-text: var(--df-text);\n}\n\n.category-card {\n    box-shadow: 0 2px 1px -1px rgba(0, 0, 0, .2), 0 1px 1px 0 rgba(0, 0, 0, .14), 0 1px 3px 0 rgba(0, 0, 0, .12);\n    background:var(--df-card-bg);\n    color: var(--df-text);\n    transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1);\n    display: block;\n    position: relative;\n    border-radius: 0.25rem;\n    height: 11rem;\n    width: auto;\n    padding: 1rem;\n    cursor: pointer;\n\n    .category-card-header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        \n        .category-card-header-image {\n            border: 0.0625rem solid var(--red-0);\n            border-radius: 50%;\n            max-width: 3.125rem;\n            width: 100%;\n            height: 3.125rem;\n            position: relative;\n        \n            .category-card-img{\n                position: absolute;\n                top: 0.5rem;\n                left: 0.5rem;\n                width: 2rem;\n                height: 2rem;\n            }\n        }\n        \n        .category-card-header-label {\n            display: -webkit-box;\n            -webkit-line-clamp: 2;\n            /* autoprefixer: off */\n            -webkit-box-orient: vertical;\n            /* autoprefixer: on */\n            overflow: hidden;\n            text-overflow: ellipsis;\n            color: var(--df-category-card-label);\n            word-break:break-word;\n            margin: 0 0.5rem;\n            font-weight: 700;\n        }\n    }\n    \n    .category-card-header-text {\n        color: var(--df-category-card-text);\n        /* autoprefixer: off */\n        -webkit-box-orient: vertical;\n        /* autoprefixer: on */\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        word-break: break-all;\n        padding: 0.5rem 0;\n        font-size: 0.875rem;\n    }\n    \n    .category-card-main {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: var(--df-category-card-text);\n        margin: 0.5rem 0;\n        font-size: 0.875rem;\n        font-weight: 700;\n\n        .category-card-main-content{\n            display: flex;\n        }\n    \n        .post-label{\n            margin: 0 1rem;\n        }\n    \n        .eye-icon{\n            width: 1.4rem;\n            height: 1.4rem;\n        }\n    }\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{category.description}}                  {{category.totalTopicCount}} Discussions        {{category.totalPostCount}} Posts                '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryWidgetComponent.html":{"url":"components/CategoryWidgetComponent.html","title":"component - CategoryWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/wrapper/category-widget/category-widget.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWrapperComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-category-widget\n            \n\n\n\n            \n                styleUrls\n                ./category-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                context\n                            \n                            \n                                detailsPage\n                            \n                            \n                                detailsToggle\n                            \n                            \n                                homePage\n                            \n                            \n                                slug\n                            \n                            \n                                tid\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                            \n                                    Protected\n                                wrapperEventListener\n                            \n                            \n                                wrapperInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configSvc: ConfigService, discussionService: DiscussionService, navigationServiceService: NavigationServiceService, eventService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configSvc\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationServiceService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseWrapperComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWrapperComponent:17\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stateChange\n                        \n                    \n                \n            \n            \n                \nstateChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/wrapper/category-widget/category-widget.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        wrapperEventListener\n                        \n                    \n                \n            \n            \n                \n                    \n                    wrapperEventListener(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseWrapperComponent\n\n                \n            \n            \n                \n                        Defined in         BaseWrapperComponent:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wrapperInit\n                        \n                    \n                \n            \n            \n                \nwrapperInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseWrapperComponent\n\n                \n            \n            \n                \n                        Defined in         BaseWrapperComponent:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseWrapperComponent\n\n                \n            \n            \n                \n                        Defined in         BaseWrapperComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONSTANTS.CATEGORY\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailsPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONSTANTS.CATEGORY_DETAILS\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailsToggle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        homePage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONSTANTS.CATEGORY_HOME\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/category-widget/category-widget.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseWrapperComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseWrapperComponent:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { DiscussionService } from '../../services/discussion.service';\nimport * as _ from 'lodash'\nimport { NavigationServiceService } from '../../navigation-service.service';\nimport * as CONSTANTS from '../../common/constants.json';\nimport { EventsService } from '../../events.service';\nimport { BaseWrapperComponent } from '../base-wrapper/base-wrapper.component';\nimport { IdiscussionConfig } from '../../models/discussion-config.model';\n@Component({\n  selector: 'sb-category-widget',\n  templateUrl: './category-widget.component.html',\n  styleUrls: ['./category-widget.component.css']\n})\nexport class CategoryWidgetComponent extends BaseWrapperComponent {\n\n  detailsToggle = true;\n  category = CONSTANTS.CATEGORY;\n  detailsPage = CONSTANTS.CATEGORY_DETAILS\n  homePage = CONSTANTS.CATEGORY_HOME\n  tid: number \n  slug: string \n  context: IdiscussionConfig\n\n  constructor(configSvc: ConfigService, discussionService: DiscussionService, navigationServiceService: NavigationServiceService, eventService: EventsService) {\n    super(navigationServiceService, eventService, configSvc, discussionService)\n  }\n\n\n  wrapperInit() {\n    this.state = this.detailsPage;\n  }\n\n  stateChange(event) {\n    this.state = event.action\n    if (event.action === this.detailsPage) {\n      this.tid = event.tid\n      this.slug = event.title\n    }\n  }\n\n  protected wrapperEventListener(data) {\n  }\n\n}\n\n    \n\n    \n        \n    \n     -->\n     -->\n    \n\n    \n\n    \n                \n                    ./category-widget.component.css\n                \n                .widget-container {\n    display: flex;\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         -->     -->    '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_ComponentsModule_imports\n\n\n\ncluster_ComponentsModule_providers\n\n\n\n\nDiscussAllComponent\n\nDiscussAllComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nDiscussAllComponent->ComponentsModule\n\n\n\n\n\nDiscussCategoryComponent\n\nDiscussCategoryComponent\n\nComponentsModule -->\n\nDiscussCategoryComponent->ComponentsModule\n\n\n\n\n\nDiscussHomeComponent\n\nDiscussHomeComponent\n\nComponentsModule -->\n\nDiscussHomeComponent->ComponentsModule\n\n\n\n\n\nDiscussStartComponent\n\nDiscussStartComponent\n\nComponentsModule -->\n\nDiscussStartComponent->ComponentsModule\n\n\n\n\n\nDiscussTagsComponent\n\nDiscussTagsComponent\n\nComponentsModule -->\n\nDiscussTagsComponent->ComponentsModule\n\n\n\n\n\nDiscussionDetailsComponent\n\nDiscussionDetailsComponent\n\nComponentsModule -->\n\nDiscussionDetailsComponent->ComponentsModule\n\n\n\n\n\nMyDiscussionComponent\n\nMyDiscussionComponent\n\nComponentsModule -->\n\nMyDiscussionComponent->ComponentsModule\n\n\n\n\n\nSidePannelComponent\n\nSidePannelComponent\n\nComponentsModule -->\n\nSidePannelComponent->ComponentsModule\n\n\n\n\n\nTagAllDiscussionComponent\n\nTagAllDiscussionComponent\n\nComponentsModule -->\n\nTagAllDiscussionComponent->ComponentsModule\n\n\n\n\n\nTrendingTagsComponent\n\nTrendingTagsComponent\n\nComponentsModule -->\n\nTrendingTagsComponent->ComponentsModule\n\n\n\n\n\nDiscussAllComponent \n\nDiscussAllComponent \n\nDiscussAllComponent  -->\n\nComponentsModule->DiscussAllComponent \n\n\n\n\n\nDiscussCategoryComponent \n\nDiscussCategoryComponent \n\nDiscussCategoryComponent  -->\n\nComponentsModule->DiscussCategoryComponent \n\n\n\n\n\nDiscussHomeComponent \n\nDiscussHomeComponent \n\nDiscussHomeComponent  -->\n\nComponentsModule->DiscussHomeComponent \n\n\n\n\n\nDiscussStartComponent \n\nDiscussStartComponent \n\nDiscussStartComponent  -->\n\nComponentsModule->DiscussStartComponent \n\n\n\n\n\nDiscussTagsComponent \n\nDiscussTagsComponent \n\nDiscussTagsComponent  -->\n\nComponentsModule->DiscussTagsComponent \n\n\n\n\n\nDiscussionDetailsComponent \n\nDiscussionDetailsComponent \n\nDiscussionDetailsComponent  -->\n\nComponentsModule->DiscussionDetailsComponent \n\n\n\n\n\nMyDiscussionComponent \n\nMyDiscussionComponent \n\nMyDiscussionComponent  -->\n\nComponentsModule->MyDiscussionComponent \n\n\n\n\n\nSidePannelComponent \n\nSidePannelComponent \n\nSidePannelComponent  -->\n\nComponentsModule->SidePannelComponent \n\n\n\n\n\nTagAllDiscussionComponent \n\nTagAllDiscussionComponent \n\nTagAllDiscussionComponent  -->\n\nComponentsModule->TagAllDiscussionComponent \n\n\n\n\n\nTrendingTagsComponent \n\nTrendingTagsComponent \n\nTrendingTagsComponent  -->\n\nComponentsModule->TrendingTagsComponent \n\n\n\n\n\nElementsModule\n\nElementsModule\n\nComponentsModule -->\n\nElementsModule->ComponentsModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nComponentsModule -->\n\nConfigService->ComponentsModule\n\n\n\n\n\nDiscussionService\n\nDiscussionService\n\nComponentsModule -->\n\nDiscussionService->ComponentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiscussAllComponent\n                        \n                        \n                            DiscussCategoryComponent\n                        \n                        \n                            DiscussHomeComponent\n                        \n                        \n                            DiscussStartComponent\n                        \n                        \n                            DiscussTagsComponent\n                        \n                        \n                            DiscussionDetailsComponent\n                        \n                        \n                            MyDiscussionComponent\n                        \n                        \n                            SidePannelComponent\n                        \n                        \n                            TagAllDiscussionComponent\n                        \n                        \n                            TrendingTagsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                        \n                            DiscussionService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ElementsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DiscussAllComponent\n                        \n                        \n                            DiscussCategoryComponent\n                        \n                        \n                            DiscussHomeComponent\n                        \n                        \n                            DiscussStartComponent\n                        \n                        \n                            DiscussTagsComponent\n                        \n                        \n                            DiscussionDetailsComponent\n                        \n                        \n                            MyDiscussionComponent\n                        \n                        \n                            SidePannelComponent\n                        \n                        \n                            TagAllDiscussionComponent\n                        \n                        \n                            TrendingTagsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PipesModule } from './../pipes/pipes.module';\nimport { DiscussionService } from './../services/discussion.service';\nimport { ConfigService } from './../services/config.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ElementsModule } from './../elements/elements.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidePannelComponent } from './side-pannel/side-pannel.component';\nimport { DiscussHomeComponent } from './discuss-home/discuss-home.component';\nimport { DiscussCategoryComponent } from './discuss-category/discuss-category.component';\nimport { DiscussTagsComponent } from './discuss-tags/discuss-tags.component';\nimport { MyDiscussionComponent } from './my-discussion/my-discussion.component';\nimport { DiscussionDetailsComponent } from './discussion-details/discussion-details.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DiscussStartComponent } from './discuss-start/discuss-start.component';\nimport { TagInputModule } from 'ngx-chips';\nimport { DiscussAllComponent } from './discuss-all/discuss-all.component';\nimport { TagAllDiscussionComponent } from './tag-all-discussion/tag-all-discussion.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { TrendingTagsComponent } from './trending-tags/trending-tags.component';\n@NgModule({\n  declarations: [\n    SidePannelComponent,\n    DiscussHomeComponent,\n    DiscussCategoryComponent,\n    DiscussTagsComponent,\n    MyDiscussionComponent,\n    DiscussionDetailsComponent,\n    DiscussStartComponent,\n    DiscussAllComponent,\n    TagAllDiscussionComponent,\n    TrendingTagsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ElementsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TagInputModule,\n    PipesModule,\n    InfiniteScrollModule\n  ],\n  exports: [\n    SidePannelComponent,\n    DiscussHomeComponent,\n    DiscussCategoryComponent,\n    DiscussTagsComponent,\n    MyDiscussionComponent,\n    DiscussionDetailsComponent,\n    DiscussStartComponent,\n    // TODO: Add this components\n     DiscussAllComponent,\n    TagAllDiscussionComponent,\n    TrendingTagsComponent,\n  ],\n  providers: [\n    DiscussionService, ConfigService\n  ]\n})\nexport class ComponentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                categoryId\n                            \n                            \n                                    Public\n                                checkContext\n                            \n                            \n                                getContextData\n                            \n                            \n                                getParams\n                            \n                            \n                                hasContextData\n                            \n                            \n                                paramsSubscription\n                            \n                            \n                                    Public\n                                queryParams\n                            \n                            \n                                setCategoryId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBannerOption\n                            \n                            \n                                    Public\n                                getCategories\n                            \n                            \n                                    Public\n                                getCategoryid\n                            \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                getContext\n                            \n                            \n                                    Public\n                                getHeaderOption\n                            \n                            \n                                    Public\n                                getRouterSlug\n                            \n                            \n                                    Public\n                                hasContext\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCategoryid\n                            \n                            \n                                setConfig\n                            \n                            \n                                setConfigFromParams\n                            \n                            \n                                setConfigFromWidgetBaseClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, discussionService: DiscussionService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/config.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBannerOption\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBannerOption()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCategoryid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryid()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IdiscussionConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getContext\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContext()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHeaderOption\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeaderOption()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRouterSlug\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouterSlug()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hasContext\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasContext()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCategoryid\n                        \n                    \n                \n            \n            \n                \nsetCategoryid(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(activatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfigFromParams\n                        \n                    \n                \n            \n            \n                \nsetConfigFromParams(activatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfigFromWidgetBaseClass\n                        \n                    \n                \n            \n            \n                \nsetConfigFromWidgetBaseClass(config)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/config.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContextData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasContextData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParams\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/services/config.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DiscussionService } from './discussion.service';\nimport { Injectable, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport * as _ from 'lodash'\nimport { IdiscussionConfig } from '../models/discussion-config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService implements OnInit {\n\n  paramsSubscription: Subscription;\n  private _config: IdiscussionConfig;\n  public checkContext: boolean;\n  public queryParams;\n  getContextData: any;\n  hasContextData: any;\n  getParams: IdiscussionConfig;\n  setCategoryId = new ReplaySubject(1)\n  categoryId: string\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    private discussionService: DiscussionService,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  setConfig(activatedRoute) {\n    activatedRoute.data.subscribe((config) => {\n    this._config = config.data;\n    });\n  }\n\n  setConfigFromParams(activatedRoute) {\n    activatedRoute.queryParams.subscribe((params) => {\n      const obj: IdiscussionConfig = {\n        userId : _.get(params, 'userId'),\n        categories : JSON.parse(_.get(params, 'categories'))\n      };\n      this._config = obj;\n    });\n  }\n\n  setConfigFromWidgetBaseClass(config){\n    this._config = config\n  }\n\n  public getConfig() {\n    return this._config;\n  }\n\n  public getCategories() {\n    this.getParams = this.getConfig()\n    return _.get(this.getParams, 'categories')\n  }\n\n  public hasContext() {\n    this.hasContextData = this.getCategories() ?\n      (this.getCategories().result ? this.getCategories().result.length : null)\n      : null\n    return this.hasContextData\n  }\n\n  public getContext() {\n    this.getContextData = this.getCategories() ?\n      (this.getCategories().result ? this.getCategories().result : null)\n      : null\n    return this.getContextData\n  }\n\n  setCategoryid(id) {\n    this.categoryId = id\n    this.setCategoryId.next(id)\n  }\n\n\n  public getHeaderOption() {\n    return this._config.headerOptions !== undefined ? this._config.headerOptions : true;\n  }\n\n  public getBannerOption() {\n    return this._config.bannerOption ? this._config.bannerOption : false;\n  }\n\n  public getCategoryid() {\n    return this.categoryId\n  }\n\n  public getRouterSlug() {\n    return this._config.routerSlug ? this._config.routerSlug : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiscussCardComponent.html":{"url":"components/DiscussCardComponent.html","title":"component - DiscussCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiscussCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/discuss-card/discuss-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-discuss-card\n            \n\n\n\n            \n                styleUrls\n                ./discuss-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./discuss-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBgColor\n                            \n                            \n                                getContrast\n                            \n                            \n                                IsSingleComent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stringToColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                discussionData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/discuss-card/discuss-card.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        discussionData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/discuss-card/discuss-card.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBgColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBgColor(tagTitle: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/discuss-card/discuss-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagTitle\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { color: string; 'background-color': string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContrast\n                        \n                    \n                \n            \n            \n                \ngetContrast()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/discuss-card/discuss-card.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsSingleComent\n                        \n                    \n                \n            \n            \n                \nIsSingleComent(postCount)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/discuss-card/discuss-card.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postCount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/discuss-card/discuss-card.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(title)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/discuss-card/discuss-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-discuss-card',\n  templateUrl: './discuss-card.component.html',\n  styleUrls: ['./discuss-card.component.scss']\n})\nexport class DiscussCardComponent implements OnInit {\n\n  @Input() discussionData: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log('discussionData', this.discussionData);\n  }\n\n  public getBgColor(tagTitle: any) {\n    const bgColor = this.stringToColor(tagTitle.toLowerCase());\n    const color = this.getContrast();\n    return { color, 'background-color': bgColor };\n  }\n\n  stringToColor(title) {\n    let hash = 0;\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n  \n  \n       -->\n        \n        \n        \n       -->\n\n    \n    \n      \n        \n          \n          {{discussionData.category.name}}\n        \n        \n          \n          {{discussionData?.user?.username}}\n          {{'Anonymous'}}\n        \n      \n\n      {{discussionData.lastposttime | date}}\n      {{discussionData.timestamp | pipeRelativeTime}} -->\n    \n    \n  \n  \n\n  \n  \n     0\">\n      \n        {{tag.value}}\n      \n    \n  \n  \n\n  \n  \n    \n      \n        import_export -->\n        \n        {{(discussionData.upvotes + discussionData.downvotes) || 0 }} Votes\n      \n      \n        trending_up -->\n        \n        {{discussionData.viewcount || 0}} Views\n      \n    \n    {{((discussionData.postcount || 1) -1) }}\n        comments\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./discuss-card.component.scss\n                \n                .discuss-card-content {\n  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14),\n    0 1px 3px 0 rgba(0, 0, 0, 0.12);\n  background: var(--df-card-bg);\n  color: var(--df-text);\n  flex: 1;\n  height: auto;\n  margin-bottom: 1rem;\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: block;\n  position: relative;\n  padding: 1rem;\n  border-radius: 0.25rem;\n  word-break: break-all;\n  cursor: pointer;\n  width: auto;\n\n  .discuss-card-title {\n    margin: 0px;\n    color: var(--df-text);\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 700;\n    word-break: break-word;\n  }\n\n  .discuss-card-subtitle {\n    margin: 8px 0 0;\n    font-size: 0.875rem;\n    display: flex;\n    align-items: center;\n    @media screen and (max-width: 768px) {\n      align-items: flex-start;\n    }\n    .card-label-container {\n      display: flex;\n      align-items: center;\n      @media screen and (max-width: 768px) {\n        margin-right: auto;\n        flex-wrap: wrap;\n      }\n      .discuss-card-label {\n        color: var(--primary);\n        display: flex;\n        align-items: center;\n\n        img {\n          margin-right: 0.25rem;\n        }\n        @media screen and (max-width: 768px) {\n          flex-basis: 100%;\n        }\n      }\n      .dot{\n        height: 0.375rem;\n        width: 0.375rem;\n        background-color: var(--gray-400);\n        border-radius: 50%;\n        display: inline-block;\n        margin: 0 0.5rem;\n        position: relative;\n        bottom: 0.0625rem;\n      }\n      .discuss-user-label {\n        word-break: break-word;\n      }\n    }\n\n    .timing {\n      margin: 0 0.5rem;\n      @media screen and (max-width: 768px) {\n        flex: 0 0 auto;\n      }\n    }\n  }\n\n  .discuss-card-comments {\n    display: flex;\n    justify-content: space-between;\n    font-size: 0.875rem;\n    flex-wrap: wrap;\n    font-weight: 700;\n    align-items: center;\n    padding-top: 0.5rem;\n\n    .comments-content{\n      display: flex;\n      .votes-content,\n      .views-content {\n        display: flex;\n        align-items: center;\n        font-size: 0.875rem;\n        span {\n          margin: 0 0.5rem;\n        }\n      }\n  \n      .views-content {\n        margin-left: 1.5rem;\n      }\n  \n      .votes-content img,\n      .views-content img {\n        height: 1rem;\n        width: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .comments-count {\n      color: var(--primary);\n      font-weight: 700;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->                               -->                                          {{discussionData.category.name}}                                    {{discussionData?.user?.username}}          {{\\'Anonymous\\'}}                    {{discussionData.lastposttime | date}}      {{discussionData.timestamp | pipeRelativeTime}} -->                     0\">              {{tag.value}}                                    import_export -->                {{(discussionData.upvotes + discussionData.downvotes) || 0 }} Votes                    trending_up -->                {{discussionData.viewcount || 0}} Views              {{((discussionData.postcount || 1) -1) }}        comments        '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiscussCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiscussCategoryComponent.html":{"url":"components/DiscussCategoryComponent.html","title":"component - DiscussCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiscussCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/discuss-category/discuss-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-discuss-category\n            \n\n\n\n            \n                styleUrls\n                ./discuss-category.component.css\n            \n\n\n\n            \n                templateUrl\n                ./discuss-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                categories\n                            \n                            \n                                categoryId\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                discussService\n                            \n                            \n                                forumIds\n                            \n                            \n                                isTopicCreator\n                            \n                            \n                                pageId\n                            \n                            \n                                paramsSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showLoader\n                            \n                            \n                                showStartDiscussionModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                fetchAllAvailableCategories\n                            \n                            \n                                fetchAllCategories\n                            \n                            \n                                fetchCategory\n                            \n                            \n                                logTelemetry\n                            \n                            \n                                navigateToDiscussionPage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                startDiscussion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryAction\n                            \n                            \n                                categoryIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(discussService: DiscussionService, configService: ConfigService, router: Router, activatedRoute: ActivatedRoute, telemetryUtils: TelemetryUtilsService, navigationService: NavigationServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discussService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryAction\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        categoryIds\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllAvailableCategories\n                        \n                    \n                \n            \n            \n                \nfetchAllAvailableCategories(ids)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllCategories\n                        \n                    \n                \n            \n            \n                \nfetchAllCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchCategory\n                        \n                    \n                \n            \n            \n                \nfetchCategory(cid)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logTelemetry\n                        \n                    \n                \n            \n            \n                \nlogTelemetry(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToDiscussionPage\n                        \n                    \n                \n            \n            \n                \nnavigateToDiscussionPage(cid, slug?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:110\n                \n            \n\n\n            \n                \n                    It will fetch the children for each category click.\nif there is no children available the it will redirect to the topic list page\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cid\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDiscussion\n                        \n                    \n                \n            \n            \n                \nstartDiscussion()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-category/discuss-category.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NSDiscussData.ICategorie[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discussService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscussionService\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forumIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTopicCreator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showStartDiscussionModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-category/discuss-category.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { DiscussionService, CONTEXT_PROPS } from '../../services/discussion.service';\nimport { NSDiscussData } from './../../models/discuss.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\n\nimport * as CONSTANTS from './../../common/constants.json';\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { ConfigService } from '../../services/config.service';\nimport { NavigationServiceService } from '../../navigation-service.service';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-discuss-category',\n  templateUrl: './discuss-category.component.html',\n  styleUrls: ['./discuss-category.component.css']\n})\nexport class DiscussCategoryComponent implements OnInit, OnDestroy {\n\n  categories: NSDiscussData.ICategorie[] = [];\n\n  forumIds: any;\n  @Input() categoryIds;\n  @Input() categoryAction;\n  @Output() stateChange: EventEmitter = new EventEmitter();\n\n  pageId = 0;\n\n  isTopicCreator = false;\n\n  showStartDiscussionModal = false;\n\n  categoryId: any;\n\n  paramsSubscription: Subscription;\n\n  showLoader = false;\n\n  constructor(\n    public discussService: DiscussionService,\n    public configService: ConfigService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private telemetryUtils: TelemetryUtilsService,\n    private navigationService: NavigationServiceService\n  ) { }\n\n  ngOnInit() {\n    /** It will look for the queryParams, if back button is clicked,\n     * the queryParams will change and it will fetch the categories\n     * if there is no queryParams available, then it will fetch the default categories of the forumIds\n     */\n    this.telemetryUtils.setContext([]);\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.CATEGORY);\n    this.forumIds = this.categoryIds ? this.categoryIds : this.discussService.forumIds;\n    this.paramsSubscription = this.activatedRoute.queryParams.subscribe((params) => {\n      if (_.get(params, 'cid')) {\n        this.navigateToDiscussionPage(_.get(params, 'cid'));\n      } else {\n        this.categories = [];\n        if (this.forumIds.length) {\n          this.fetchAllAvailableCategories(this.forumIds);\n        } else {\n          this.fetchAllCategories();\n        }\n      }\n    });\n  }\n\n  fetchAllAvailableCategories(ids) {\n    this.showLoader = true;\n    ids.forEach((cid) => {\n      this.fetchCategory(cid).subscribe(data => {\n        this.showLoader = false;\n        this.categories.push(data);\n      }, error => {\n        // TODO: Toast error\n        // error code check\n        this.discussService.showTrafficAlert(error);\n        console.log('issue fetching category', error);\n        this.showLoader = false;\n      });\n    });\n  }\n\n  fetchAllCategories() {\n    this.showLoader = true;\n    this.discussService.fetchAllCategories().subscribe(data => {\n      this.showLoader = false;\n      this.categories = data\n    }, error => {\n      // TODO: Toast error\n      // error code check\n      this.discussService.showTrafficAlert(error);\n      console.log('issue fetching category', error);\n      this.showLoader = false;\n    });\n  }\n\n  fetchCategory(cid) {\n    return this.discussService.fetchSingleCategoryDetails(cid);\n  }\n\n  /**\n   * It will fetch the children for each category click.\n   * if there is no children available the it will redirect to the topic list page\n   */\n  navigateToDiscussionPage(cid, slug?) {\n    this.showLoader = true;\n    this.telemetryUtils.uppendContext({ id: cid, type: 'Category' });\n    this.discussService.fetchSingleCategoryDetails(cid).subscribe(response => {\n      this.showLoader = false;\n      this.categoryId = _.get(response, 'cid');\n      this.isTopicCreator = _.get(response, 'privileges.topics:create') === true ? true : false;\n      this.showStartDiscussionModal = false;\n      let input\n      if (_.get(response, 'children').length > 0) {\n        this.router.navigate([], { relativeTo: this.activatedRoute.parent, queryParams: { cid: this.categoryId } });\n\n        // input = { data: { url: '', queryParams: { cid: this.categoryId } }, action: this.categoryAction}\n        // this.navigationService.navigate(input)\n\n        _.get(response, 'children').forEach(subCategoryData => {\n          this.categories.push(subCategoryData);\n        });\n      } else {\n        this.discussService.setContext(CONTEXT_PROPS.cid, this.categoryId);\n        this.configService.setCategoryid(this.categoryId)\n\n        let routerSlug = this.configService.getConfig().routerSlug ? this.configService.getConfig().routerSlug : ''\n        input = { data: { url: `${routerSlug}${CONSTANTS.ROUTES.CATEGORY}${this.categoryId}`, queryParams: {} }, action: CONSTANTS.CATEGORY_HOME, }\n        this.navigationService.navigate(input)\n        this.stateChange.emit({ action: this.categoryAction, categoryId: this.categoryId })\n      }\n    }, error => {\n      // error code check\n      this.discussService.showTrafficAlert(error);\n      this.showLoader = false;\n      // TODO: Toast error\n      console.log('issue fetching category', error);\n    });\n  }\n\n  startDiscussion() {\n    this.showStartDiscussionModal = true;\n  }\n\n  closeModal(event) {\n    this.showStartDiscussionModal = false;\n  }\n\n  logTelemetry(event) {\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.CATEGORY);\n  };\n\n  ngOnDestroy() {\n    if (this.paramsSubscription) {\n      this.paramsSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n Start Discussion -->\n  \n    \n      \n      \n      \n    \n  \n\n  \n\n    \n\n    \n                \n                    ./discuss-category.component.css\n                \n                .discuss-category-cards{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(292px, 1fr));\n    grid-gap: 1.5rem;\n    margin-bottom: 1.5rem;\n    cursor: pointer;\n    position: relative;\n    z-index: unset;\n}\n\n@media (max-width: 700px) {\n.discuss-category-cards {\n    grid-template-columns: 1fr;\n } \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Start Discussion -->                                '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiscussCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiscussHomeComponent.html":{"url":"components/DiscussHomeComponent.html","title":"component - DiscussHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiscussHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/discuss-home/discuss-home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-discuss-home\n            \n\n\n\n            \n                styleUrls\n                ./discuss-home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./discuss-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentActivePage\n                            \n                            \n                                currentPage\n                            \n                            \n                                discussionList\n                            \n                            \n                                    \n                                elementView\n                            \n                            \n                                InfiniteScrollConfig\n                            \n                            \n                                isTopicCreator\n                            \n                            \n                                modalScrollDistance\n                            \n                            \n                                modalScrollThrottle\n                            \n                            \n                                pageSize\n                            \n                            \n                                pagination\n                            \n                            \n                                routeParams\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                scrollUpDistance\n                            \n                            \n                                showLoader\n                            \n                            \n                                showStartDiscussionModal\n                            \n                            \n                                title\n                            \n                            \n                                totalTopics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getDiscussionList\n                            \n                            \n                                logTelemetry\n                            \n                            \n                                navigateToDiscussionDetails\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onModalScrollDown\n                            \n                            \n                                startDiscussion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryHomeAction\n                            \n                            \n                                categoryId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, discussionService: DiscussionService, configService: ConfigService, telemetryUtils: TelemetryUtilsService, navigationService: NavigationServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryHomeAction\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        categoryId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiscussionList\n                        \n                    \n                \n            \n            \n                \ngetDiscussionList(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logTelemetry\n                        \n                    \n                \n            \n            \n                \nlogTelemetry(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToDiscussionDetails\n                        \n                    \n                \n            \n            \n                \nnavigateToDiscussionDetails(discussionData)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    discussionData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalScrollDown\n                        \n                    \n                \n            \n            \n                \nonModalScrollDown()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDiscussion\n                        \n                    \n                \n            \n            \n                \nstartDiscussion()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-home/discuss-home.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentActivePage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discussionList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('scrollContainerHeight')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InfiniteScrollConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    modalScrollDistance: 2,\n    modalScrollThrottle: 50\n  }\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTopicCreator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalScrollDistance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -12\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalScrollThrottle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.create({})\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollUpDistance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showStartDiscussionModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTopics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-home/discuss-home.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CONTEXT_PROPS } from './../../services/discussion.service';\nimport { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DiscussionService } from '../../services/discussion.service';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport * as CONSTANTS from './../../common/constants.json';\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { NSDiscussData } from '../../models/discuss.model';\nimport { ConfigService } from '../../services/config.service';\nimport { NavigationServiceService } from '../../navigation-service.service';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-discuss-home',\n  templateUrl: './discuss-home.component.html',\n  styleUrls: ['./discuss-home.component.css']\n})\nexport class DiscussHomeComponent implements OnInit {\n  @Input() categoryId;\n  @Input() categoryHomeAction;\n  @Output() stateChange: EventEmitter = new EventEmitter();\n\n  @ViewChild('scrollContainerHeight') elementView: ElementRef;\n  discussionList = [];\n  routeParams: any;\n  showStartDiscussionModal = false;\n  // categoryId: string;\n  isTopicCreator = false;\n  showLoader = false;\n  currentActivePage: number = 1;\n  pagination = Object.create({});\n\n  // Input parameters for infinite scroll\n  InfiniteScrollConfig = {\n    modalScrollDistance: 2,\n    modalScrollThrottle: 50\n  };\n\n  // Input parameters for infinite scroll\n  modalScrollDistance = -12;\n  modalScrollThrottle = 500;\n  scrollUpDistance = 5;\n\n  currentPage = 0;\n  pageSize: number;\n  totalTopics: number;\n  title: any;\n\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    private discussionService: DiscussionService,\n    private configService: ConfigService,\n    private telemetryUtils: TelemetryUtilsService,\n    private navigationService: NavigationServiceService) { }\n\n  ngOnInit() {\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.HOME);\n    this.route.params.subscribe(params => {\n      this.configService.setCategoryId.subscribe((categoryIds: string) => {\n        this.routeParams = categoryIds;\n        // categoryIds = this.discussionService.getContext(CONTEXT_PROPS.cid)\n        categoryIds = this.categoryId ? this.categoryId : categoryIds\n        this.getDiscussionList(categoryIds);\n      })\n      this.routeParams = params;\n      this.categoryId = this.discussionService.getContext(CONTEXT_PROPS.cid);\n      // this.getDiscussionList(_.get(this.routeParams, 'slug'));\n    });\n  }\n\n  /**\n  * @description - set the scroll container height\n  */\n  ngAfterViewChecked() {\n    if (this.elementView && this.elementView.nativeElement && !this.elementView.nativeElement.style.height) {\n      // the number 10 is just a random value to reduce the height of the parent container to the infinite scroll\n      this.elementView.nativeElement.style.height = (this.elementView.nativeElement.clientHeight - 10) + 'px';\n    }\n  }\n\n  navigateToDiscussionDetails(discussionData) {\n    const matchedTopic = _.find(this.telemetryUtils.getContext(), { type: 'Topic' });\n    if (matchedTopic) {\n      this.telemetryUtils.deleteContext(matchedTopic);\n    }\n\n    this.telemetryUtils.uppendContext({\n      id: _.get(discussionData, 'tid'),\n      type: 'Topic'\n    });\n    let routerSlug = this.configService.getConfig().routerSlug ? this.configService.getConfig().routerSlug : ''\n    let input = { data: { url: `${routerSlug}${CONSTANTS.ROUTES.TOPIC}${_.trim(_.get(discussionData, 'slug'))}`, queryParams: {}, tid: discussionData.tid, title: discussionData.title }, action: CONSTANTS.CATEGORY_DETAILS }\n    this.navigationService.navigate(input)\n    this.stateChange.emit({ tid: discussionData.tid, title: discussionData.title, action: this.categoryHomeAction })\n  }\n  /**\n   * @description - To get all the topics\n   * @param - required cid as a slug\n   */\n  getDiscussionList(slug: string) {\n    this.showLoader = true;\n    const scrollIndex = this.pagination.currentPage ? this.pagination.currentPage : 1;\n    this.discussionService.getContextBasedTopic(slug, scrollIndex).subscribe(data => {\n      this.pagination = data.pagination;\n      this.showLoader = false;\n      this.isTopicCreator = _.get(data, 'privileges.topics:create') === true ? true : false;\n      this.discussionList = [...this.discussionList, ...(_.union(_.get(data, 'topics'), _.get(data, 'children')))];\n    }, error => {\n      this.showLoader = false;\n      // error code check\n      this.discussionService.showTrafficAlert(error);\n      // TODO: Toaster\n      console.log('error fetching topic list', error);\n    });\n  }\n\n  startDiscussion() {\n    this.showStartDiscussionModal = true;\n  }\n\n  logTelemetry(event) {\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.HOME);\n  }\n\n  closeModal(event) {\n    if (_.get(event, 'message') === 'success') {\n      this.discussionList = [];\n      this.pagination.currentPage = this.pagination.first.page;\n      this.getDiscussionList(_.get(this.routeParams, 'slug'));\n    }\n    this.showStartDiscussionModal = false;\n  }\n\n  /**\n   * @description - call the topic get api when scrolled down\n   */\n  onModalScrollDown() {\n    if (this.pagination.currentPage !== this.pagination.pageCount) {\n      this.pagination.currentPage = this.pagination.next.page;\n      this.getDiscussionList(_.get(this.routeParams, 'slug'));\n    }\n  }\n}\n    \n\n    \n        Start Discussion\n 0\" class=\"topic-list-container\" id=\"topic-scroll\" #scrollContainerHeight>\n    \n        \n            \n        \n    \n\n 0)\">\n    \n        No Data\n        \n            &nbsp;\n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./discuss-home.component.css\n                \n                .df-start-btn{\n    margin-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Start Discussion 0\" class=\"topic-list-container\" id=\"topic-scroll\" #scrollContainerHeight>                                     0)\">            No Data                                 '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiscussHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiscussStartComponent.html":{"url":"components/DiscussStartComponent.html","title":"component - DiscussStartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiscussStartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/discuss-start/discuss-start.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-discuss-start\n            \n\n\n\n            \n                styleUrls\n                ./discuss-start.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./discuss-start.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allCategories\n                            \n                            \n                                allTags\n                            \n                            \n                                cIds\n                            \n                            \n                                createErrorMsg\n                            \n                            \n                                defaultError\n                            \n                            \n                                editable\n                            \n                            \n                                enableSubmitButton\n                            \n                            \n                                postTagsArray\n                            \n                            \n                                showErrorMsg\n                            \n                            \n                                showSelectCategory\n                            \n                            \n                                startForm\n                            \n                            \n                                uploadSaveData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                initializeData\n                            \n                            \n                                initializeFormFields\n                            \n                            \n                                isFieldValid\n                            \n                            \n                                logTelemetry\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showError\n                            \n                            \n                                    Public\n                                submitPost\n                            \n                            \n                                updatePost\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                mode\n                            \n                            \n                                topicData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(discussService: DiscussionService, formBuilder: UntypedFormBuilder, telemetryUtils: TelemetryUtilsService, configService: ConfigService, discussUtils: DiscussUtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discussService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussUtils\n                                                  \n                                                        \n                                                                        DiscussUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        topicData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(eventMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeFormFields\n                        \n                    \n                \n            \n            \n                \ninitializeFormFields(topicData)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    topicData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldValid\n                        \n                    \n                \n            \n            \n                \nisFieldValid(field)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logTelemetry\n                        \n                    \n                \n            \n            \n                \nlogTelemetry(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(meta: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meta\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitPost\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitPost(form: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePost\n                        \n                    \n                \n            \n            \n                \nupdatePost(form: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:187\n                \n            \n\n\n            \n                \n                               Here, as 'tid', we are passing the main topic pid from the post array\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n            \n                \nvalidateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-start/discuss-start.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NSDiscussData.ICategorie[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NSDiscussData.ITag[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Something went wrong, Please try again after sometime!'\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableSubmitButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postTagsArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showErrorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSelectCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadSaveData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-start/discuss-start.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { DiscussionService } from './../../services/discussion.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NSDiscussData } from './../../models/discuss.model';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { DiscussUtilsService } from '../../services/discuss-utils.service';\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { ConfigService } from '../../services/config.service';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-discuss-start',\n  templateUrl: './discuss-start.component.html',\n  styleUrls: ['./discuss-start.component.scss']\n})\nexport class DiscussStartComponent implements OnInit {\n  @Input() categoryId: string;\n  @Input() topicData: any;\n  @Input() mode: string;\n  @Output() close = new EventEmitter();\n\n  startForm!: UntypedFormGroup;\n  editable = true;\n  allCategories!: NSDiscussData.ICategorie[];\n  allTags!: NSDiscussData.ITag[];\n  postTagsArray: string[] = [];\n  uploadSaveData = false;\n  showErrorMsg = false;\n  showSelectCategory = false;\n  createErrorMsg = '';\n  defaultError = 'Something went wrong, Please try again after sometime!';\n\n  enableSubmitButton = false;\n  cIds: any;\n\n  constructor(\n    private discussService: DiscussionService,\n    private formBuilder: UntypedFormBuilder,\n    private telemetryUtils: TelemetryUtilsService,\n    private configService: ConfigService,\n    private discussUtils: DiscussUtilsService\n  ) { }\n\n  ngOnInit() {\n    (document.querySelector('[tabindex=\"-1\"]') as HTMLElement).focus();\n    // debugger\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.START);\n    this.cIds = this.configService.getCategories()\n    if (this.categoryId) {\n      this.showSelectCategory = false;\n    } else {\n    this.showSelectCategory = true;\n    }\n\n    this.initializeData();\n    this.initializeFormFields(this.topicData);\n  }\n\n  initializeFormFields(topicData) {\n    this.startForm = this.formBuilder.group({\n      question: [null, [Validators.required, Validators.minLength(8)]],\n      description: [null, [Validators.required, Validators.minLength(8)]],\n      tags: [],\n      category: []\n    });\n    this.startForm.valueChanges.subscribe(val => {\n      this.validateForm();\n    });\n\n    /** If popup is in edit mode */\n    if (topicData) {\n      const tags = _.map(_.get(topicData, 'tags'), (element) => {\n        return _.get(element, 'value');\n      });\n\n      /** calling htmlDecode method to get the parsed string */\n      this.startForm.controls['question'].setValue(this.discussUtils.htmlDecode(_.get(topicData, 'title')));\n      this.startForm.controls['description'].setValue(_.get(topicData, 'posts[0].content').replace(/]+>/g, ''));\n      this.startForm.controls['tags'].setValue(tags);\n      this.validateForm();\n    }\n  }\n\n  isFieldValid(field) {\n    let valueNoWhiteSpace = this.startForm.get(field).value;\n    if (valueNoWhiteSpace) {\n      const index = valueNoWhiteSpace.length;\n      if (index >= 2 && valueNoWhiteSpace.charAt(index - 2) === \" \") {\n        this.startForm.patchValue({ replyContent: this.startForm.get(field).value.trim() });\n      } else {\n        this.startForm.patchValue({ replyContent: this.startForm.get(field).value.trimStart() })\n      }\n    }\n    return (!this.startForm.get(field).valid && this.startForm.get(field).dirty);\n  }\n\n  validateForm() {\n    if (this.startForm.status === 'VALID') {\n      this.enableSubmitButton = true;\n    } else {\n      this.enableSubmitButton = false;\n    }\n  }\n\n  initializeData() {\n    // debugger\n    if (this.configService.hasContext() && !this.categoryId) {\n      const req = {\n        cids: this.cIds.result\n      };\n\n      this.discussService.getContextBasedDiscussion(req).subscribe((data: any) => {\n        this.allCategories = data.result;\n        if (this.startForm.get('category')) { }\n        this.startForm.controls['category'].setValue(this.allCategories[0].cid)\n      });\n    } else if (this.categoryId) {\n      const req = {\n        cids: [this.categoryId]\n      };\n      this.showSelectCategory = false;\n      this.editable = false;\n      this.discussService.getContextBasedDiscussion(req).subscribe((data: any) => {\n        this.allCategories = data.result;\n        if (this.startForm.get('category')) { }\n        this.startForm.controls.category.setValue(this.allCategories[0].cid);\n      });\n    } else {\n      this.discussService.fetchAllCategories().subscribe((data: any) => {\n        this.allCategories = data\n        if (this.startForm.get('category')) { }\n        this.startForm.controls['category'].setValue(this.allCategories[1].cid)\n      });\n    }\n\n    this.discussService.fetchAllTag().subscribe(data => {\n      const tags = _.get(data, 'tags');\n      this.allTags = _.map(tags, (tag) => tag.value);\n    });\n  }\n  showError(meta: string) {\n    if (meta) {\n      return true;\n    }\n    return false;\n  }\n\n  public submitPost(form: any) {\n    this.uploadSaveData = true;\n    this.showErrorMsg = false;\n    const postCreateReq = {\n      cid: this.categoryId ? this.categoryId : parseInt(form.value.category),\n      title: form.value.question,\n      content: form.value.description,\n      tags: form.value.tags,\n    };\n    this.discussService.createPost(postCreateReq).subscribe(\n      () => {\n        this.closeModal('success');\n        form.reset();\n        this.uploadSaveData = false;\n        // success toast;\n        // this.openSnackbar(this.toastSuccess.nativeElement.value)\n        // close the modal\n      },\n      err => {\n        this.closeModal('discard');\n        // error toast\n        // .openSnackbar(this.toastError.nativeElement.value)\n        this.uploadSaveData = false;\n        if (err) {\n          if (err.error && err.error.message) {\n            this.showErrorMsg = true;\n            this.createErrorMsg = err.error.message.split('|')[1] || this.defaultError;\n          }\n        }\n      });\n  }\n\n\n  /**\n   * @param  {any} form\n   * @description - It will emit an event when popup is opened in edit topic/thread mode\n   *                Here, as 'tid', we are passing the main topic pid from the post array\n   */\n  updatePost(form: any) {\n    const updateTopicRequest = {\n      title: form.value.question,\n      content: form.value.description,\n      tags: form.value.tags,\n      uid: _.get(this.topicData, 'uid')\n    };\n    this.close.emit({\n      action: 'update',\n      tid: _.get(this.topicData, 'posts[0].pid'),\n      request: updateTopicRequest\n    });\n  }\n\n  closeModal(eventMessage: string) {\n    this.close.emit({ message: eventMessage });\n  }\n\n  logTelemetry(event) {\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.START);\n  }\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n\n        \n          Select category*\n          \n            Select list \n            \n              \n            \n          \n          \n            category is mandatory\n        \n\n        \n          Discussion topic*\n          \n            \n          \n          \n            Question is mandatory. It should be minimum of\n            8 characters\n        \n\n        \n          \n            Please elaborate your question or idea here*\n            \n          \n           Description is mandatory. It should be minimum of\n            8 characters \n        \n\n        \n          Tags\n          \n            {{ tag }}\n          \n          \n          \n          \n        \n\n        \n          \n            {{createErrorMsg}}\n          \n        \n\n        \n          Cancel\n          \n          \n          \n          \n            Submit\n          \n          \n            Update\n          \n        \n        ​\n      \n      ​\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./discuss-start.component.scss\n                \n                ::ng-deep:root {\n  --df-modal-content-bg: var(--df-common-bg);\n  --df-modal-field-control-bg: var(--df-background);\n  --df-tag-bg:var(--df-e9e8d9);\n  --df-ng-tag-bg: var(--df-background);\n}\n\n#myModal{\n  display: block;\n  opacity: 2!important;\n}\n\n.discussion-start-modal {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0,0,0,.8);\n  z-index: 99999;\n  opacity: 1;\n  transition: opacity .1s ease-in;\n  pointer-events: auto;\n\n  .discussion-start-modal-content {\n    max-width: 50rem;\n    width: 90%;\n    position: relative;\n    margin: 0 auto;\n    padding: 1rem;\n    border-radius: 0.1875rem;\n    background: var(--df-modal-content-bg);\n    color: var(--df-text);\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: auto;\n    max-height: calc(100% - 156px);\n\n    .discussion-start-form {\n      .start-form-content {\n        margin-bottom: 0.5rem;\n      }\n\n      .start-form-label {\n        display: inline-block;\n        margin-bottom: 0.5rem;\n        font-size: 0.8125rem;\n        font-weight: 700;\n      }\n\n      .start-form-field {\n        position: relative;\n        margin-bottom: 0;\n\n        .select-category {\n          border: 0.0625rem solid var(--gray-200);\n          color: var(--df-text);\n          margin: 0 0.5rem;\n          padding: 0.5rem 0.25rem;\n          background: var(--df-field-control-bg);\n        }\n\n        .start-form-field-control {\n          background-color: var(--df-modal-field-control-bg);\n          border: 0.0625rem solid var(--gray-200);\n          border-radius: 0.1875rem;\n          color: var(--df-text);\n          display: block;\n          font-size: 0.8125rem;\n          font-family: sans-serif;\n          position: relative;\n          width: 96%;\n          cursor: pointer;\n          outline: none;\n          padding: 0.5rem 0.875rem;\n          &:focus,\n          .active {\n            border-color: var(--primary-400) !important;\n          }\n        }\n      }\n\n      .mandatory-label {\n        font-size: 0.75rem;\n        color: var(--red-100);\n      }\n\n      .start-modal-buttons {\n        float: right;\n\n        .df-submit-btn,\n        .df-update-btn {\n          margin-left: 0.5rem;\n        }\n\n        .df-cancel-btn {\n          box-shadow: 0 2px 1px -1px rgba(0, 0, 0, .2), 0 1px 1px 0 rgba(0, 0, 0, .14), 0 1px 3px 0 rgba(0, 0, 0, .12);\n          border:0;\n          margin: 0 0.5rem;\n        }\n\n        .df-btn-disabled {\n          background-color: var(--gray-100);\n        }\n      }\n\n      .start-tags {\n        margin-bottom: 1.5rem;\n\n        label {\n          display: inline-block;\n          font-size: 0.8125rem;\n          font-weight: 700;\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n}\n\n#myModal {\n  display: block;\n  opacity: 2 !important;\n}\n\n::ng-deep {\n  .ng2-tag-input {\n    border: .0625rem solid var(--gray-200) !important;\n    border-radius: 0.1875rem;\n    color: var(--df-text) !important;\n    display: block;\n    font-size: 0.8125rem !important;\n    max-width: 100%;\n    padding: 0.25rem 0.5rem;\n    margin: 0.5rem 0;\n    background: var(--df-field-control-bg);\n    border-radius: 0.1875rem;\n    border-bottom: .0625rem solid var(--gray-200) !important;\n  }\n\n  .ng2-tag-input--focused {\n    border-color: var(--primary-400) !important;\n  }\n\n  .ng2-tag-input__text-input {\n    height: 2.25rem;\n    margin: 0 0.5rem;\n    color: var(--df-text);\n    background: var(--df-ng-tag-bg);\n  }\n\n  .ng2-tag-input.active {\n    border-color: var(--primary-400) !important;\n  }\n\n   tag {\n    background: var(--df-tag-bg) !important;\n    color: var(--df-text) !important;\n    &:first-child{\n      margin-left: 0.5rem !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Select category*                      Select list                                                                       category is mandatory                          Discussion topic*                                                      Question is mandatory. It should be minimum of            8 characters                                      Please elaborate your question or idea here*                                 Description is mandatory. It should be minimum of            8 characters                           Tags                      {{ tag }}                                                                              {{createErrorMsg}}                                    Cancel                                                    Submit                                Update                          ​            ​                  '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiscussStartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiscussTagsComponent.html":{"url":"components/DiscussTagsComponent.html","title":"component - DiscussTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiscussTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/discuss-tags/discuss-tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-discuss-tags\n            \n\n\n\n            \n                styleUrls\n                ./discuss-tags.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./discuss-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                cIds\n                            \n                            \n                                filteredTags\n                            \n                            \n                                getParams\n                            \n                            \n                                paramsSubscription\n                            \n                            \n                                query\n                            \n                            \n                                queryParam\n                            \n                            \n                                showLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchAllTags\n                            \n                            \n                                getAllDiscussions\n                            \n                            \n                                    Public\n                                getBgColor\n                            \n                            \n                                getContextBasedTags\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(discussionService: DiscussionService, telemetryUtils: TelemetryUtilsService, router: Router, activatedRoute: ActivatedRoute, configService: ConfigService, discussUtils: DiscussUtilsService, navigationService: NavigationServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussUtils\n                                                  \n                                                        \n                                                                        DiscussUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllTags\n                        \n                    \n                \n            \n            \n                \nfetchAllTags()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDiscussions\n                        \n                    \n                \n            \n            \n                \ngetAllDiscussions(tag: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBgColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBgColor(tagTitle: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagTitle\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { color: any; 'background-color': any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContextBasedTags\n                        \n                    \n                \n            \n            \n                \ngetContextBasedTags(cid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NSDiscussData.ITag[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/discuss-tags/discuss-tags.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { DiscussionService } from '../../services/discussion.service';\nimport { NSDiscussData } from '../../models/discuss.model';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ConfigService } from '../../services/config.service';\nimport * as CONSTANTS from './../../common/constants.json';\nimport { DiscussUtilsService } from '../../services/discuss-utils.service';\nimport { NavigationServiceService } from '../../navigation-service.service';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-discuss-tags',\n  templateUrl: './discuss-tags.component.html',\n  styleUrls: ['./discuss-tags.component.scss']\n})\nexport class DiscussTagsComponent implements OnInit {\n\n  @Output() stateChange: EventEmitter = new EventEmitter();\n  query: string;\n  filteredTags: NSDiscussData.ITag[];\n  showLoader = false;\n  queryParam: any;\n  paramsSubscription: Subscription;\n  getParams: any;\n  cIds: any;\n  constructor(\n    private discussionService: DiscussionService,\n    private telemetryUtils: TelemetryUtilsService,\n    private router: Router,\n    public activatedRoute: ActivatedRoute,\n    private configService: ConfigService,\n    private discussUtils: DiscussUtilsService,\n    private navigationService: NavigationServiceService\n  ) { }\n\n  ngOnInit() {\n    this.telemetryUtils.setContext([]);\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.TAGS);\n\n    this.cIds = this.configService.getCategories()\n    if (this.configService.hasContext()) {\n      this.getContextBasedTags(this.cIds.result)\n    } else {\n      this.fetchAllTags();\n    }\n\n  }\n\n  fetchAllTags() {\n    this.showLoader = true;\n    this.discussionService.fetchAllTag().subscribe(data => {\n      this.showLoader = false;\n      this.filteredTags = _.get(data, 'tags');\n    }, error => {\n      this.showLoader = false;\n      // TODO: toaster\n      console.log('error fetching tags');\n    });\n  }\n\n  getContextBasedTags(cid: any) {\n    const req = {\n      cids: cid\n    }\n    this.showLoader = true;\n    this.discussionService.contextBasedTags(req).subscribe(data => {\n      this.showLoader = false;\n      this.filteredTags = _.get(data, 'result');\n    }, error => {\n      this.showLoader = false;\n      // TODO: toaster\n      console.log('error fetching tags');\n    });\n  }\n\n  public getBgColor(tagTitle: any) {\n    const bgColor = this.discussUtils.stringToColor(tagTitle.toLowerCase());\n    const color = this.discussUtils.getContrast();\n    return { color, 'background-color': bgColor };\n  }\n\n  getAllDiscussions(tag: { value: any }) {\n    this.queryParam = tag.value;\n    const tagdata = {\n      tagname: ''\n    };\n\n    tagdata.tagname = tag.value;\n    this.queryParam = tagdata;\n    const routerSlug = this.configService.getConfig().routerSlug ? this.configService.getConfig().routerSlug : '';\n    const input = { data: { url: `${routerSlug}${CONSTANTS.ROUTES.TAG}tag-discussions`,\n    queryParams: this.queryParam, tagName: this.queryParam.tagName }, action: 'tagsAll'};\n    this.navigationService.navigate(input);\n    this.stateChange.emit({ action: CONSTANTS.TAG_ALL_DISCUSS, title: tag.value, tid: 'sd' });\n    // tslint:disable-next-line: max-line-length\n    // this.router.navigate([`${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.TAG}tag-discussions`], { queryParams: this.queryParam });\n  }\n\n}\n\n    \n\n    \n        \n\n   0\">\n    \n      \n        \n         -->\n        {{tag.value}}\n        {{tag.score}}\n      \n    \n  \n\n​\n​\n\n  \n  No tags Available !\n  Stay tuned ! we will be updating our tags library and add them here\n\n\n    \n\n    \n                \n                    ./discuss-tags.component.scss\n                \n                ::ng-deep:root{\n\t--df-tag-empty-bg:var(--df-common-bg);\n}\n\n.sb-search-box {\n\tdisplay: flex;\n\talign-items: center;\n\tborder: 0px;\n}\n\n.sb-search-box .sb-search-input {\n\twidth: 100%;\n\tfont-size: 0.875rem;\n\tmin-height: 2rem;\n\toutline: 0;\n\tborder-radius: 0;\n\tline-height: normal;\n\tbackground: none;\n\tpadding: 1em;\n\tborder-radius: 0.25rem;\n\tborder: 0px;\n}\n\n.search-icon {\n\twidth: 1.125rem;\n\theight: 1.125rem;\n\tmargin: 1rem 0rem 1rem 1rem;\n}\n\n.sb-search-box .input-div {\n\tborder-radius: 1.5rem;\n\tbackground: var(--white);\n\tdisplay: flex;\n\talign-items: center;\n\tborder: 0.0625rem solid var(--gray-100);\n\twidth: 100%;\n}\n\n.sb-search-box .input-div:hover {\n\tborder-color: var(--primary);\n}\n\n.tag {\n\tcursor: pointer;\n}\n\n@media (max-width: 768px) {\n\t.discuss-tags {\n\t\tflex-direction: column;\n\t}\n}\n\n.tag-empty-container{\n\tbackground: var(--white);\n\tbackground: var(--df-tag-empty-bg);\n\tcolor: var(--df-text);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-radius: 1.5rem;\n    height: 100%;\n    border-radius: 0.25rem;\n    min-height: 28.125rem;\n\n\t.tag-empty-img{\n      width: 100%;\n\t  max-width: 13.875rem;\n\t}\n\n\t.tag-empty-label{\n\t\tfont-size: 0.875rem;\n\t\tfont-weight: bold;\n\t\tmargin: 1.5rem 0 0.75rem 0;\n\t\tcolor: var(--black) !important;\n\t}\n\n\t.tag-empty-text{\n\t\tfont-size: 0.875rem;\n\t\tfont-weight: normal;\n\t\ttext-align: center;\n\t\tcolor: var(--black) !important;\n\t}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0\">                           -->        {{tag.value}}        {{tag.score}}            ​​    No tags Available !  Stay tuned ! we will be updating our tags library and add them here'\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiscussTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscussUtilsService.html":{"url":"injectables/DiscussUtilsService.html","title":"injectable - DiscussUtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscussUtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/discuss-utils.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContrast\n                            \n                            \n                                htmlDecode\n                            \n                            \n                                stringToColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/discuss-utils.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getContrast\n                        \n                    \n                \n            \n            \n                \ngetContrast()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/discuss-utils.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDecode\n                        \n                    \n                \n            \n            \n                \nhtmlDecode(str: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/discuss-utils.service.ts:31\n                \n            \n\n\n            \n                \n                    The htmlDecode() method parses a string containing either HTML or XML\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(title)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/discuss-utils.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscussUtilsService {\n\n  constructor() { }\n\n  stringToColor(title) {\n    let hash = 0;\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiscussionEventsService.html":{"url":"injectables/DiscussionEventsService.html","title":"injectable - DiscussionEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiscussionEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/discussion-events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionEvent\n                            \n                            \n                                    Public\n                                telemetryEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/discussion-events.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitTelemetry\n                        \n                    \n                \n            \n            \n                \nemitTelemetry(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/discussion-events.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        actionEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/lib/discussion-events.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        telemetryEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/lib/discussion-events.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscussionEventsService {\n\n  public telemetryEvent = new Subject();\n  public actionEvent = new EventEmitter();\n\n  constructor() { }\n\n  emitTelemetry(event) {\n    console.log('Lib Event', event);\n    if (!_.isEmpty(event)) {\n      this.telemetryEvent.next(event);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscussionRoutingModule.html":{"url":"modules/DiscussionRoutingModule.html","title":"module - DiscussionRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscussionRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/discussion-routing/discussion-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DiscussionDetailsComponent } from './../components/discussion-details/discussion-details.component';\nimport { MyDiscussionComponent } from './../components/my-discussion/my-discussion.component';\nimport { DiscussTagsComponent } from './../components/discuss-tags/discuss-tags.component';\nimport { DiscussCategoryComponent } from './../components/discuss-category/discuss-category.component';\nimport { LibEntryComponent } from './../components/lib-entry/lib-entry.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DiscussHomeComponent } from './../components/discuss-home/discuss-home.component';\nimport { DiscussAllComponent } from './../components/discuss-all/discuss-all.component';\nimport { TagAllDiscussionComponent } from './../components/tag-all-discussion/tag-all-discussion.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LibEntryComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: DiscussCategoryComponent\n      },\n      {\n        path: 'all-discussions',\n        pathMatch: 'full',\n        component: DiscussAllComponent\n      },\n      {\n        path: 'categories',\n        pathMatch: 'full',\n        component: DiscussCategoryComponent\n      },\n      {\n        path: 'tags',\n        pathMatch: 'full',\n        component: DiscussTagsComponent\n      },\n      // TODO: ADD LATER\n      {\n        path: 'tags/tag-discussions',\n        pathMatch: 'full',\n        component: TagAllDiscussionComponent\n      },\n      {\n        path: 'my-discussion',\n        pathMatch: 'full',\n        component: MyDiscussionComponent\n      },\n      {\n        path: 'category/:slug',\n        pathMatch: 'full',\n        component: DiscussHomeComponent\n      },\n      {\n        path: 'topic/:topicId/:slug',\n        pathMatch: 'full',\n        component: DiscussionDetailsComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule\n  ],\n  exports: [RouterModule]\n})\nexport class DiscussionRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DiscussionUiModule.html":{"url":"modules/DiscussionUiModule.html","title":"module - DiscussionUiModule","body":"\n                   \n\n\n\n\n    Modules\n    DiscussionUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DiscussionUiModule\n\n\n\ncluster_DiscussionUiModule_declarations\n\n\n\ncluster_DiscussionUiModule_exports\n\n\n\ncluster_DiscussionUiModule_imports\n\n\n\ncluster_DiscussionUiModule_providers\n\n\n\n\nBaseWrapperComponent\n\nBaseWrapperComponent\n\n\n\nDiscussionUiModule\n\nDiscussionUiModule\n\nDiscussionUiModule -->\n\nBaseWrapperComponent->DiscussionUiModule\n\n\n\n\n\nCategoryWidgetComponent\n\nCategoryWidgetComponent\n\nDiscussionUiModule -->\n\nCategoryWidgetComponent->DiscussionUiModule\n\n\n\n\n\nLibEntryComponent\n\nLibEntryComponent\n\nDiscussionUiModule -->\n\nLibEntryComponent->DiscussionUiModule\n\n\n\n\n\nTagsWidgetComponent\n\nTagsWidgetComponent\n\nDiscussionUiModule -->\n\nTagsWidgetComponent->DiscussionUiModule\n\n\n\n\n\nBaseWrapperComponent \n\nBaseWrapperComponent \n\nBaseWrapperComponent  -->\n\nDiscussionUiModule->BaseWrapperComponent \n\n\n\n\n\nCategoryWidgetComponent \n\nCategoryWidgetComponent \n\nCategoryWidgetComponent  -->\n\nDiscussionUiModule->CategoryWidgetComponent \n\n\n\n\n\nTagsWidgetComponent \n\nTagsWidgetComponent \n\nTagsWidgetComponent  -->\n\nDiscussionUiModule->TagsWidgetComponent \n\n\n\n\n\nDiscussionRoutingModule\n\nDiscussionRoutingModule\n\nDiscussionUiModule -->\n\nDiscussionRoutingModule->DiscussionUiModule\n\n\n\n\n\nElementsModule\n\nElementsModule\n\nDiscussionUiModule -->\n\nElementsModule->DiscussionUiModule\n\n\n\n\n\nDiscussionEventsService\n\nDiscussionEventsService\n\nDiscussionUiModule -->\n\nDiscussionEventsService->DiscussionUiModule\n\n\n\n\n\nTelemetryUtilsService\n\nTelemetryUtilsService\n\nDiscussionUiModule -->\n\nTelemetryUtilsService->DiscussionUiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/discussion-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseWrapperComponent\n                        \n                        \n                            CategoryWidgetComponent\n                        \n                        \n                            LibEntryComponent\n                        \n                        \n                            TagsWidgetComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DiscussionEventsService\n                        \n                        \n                            TelemetryUtilsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DiscussionRoutingModule\n                        \n                        \n                            ElementsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BaseWrapperComponent\n                        \n                        \n                            CategoryWidgetComponent\n                        \n                        \n                            TagsWidgetComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TelemetryUtilsService } from './telemetry-utils.service';\nimport { ElementsModule } from './elements/elements.module';\nimport { LibEntryComponent } from './components/lib-entry/lib-entry.component';\nimport { ComponentsModule } from './components/components.module';\nimport { DiscussionRoutingModule } from './discussion-routing/discussion-routing.module';\nimport { CategoryWidgetComponent } from './wrapper/category-widget/category-widget.component';\n\nimport {  ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { DiscussionEventsService } from './discussion-events.service';\nimport { BaseWrapperComponent } from './wrapper/base-wrapper/base-wrapper.component';\nimport { TagsWidgetComponent } from './wrapper/tags-widget/tags-widget.component';\nimport { CommonModule } from '@angular/common';\n\nexport function provideCsModule(){\n  return window['CsModule'];\n}\n@NgModule({\n  declarations: [ LibEntryComponent, CategoryWidgetComponent, BaseWrapperComponent, TagsWidgetComponent],\n  imports: [\n    ComponentsModule,\n    DiscussionRoutingModule,\n    ElementsModule,\n    CommonModule,\n  ],\n  exports: [ ComponentsModule , CategoryWidgetComponent, BaseWrapperComponent, TagsWidgetComponent ],\n  providers: [ DiscussionEventsService, TelemetryUtilsService,{provide: 'CsModule', useFactory: provideCsModule} ]\n})\nexport class DiscussionUiModule { \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ElementsModule.html":{"url":"modules/ElementsModule.html","title":"module - ElementsModule","body":"\n                   \n\n\n\n\n    Modules\n    ElementsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ElementsModule\n\n\n\ncluster_ElementsModule_declarations\n\n\n\ncluster_ElementsModule_exports\n\n\n\n\nAppLoaderComponent\n\nAppLoaderComponent\n\n\n\nElementsModule\n\nElementsModule\n\nElementsModule -->\n\nAppLoaderComponent->ElementsModule\n\n\n\n\n\nAvatarPhotoComponent\n\nAvatarPhotoComponent\n\nElementsModule -->\n\nAvatarPhotoComponent->ElementsModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nElementsModule -->\n\nCategoryCardComponent->ElementsModule\n\n\n\n\n\nDiscussCardComponent\n\nDiscussCardComponent\n\nElementsModule -->\n\nDiscussCardComponent->ElementsModule\n\n\n\n\n\nLoadAlertComponent\n\nLoadAlertComponent\n\nElementsModule -->\n\nLoadAlertComponent->ElementsModule\n\n\n\n\n\nPostReplyComponent\n\nPostReplyComponent\n\nElementsModule -->\n\nPostReplyComponent->ElementsModule\n\n\n\n\n\nRelatedDiscussionComponent\n\nRelatedDiscussionComponent\n\nElementsModule -->\n\nRelatedDiscussionComponent->ElementsModule\n\n\n\n\n\nSlidersComponent\n\nSlidersComponent\n\nElementsModule -->\n\nSlidersComponent->ElementsModule\n\n\n\n\n\nAppLoaderComponent \n\nAppLoaderComponent \n\nAppLoaderComponent  -->\n\nElementsModule->AppLoaderComponent \n\n\n\nAppLoaderComponent  -->\n\nElementsModule->AppLoaderComponent \n\n\n\n\n\nAvatarPhotoComponent \n\nAvatarPhotoComponent \n\nAvatarPhotoComponent  -->\n\nElementsModule->AvatarPhotoComponent \n\n\n\n\n\nCategoryCardComponent \n\nCategoryCardComponent \n\nCategoryCardComponent  -->\n\nElementsModule->CategoryCardComponent \n\n\n\n\n\nDiscussCardComponent \n\nDiscussCardComponent \n\nDiscussCardComponent  -->\n\nElementsModule->DiscussCardComponent \n\n\n\n\n\nLoadAlertComponent \n\nLoadAlertComponent \n\nLoadAlertComponent  -->\n\nElementsModule->LoadAlertComponent \n\n\n\n\n\nPostReplyComponent \n\nPostReplyComponent \n\nPostReplyComponent  -->\n\nElementsModule->PostReplyComponent \n\n\n\n\n\nRelatedDiscussionComponent \n\nRelatedDiscussionComponent \n\nRelatedDiscussionComponent  -->\n\nElementsModule->RelatedDiscussionComponent \n\n\n\n\n\nSlidersComponent \n\nSlidersComponent \n\nSlidersComponent  -->\n\nElementsModule->SlidersComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/elements/elements.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppLoaderComponent\n                        \n                        \n                            AvatarPhotoComponent\n                        \n                        \n                            CategoryCardComponent\n                        \n                        \n                            DiscussCardComponent\n                        \n                        \n                            LoadAlertComponent\n                        \n                        \n                            PostReplyComponent\n                        \n                        \n                            RelatedDiscussionComponent\n                        \n                        \n                            SlidersComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLoaderComponent\n                        \n                        \n                            AppLoaderComponent\n                        \n                        \n                            AvatarPhotoComponent\n                        \n                        \n                            CategoryCardComponent\n                        \n                        \n                            DiscussCardComponent\n                        \n                        \n                            LoadAlertComponent\n                        \n                        \n                            PostReplyComponent\n                        \n                        \n                            RelatedDiscussionComponent\n                        \n                        \n                            SlidersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryCardComponent } from './category-card/category-card.component';\nimport { DiscussCardComponent } from './discuss-card/discuss-card.component';\nimport { AvatarPhotoComponent } from './avatar-photo/avatar-photo.component';\nimport { AppLoaderComponent } from './app-loader/app-loader.component';\nimport { RelatedDiscussionComponent } from './related-discussion/related-discussion.component';\nimport { PipesModule } from './../pipes/pipes.module';\n\nimport { PostReplyComponent } from './post-reply/post-reply.component';\nimport { SlidersComponent } from './sliders/sliders.component';\nimport { LoadAlertComponent } from './load-alert/load-alert.component';\n@NgModule({\n  declarations: [\n    PostReplyComponent,\n    CategoryCardComponent,\n    DiscussCardComponent,\n    AvatarPhotoComponent,\n    AppLoaderComponent,\n    RelatedDiscussionComponent,\n    SlidersComponent,\n    LoadAlertComponent\n  ],\n  imports: [\n    CommonModule, PipesModule,\n     FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    CategoryCardComponent,\n    DiscussCardComponent,\n    AvatarPhotoComponent,\n    AppLoaderComponent, \n    RelatedDiscussionComponent,\n    AppLoaderComponent,\n    PostReplyComponent,\n    SlidersComponent,\n    LoadAlertComponent\n  ]\n})\nexport class ElementsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _navItemSource\n                            \n                            \n                                navItem$\n                            \n                            \n                                registeredEvents\n                            \n                            \n                                toggleMenuItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/events.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(data)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/events.service.ts:22\n                \n            \n\n\n            \n                \n                    This function is used to update the states in widget with data\nTODO: Not being used anymore have to cleanup\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        TODO: Not being used anymore have to cleanup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _navItemSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/lib/events.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navItem$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._navItemSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/lib/events.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/events.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenuItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/lib/events.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Observable, ReplaySubject } from 'rxjs'\n// import {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  private _navItemSource = new BehaviorSubject(0);\n  // Observable navItem stream\n  navItem$ = this._navItemSource.asObservable();\n  registeredEvents: Array = [];\n  toggleMenuItem: ReplaySubject = new ReplaySubject(1)\n\n  constructor() { }\n  /**\n   * This function is used to update the states in widget with data\n   * @param  {} data\n   * TODO: Not being used anymore have to cleanup   \n   */\n  toggle(data) {\n    this.toggleMenuItem.next(data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICategorie.html":{"url":"interfaces/ICategorie.html","title":"interface - ICategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            cid\n                                        \n                                \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            descriptionParsed\n                                        \n                                \n                                \n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            imageClass\n                                        \n                                \n                                \n                                        \n                                            isSection\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            maxTags\n                                        \n                                \n                                \n                                        \n                                            minTags\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numRecentReplies\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            parentCid\n                                        \n                                \n                                \n                                        \n                                            post_count\n                                        \n                                \n                                \n                                        \n                                            posts\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            tagWhitelist\n                                        \n                                \n                                \n                                        \n                                            teaser\n                                        \n                                \n                                \n                                        \n                                            topic_count\n                                        \n                                \n                                \n                                        \n                                            totalPostCount\n                                        \n                                \n                                \n                                        \n                                            totalTopicCount\n                                        \n                                \n                                \n                                        \n                                            unread-class\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        descriptionParsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descriptionParsed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSection:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxTags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxTags:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minTags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minTags:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numRecentReplies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numRecentReplies:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentCid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentCid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        post_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        post_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        posts:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagWhitelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagWhitelist:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teaser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teaser:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topic_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topic_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPostCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPostCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTopicCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalTopicCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unread-class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unread-class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICategoryObj.html":{"url":"interfaces/ICategoryObj.html","title":"interface - ICategoryObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICategoryObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            context\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            pid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseContext.html":{"url":"interfaces/ICourseContext.html","title":"interface - ICourseContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDiscussJsonData.html":{"url":"interfaces/IDiscussJsonData.html","title":"interface - IDiscussJsonData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDiscussJsonData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tabs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tabs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tabs:         IDiscussionTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDiscussionTab[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDiscussionAllContext.html":{"url":"interfaces/IDiscussionAllContext.html","title":"interface - IDiscussionAllContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDiscussionAllContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryObj\n                                        \n                                \n                                \n                                        \n                                            contextIdArr\n                                        \n                                \n                                \n                                        \n                                            contextType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryObj\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryObj:         ICategoryObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICategoryObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contextIdArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contextIdArr:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contextType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contextType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDiscussionTab.html":{"url":"interfaces/IDiscussionTab.html","title":"interface - IDiscussionTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDiscussionTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            badges\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            routerLink\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        badges:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEditor.html":{"url":"interfaces/IEditor.html","title":"interface - IEditor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEditor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uid\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            userslug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userslug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userslug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuOptions.html":{"url":"interfaces/IMenuOptions.html","title":"interface - IMenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuOptions-1.html":{"url":"interfaces/IMenuOptions-1.html","title":"interface - IMenuOptions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPageData.html":{"url":"interfaces/IPageData.html","title":"interface - IPageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         IPageData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPageData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         IPageData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPageData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:         IPageData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPageData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:         IPageData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPageData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rel:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPosts.html":{"url":"interfaces/IPosts.html","title":"interface - IPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bookmarked\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bookmarks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                        \n                                            deleterUid\n                                        \n                                \n                                \n                                        \n                                            display_delete_tools\n                                        \n                                \n                                \n                                        \n                                            display_edit_tools\n                                        \n                                \n                                \n                                        \n                                            display_moderator_tools\n                                        \n                                \n                                \n                                        \n                                            display_move_tools\n                                        \n                                \n                                \n                                        \n                                            display_post_menu\n                                        \n                                \n                                \n                                        \n                                            downvoted\n                                        \n                                \n                                \n                                        \n                                            downvotes\n                                        \n                                \n                                \n                                        \n                                            edited\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editedISO\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editor\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            pid\n                                        \n                                \n                                \n                                        \n                                            replies\n                                        \n                                \n                                \n                                        \n                                            selfPost\n                                        \n                                \n                                \n                                        \n                                            tid\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            timestampISO\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topic\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                                \n                                        \n                                            upvoted\n                                        \n                                \n                                \n                                        \n                                            upvotes\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            viewcount\n                                        \n                                \n                                \n                                        \n                                            votes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookmarked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookmarked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bookmarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookmarks:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         ICategorie\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICategorie\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:     number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleterUid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleterUid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_delete_tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_delete_tools:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_edit_tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_edit_tools:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_moderator_tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_moderator_tools:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_move_tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_move_tools:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_post_menu\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_post_menu:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downvoted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downvoted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downvotes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downvotes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edited:     number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editedISO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editedISO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editor:         IEditor | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IEditor | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replies:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfPost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selfPost:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampISO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestampISO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topic:         ITopic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITopic\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upvoted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upvoted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upvotes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upvotes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewcount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewcount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        votes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        votes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRelatedDiscussion.html":{"url":"interfaces/IRelatedDiscussion.html","title":"interface - IRelatedDiscussion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRelatedDiscussion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITag.html":{"url":"interfaces/ITag.html","title":"interface - ITag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            valueEscaped\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueEscaped\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueEscaped:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITelemetryObj.html":{"url":"interfaces/ITelemetryObj.html","title":"interface - ITelemetryObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITelemetryObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/telemetry-utils.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                        \n                                            edata\n                                        \n                                \n                                \n                                        \n                                            eid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiscussionEventsService } from './discussion-events.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\ninterface ITelemetryObj {\n  eid: string,\n  edata: {},\n  context?: {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryUtilsService {\n\n  _context = []\n  currentObj = {};\n\n  constructor(\n    private discussionEvents: DiscussionEventsService,\n    private router: Router\n  ) { }\n\n  setContext(context) {\n    this._context = context;\n    this.currentObj = _.last(context);\n  }\n\n  uppendContext(data) {\n    const matchedC = _.find(this._context, { id: data.id });\n    if (!_.isEmpty(data) && !_.isEqual(data, matchedC)) {\n      this._context.push(data);\n    }\n    this.currentObj = _.last(this._context);\n  }\n\n  deleteContext(prevTopic) {\n    const topic = _.find(this._context, prevTopic);\n    if (topic) {\n      this._context = _.reject(this._context, topic);\n    }\n  }\n\n  getContext() {\n    return this._context;\n  }\n\n  logImpression(pageId) {\n    this.discussionEvents.emitTelemetry({});\n    const impressionEvent: ITelemetryObj = {\n      eid: 'IMPRESSION',\n      edata: {\n        type: 'view',\n        pageid: pageId,\n        uri: this.router.url\n      }\n    }\n    if (this.currentObj) {\n      impressionEvent.context = { cdata: [{\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type') }\n      ]};\n    }\n    this.discussionEvents.emitTelemetry(impressionEvent);\n  }\n\n  logInteract(event, pageId) {\n    const target = _.get(event, 'currentTarget.attributes.id') ||  _.get(event, 'target.attributes.id') ||\n     _.get(event, 'srcElement.attributes.id');\n    const interactEvent: ITelemetryObj = {\n      eid: 'INTERACT',\n      edata: {\n        id: _.get(target, 'value') || _.get(event, 'action'),\n        type: 'CLICK',\n        pageid: pageId\n      }\n    };\n\n    if (this.currentObj) {\n      const object = {\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type'),\n        ver: '1'\n      };\n      object['rollup'] = this._context.length > 1 ?  this.getRollUp() : {};\n      interactEvent.context = {\n        cdata: [{\n          id: _.get(this.currentObj, 'id').toString(),\n          type: _.get(this.currentObj, 'type')\n        }], object\n      };\n    }\n\n    this.discussionEvents.emitTelemetry(interactEvent);\n  }\n\n  getRollUp() {\n\n      const rollUp = {};\n      const data = _.reject(this._context, this.currentObj);\n\n      if (this._context.length > 1) {\n        data.forEach((element, index) => {\n          console.log('rollup', element);\n          rollUp['l' + (index + 1)] = element.toString();\n        });\n      }\n\n      if (_.get(this.currentObj, 'type') !== 'Post') {\n        return rollUp;\n      }\n\n      return {};\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITopic.html":{"url":"interfaces/ITopic.html","title":"interface - ITopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITopic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cid\n                                        \n                                \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                        \n                                            mainPid\n                                        \n                                \n                                \n                                        \n                                            postcount\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teaserPid\n                                        \n                                \n                                \n                                        \n                                            tid\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            titleRaw\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainPid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainPid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postcount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teaserPid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teaserPid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleRaw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        titleRaw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discuss.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            banned\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            banned_until\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            banned_until_readable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            banned:expire\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            custom_profile_info\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupTitleArray\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon:bgColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon:text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastonline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastonlineISO\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            postcount\n                                        \n                                \n                                \n                                        \n                                            reputation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedGroups\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            signature\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            topiccount\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            userslug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        banned\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        banned:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        banned_until\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        banned_until:     number | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        banned_until_readable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        banned_until_readable:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        banned:expire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        banned:expire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        custom_profile_info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        custom_profile_info:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupTitleArray\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupTitleArray:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon:bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:bgColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon:text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastonline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastonline:     number | null | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastonlineISO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastonlineISO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postcount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reputation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reputation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedGroups:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signature:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topiccount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topiccount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userslug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userslug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace NSDiscussData {\n  export interface IDiscussJsonData {\n    tabs: IDiscussionTab[]\n  }\n\n  export interface IDiscussionTab {\n    name: string\n    key: string\n    badges: {\n      enabled: boolean\n      uri?: string\n    }\n    enabled: boolean\n    routerLink: string\n  }\n\n  export interface IDiscussionData {\n    cid: number\n    tid: number\n    uid: number\n    mainPid: number\n    content?: string\n    slug: string\n    title: string\n    titleRaw: string\n    lastposttime: number\n    timestampISO: string\n    lastposttimeISO: string\n    timestamp: number\n    upvotes: number\n    downvotes: number\n    viewcount: number\n    postcount: number\n    deleterUid: number\n    deleted: boolean | number\n    locked: boolean | number\n    pinned: boolean | number\n    thumb?: string | null\n    category: ICategorie\n    user?: IUser\n    postIndex?: number\n    teaser?: any\n    tagWhitelist?: any[]\n    tags: ITag[]\n    minTags?: number\n    maxTags?: number\n    thread_tools?: []\n    isFollowing?: boolean\n    isNotFollowing?: boolean\n    isIgnoring?: boolean\n    isOwner?: boolean\n    ignored?: boolean\n    unread?: boolean\n    bookmark?: any\n    postSharing?: []\n    deleter?: any | null\n    merger?: any | null\n    related?: []\n    privileges?: any | null\n    topicStaleDays?: number\n    unreplied: boolean\n    icons?: any[]\n    index?: number\n    votes?: number\n    teaserPid: number | null | undefined\n    pagination?: IPagination\n    posts?: IPosts[]\n    topics?: any[]\n    result?: any[]\n  }\n\n  export interface ICategoryData {\n    bgColor: string,\n    cid: number,\n    class: string,\n    color: string,\n    description: string,\n    descriptionParsed: string,\n    disabled: number,\n    icon: string,\n    imageClass: string,\n    isSection: number,\n    link: string,\n    name: string,\n    numRecentReplies: number,\n    order: number,\n    parentCid: number,\n    post_count: number,\n    slug: string,\n    topic_count: number,\n    minTags: number,\n    maxTags: number,\n    totalPostCount: number,\n    totalTopicCount: number,\n    tagWhitelist: any[],\n    children: any[],\n    topics: any[],\n    nextStart: number,\n    isWatched: boolean,\n    isNotWatched: boolean,\n    isIgnored: boolean,\n    breadcrumbs: any[],\n    title: string,\n    privileges: any,\n    pagination: any,\n    loggedIn: boolean,\n    relative_path: string,\n    template: any,\n    url: string,\n    bodyClass: string,\n    _header: any,\n    widgets: any\n  }\n\n  export interface ITag {\n    value: string\n    valueEscaped: string\n    color: string\n    bgColor: string\n    score: number\n  }\n\n  export interface ICategorie {\n    \"cid\": number,\n    \"name\": string,\n    \"description\": string,\n    \"descriptionParsed\": string,\n    \"icon\": any,\n    \"bgColor\": string,\n    \"color\": string,\n    \"slug\": string,\n    \"parentCid\": number,\n    \"topic_count\": number,\n    \"post_count\": number,\n    \"disabled\": number,\n    \"order\": number,\n    \"link\": string,\n    \"numRecentReplies\": number,\n    \"class\": string,\n    \"imageClass\": string,\n    \"isSection\": number,\n    \"totalPostCount\": number,\n    \"totalTopicCount\": number,\n    \"minTags\": number,\n    \"maxTags\": number,\n    \"tagWhitelist\": any,\n    \"unread-class\": string,\n    \"children\": any,\n    \"posts\": any,\n    \"teaser\": any\n  }\n\n  export interface IRelatedDiscussion {\n    id: number\n    title: string\n    category: string\n    time: string\n  }\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n\n  export interface IPagination {\n    prev: IPageData\n    next: IPageData\n    first: IPageData\n    last: IPageData\n    rel?: any[]\n    pages?: any[]\n    currentPage: number\n    pageCount: number\n  }\n\n  export interface IPageData {\n    page: number\n    active: boolean\n  }\n\n  export interface IEditor {\n    uid: number\n    username: string\n    userslug: string\n  }\n\n  export interface IPosts {\n    content: string\n    pid: number\n    tid: number\n    timestamp: number\n    uid: number\n    deleted: number | boolean\n    upvotes: number\n    downvotes: number\n    viewcount?: number\n    deleterUid: number\n    edited: number | boolean\n    votes: number\n    timestampISO: string\n    editedISO?: string\n    index: number\n    user: IUser\n    category?: ICategorie\n    topic?: ITopic\n    editor?: IEditor | null\n    bookmarked: boolean\n    upvoted: boolean\n    downvoted: boolean\n    bookmarks?: number | null\n    replies: {\n      hasMore: false\n      users: any[]\n      text: any\n      count: number\n    }\n    selfPost: boolean\n    display_edit_tools: boolean\n    display_delete_tools: boolean\n    display_moderator_tools: boolean\n    display_move_tools: boolean\n    display_post_menu: boolean\n  }\n  \n  export interface ITopic {\n    cid: number\n    deleted: number\n    mainPid: number\n    postcount: number\n    slug: string\n    teaserPid: number\n    tid: number\n    title: string\n    titleRaw: string\n    uid: number\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    // groups: IGroup[]\n    posts: IPosts[]\n    latestPosts: IPosts[]\n    bestPosts: IPosts[]\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'discussion-home',\n    START = 'discussion-start',\n    DETAILS = 'discussion-details',\n    CATEGORY = 'discussion-category',\n    TAGS = 'discussion-category',\n    MY_DISCUSSION = 'my-discussion',\n    LIB_ENTRY = 'lib-entry',\n    LOAD_ALERT = 'load-alert'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icategory.html":{"url":"interfaces/Icategory.html","title":"interface - Icategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Icategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icontext.html":{"url":"interfaces/Icontext.html","title":"interface - Icontext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Icontext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdiscussionConfig.html":{"url":"interfaces/IdiscussionConfig.html","title":"interface - IdiscussionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdiscussionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/discussion-config.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bannerOption\n                                        \n                                \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultLandingPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headerOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            menuOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerSlug\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bannerOption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bannerOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         Icategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Icategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultLandingPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultLandingPage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headerOptions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuOptions:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerSlug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerSlug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdiscussionConfig {\n    menuOptions?: Array\n    userName?: string;\n    context?: Object;\n    categories: Icategory;\n    path?: string;\n    routerSlug?: string;\n    userId: number;\n    headerOptions?: boolean\n    bannerOption?: boolean\n    defaultLandingPage?: string\n  }\n  \n  export interface Icontext {\n   id: number\n  }\n  \n  export interface IMenuOptions {\n    route: string\n    enable: boolean\n  }\n\nexport interface IDiscussionAllContext {\n  contextIdArr: Array\n  contextType: string\n  categoryObj: ICategoryObj\n}\n\nexport interface ICategoryObj{\n    name: string,\n    pid: string,\n    description: string,\n    context: Array\n}\n\nexport interface ICourseContext{\n  type: string\n  identifier: string\n}\n\nexport interface IMenuOptions {\n  route: string\n  enable: boolean\n}\n\nexport interface Icategory {\n  result: Array\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibEntryComponent.html":{"url":"components/LibEntryComponent.html","title":"component - LibEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/lib-entry/lib-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-lib-entry\n            \n\n\n\n            \n                styleUrls\n                ./lib-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lib-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                banner\n                            \n                            \n                                bannerOption\n                            \n                            \n                                    Private\n                                bannerSubscription\n                            \n                            \n                                config\n                            \n                            \n                                currentRoute\n                            \n                            \n                                data\n                            \n                            \n                                headerOption\n                            \n                            \n                                histtoryStartIndex\n                            \n                            \n                                pageKey\n                            \n                            \n                                showLoaderAlert\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                closeLoadAlert\n                            \n                            \n                                goBack\n                            \n                            \n                                handleLoaderAlert\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onScrollTopActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, discussionService: DiscussionService, configService: ConfigService, location: Location, navigationServiceService: NavigationServiceService, discussionEventService: DiscussionEventsService, telemetryUtils: TelemetryUtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationServiceService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionEventService\n                                                  \n                                                        \n                                                                        DiscussionEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeLoadAlert\n                        \n                    \n                \n            \n            \n                \ncloseLoadAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleLoaderAlert\n                        \n                    \n                \n            \n            \n                \nhandleLoaderAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScrollTopActive\n                        \n                    \n                \n            \n            \n                \nonScrollTopActive(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/lib-entry/lib-entry.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bannerOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bannerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all-discussions'\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerOption\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        histtoryStartIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoaderAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/lib-entry/lib-entry.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DiscussionService } from './../../services/discussion.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { DiscussionEventsService } from './../../discussion-events.service';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { NSDiscussData } from './../../models/discuss.model';\n\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { IdiscussionConfig } from '../../models/discussion-config.model';\nimport { ConfigService } from '../../services/config.service';\nimport { Inject } from '@angular/core';\nimport { NavigationServiceService } from '../../navigation-service.service';\nimport { AbstractConfigService } from '../../services/abstract-config.service';\nimport { Subscription } from 'rxjs';\n/* tslint:enable */\n@Component({\n  selector: 'lib-lib-entry',\n  templateUrl: './lib-entry.component.html',\n  styleUrls: ['./lib-entry.component.scss'],\n  /* tslint:disable */\n  host: { class: 'flex-1 main_discuss_lib',},\n  /* tslint:enable */\n})\nexport class LibEntryComponent implements OnInit, OnDestroy {\n\n  data: IdiscussionConfig;\n  headerOption = true;\n  banner: any\n  private bannerSubscription: any\n  bannerOption: boolean;\n  currentRoute = 'all-discussions'\n  pageKey: string;\n  config: any;\n  histtoryStartIndex: number;\n  showLoaderAlert = false;\n  subscription: Subscription\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    private discussionService: DiscussionService,\n    private configService: ConfigService,\n    private location: Location,\n    private navigationServiceService: NavigationServiceService,\n    private discussionEventService: DiscussionEventsService,\n    private telemetryUtils: TelemetryUtilsService,\n    // @Inject('configService') protected configService: AbstractConfigService\n\n  ) {\n    this.bannerSubscription = this.activatedRoute.data.subscribe(data => {\n      if (data && data.pageData) {\n        this.banner = data.pageData.data.banner || []\n      }\n    })\n  }\n\n  ngOnInit() {\n    /**\n     * calling the initservice to tell navigationservice to use the router service\n     * because this component is invoke only in router approach \n     */\n    this.navigationServiceService.initService('routerService')\n    this.histtoryStartIndex = window.history.length-1;\n    this.configService.setConfig(this.activatedRoute);\n    // this.activatedRoute.data.subscribe((data) => {\n    this.data = this.configService.getConfig();\n    if (!this.data) {\n      // fallback for query params\n      this.configService.setConfigFromParams(this.activatedRoute);\n      this.data = this.configService.getConfig();\n    }\n    this.discussionService.userId = _.get(this.data, 'userId');\n    const rawCategories = _.get(this.data, 'categories');\n    this.discussionService.forumIds = _.get(rawCategories, 'result');\n    this.discussionService.initializeUserDetails(this.discussionService.userId);\n    this.handleLoaderAlert();\n   }\n\n  handleLoaderAlert(){\n\n    this.subscription = this.discussionService.alertEvent.subscribe(() => {\n      this.showLoaderAlert = true;\n    })\n  }\n\n  goBack() {\n    const eventAction = {\n      action: 'DF_BACK'\n    };\n    this.discussionEventService.emitTelemetry(eventAction);\n    this.location.back();\n  }\n\n  close(event) {\n    this.showLoaderAlert = false;\n    const eventAction = {\n      action: 'DF_CLOSE'\n    };\n    this.discussionEventService.emitTelemetry(eventAction);\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.LIB_ENTRY);\n    window.history.go(-(window.history.length - this.histtoryStartIndex ));\n  }\n\n  closeLoadAlert(){\n    this.showLoaderAlert = false;\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe()\n  }\n\n  onScrollTopActive(event) {\n    window.scroll({\n      top: 0, \n      left: 0, \n      behavior: 'smooth'\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            Back\n        \n        \n            Close\n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./lib-entry.component.scss\n                \n                ::ng-deep:root {\n  --df-header-bg:var(--df-common-bg);\n}\n\n.df-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  background: var(--df-header-bg);\n  margin-bottom: 1rem;\n\n  .df-back-btn {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 1rem;\n      height: 1rem;\n      margin-right: 0.25rem;\n      filter: invert(1);\n    }\n  }\n\n  .df-close-btn {\n    img {\n      width: 0.5rem;\n      height: 0.5rem;\n      margin-left: 0.25rem;\n      filter: invert(1);\n    }\n  }\n}\n\n.discussion-forum-content {\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 1.5rem;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n}\n\n.ui.container {\n  display: block;\n  max-width: 100%!important;\n\n  @media only screen and (max-width: 767px){\n      width: auto!important;\n      margin-left: 1em!important;\n      margin-right: 1em!important;\n  }\n  \n  @media only screen and (max-width: 1800px) and (min-width: 768px){\n          width: 90%;\n          margin-left: auto !important;\n          margin-right: auto !important;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Back                            Close                                                                                        '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LibEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadAlertComponent.html":{"url":"components/LoadAlertComponent.html","title":"component - LoadAlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadAlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/load-alert/load-alert.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-load-alert\n            \n\n\n\n            \n                styleUrls\n                ./load-alert.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./load-alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                exitForum\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                exit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(telemetryUtils: TelemetryUtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/load-alert/load-alert.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/load-alert/load-alert.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        exit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/load-alert/load-alert.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/load-alert/load-alert.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exitForum\n                        \n                    \n                \n            \n            \n                \nexitForum(event: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/load-alert/load-alert.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/load-alert/load-alert.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DiscussionService } from './../../services/discussion.service';\nimport { Component, OnInit, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { NSDiscussData } from './../../models/discuss.model';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { DiscussUtilsService } from '../../services/discuss-utils.service';\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { ConfigService } from '../../services/config.service';\nimport { DiscussionEventsService } from '../../discussion-events.service';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-load-alert',\n  templateUrl: './load-alert.component.html',\n  styleUrls: ['./load-alert.component.scss']\n})\nexport class LoadAlertComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  @Output() exit = new EventEmitter(); \n\n  constructor(\n    private telemetryUtils: TelemetryUtilsService,\n  ) { }\n\n  ngOnInit() {\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.LOAD_ALERT);\n  }\n\n  exitForum(event: string) {\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.LOAD_ALERT);\n    this.exit.emit(event);\n  }\n\n  closeModal(event){\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.LOAD_ALERT);\n    this.close.emit();\n  }\n\n  \n}\n\n\n    \n\n    \n        \n    \n          \n        Alert \n        \n            We are experiencing high traffic.Please try after sometime.\n        \n        \n            Close\n        \n        \n    \n\n    \n\n    \n                \n                    ./load-alert.component.scss\n                \n                #alertModal {\n\tdisplay: block;\n\topacity: 2 !important;\n}\n.df-dimmer-alert-modal {\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground: rgba(0, 0, 0, .8);\n\tz-index: 99999;\n\topacity: 1;\n\ttransition: opacity .1s ease-in;\n\tpointer-events: auto;\n\t.df-alert-modal {\n\t\tmax-width: 30rem;\n\t\twidth: 100%;\n\t\tmargin: 0 auto;\n\t\tborder-radius: 0.1875rem;\n\t\tbackground: var(--white);\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\toverflow: auto;\n\t\theight: auto;\n\t\t.df-alert-modal-header {\n\t\t\tbackground-color: var(--primary);\n\t\t\tcolor: var(--white);\n\t\t\tfont-weight: 700;\n\t\t\tfont-size: 1rem;\n\t\t\tpadding: .5rem 1rem;\n\t\t\tborder-bottom: 0 solid var(--gray-100);\n\t\t\tmin-height: 2.5rem;\n\t\t\tline-height: 1.5rem;\n\t\t}\n\t\t.df-alert-modal-content {\n\t\t\tpadding: 1rem;\n\t\t\tmin-height: 3.75rem;\n\t\t\t.df-alert-label {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-size: .8125rem;\n\t\t\t\tfont-weight: 700;\n\t\t\t}\n\t\t}\n\t\t.df-alert-modal-buttons {\n\t\t\tpadding: .5rem 1rem;\n\t\t\tbackground: var(--white);\n\t\t\tborder-top: .0625rem solid var(--gray-100);\n\t\t\tmin-height: 3.5rem;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row-reverse;\n\t\t\talign-items: center;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Alert                     We are experiencing high traffic.Please try after sometime.                            Close                    '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadAlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyDiscussionComponent.html":{"url":"components/MyDiscussionComponent.html","title":"component - MyDiscussionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyDiscussionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/my-discussion/my-discussion.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-my-discussion\n            \n\n\n\n            \n                styleUrls\n                ./my-discussion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./my-discussion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFilter\n                            \n                            \n                                data\n                            \n                            \n                                department\n                            \n                            \n                                discussionList\n                            \n                            \n                                    \n                                elementView\n                            \n                            \n                                InfiniteScrollConfig\n                            \n                            \n                                location\n                            \n                            \n                                pagination\n                            \n                            \n                                profilePhoto\n                            \n                            \n                                recentFilter\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showLoader\n                            \n                            \n                                userInitial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserProfile\n                            \n                            \n                                filter\n                            \n                            \n                                getRecentTopics\n                            \n                            \n                                logTelemetry\n                            \n                            \n                                navigateToDiscussionDetails\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onModalScrollDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(discussService: DiscussionService, configService: ConfigService, router: Router, telemetryUtils: TelemetryUtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discussService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserProfile\n                        \n                    \n                \n            \n            \n                \nfetchUserProfile(userName)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:45\n                \n            \n\n\n            \n                \n                    To fetch user details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(key: string | \"timestamp\" | \"best\" | \"saved\" | \"watched\" | \"upvoted\" | \"downvoted\", resetpagination: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | \"timestamp\" | \"best\" | \"saved\" | \"watched\" | \"upvoted\" | \"downvoted\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    resetpagination\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nits used to reset the pagination value based on the filter data\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecentTopics\n                        \n                    \n                \n            \n            \n                \ngetRecentTopics(scrollIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scrollIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logTelemetry\n                        \n                    \n                \n            \n            \n                \nlogTelemetry(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToDiscussionDetails\n                        \n                    \n                \n            \n            \n                \nnavigateToDiscussionDetails(discussionData)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    discussionData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalScrollDown\n                        \n                    \n                \n            \n            \n                \nonModalScrollDown()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/my-discussion/my-discussion.component.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'timestamp'\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discussionList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        elementView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('scrollContainerHeight')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InfiniteScrollConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    modalScrollDistance: 2,\n    modalScrollThrottle: 50\n  }\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.create({})\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recentFilter\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInitial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/my-discussion/my-discussion.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DiscussionService } from './../../services/discussion.service';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { NSDiscussData } from './../../models/discuss.model';\nimport { Router } from '@angular/router';\nimport * as CONSTANTS from '../../common/constants.json';\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { ConfigService } from '../../services/config.service';\nimport { combineLatest } from 'rxjs';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-my-discussion',\n  templateUrl: './my-discussion.component.html',\n  styleUrls: ['./my-discussion.component.scss']\n})\nexport class MyDiscussionComponent implements OnInit {\n\n  @ViewChild('scrollContainerHeight') elementView: ElementRef;\n  data; // this is for user\n  discussionList = []; // this is for posts\n  currentFilter = 'timestamp';\n  department!: string | null;\n  location!: string | null;\n  profilePhoto!: string;\n  userInitial = '';\n  showLoader = false;\n  pagination = Object.create({});\n  recentFilter;\n\n  // Input parameters for infinite scroll\n  InfiniteScrollConfig = {\n    modalScrollDistance: 2,\n    modalScrollThrottle: 50\n  };\n\n  constructor(\n    private discussService: DiscussionService,\n    private configService: ConfigService,\n    public router: Router,\n    private telemetryUtils: TelemetryUtilsService) { }\n\n  /** To fetch user details */\n  fetchUserProfile(userName) {\n    this.discussService.fetchUserProfile(userName).subscribe(response => {\n      this.showLoader = false;\n      console.log(response);\n      this.data = response;\n      if (_.get(this.data, 'posts')) {\n        this.discussionList = _.get(this.data, 'posts').filter(p => (p.isMainPost === true));\n      }\n      // if (this.configSvc.userProfile) {\n      //   localStorage.setItem(this.configSvc.userProfile.userId, this.profilePhoto);\n      // }\n    }, error => {\n      this.showLoader = false;\n      // error code check\n      this.discussService.showTrafficAlert(error);\n      // TODO: Toaster\n      console.log('error fetching user details');\n    });\n  }\n\n  ngOnInit() {\n    this.telemetryUtils.setContext([]);\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.MY_DISCUSSION);\n    this.filter(this.currentFilter, false);\n  }\n\n  /**\n   * @description - set the scroll container height\n   */\n  ngAfterViewChecked() {\n    if (this.elementView && this.elementView.nativeElement && !this.elementView.nativeElement.style.height) {\n      // the number 10 is just a random value to reduce the height of the parent container to the infinite scroll\n      this.elementView.nativeElement.style.height = (this.elementView.nativeElement.clientHeight - 10) + 'px';\n    }\n  }\n  \n  /**\n   * @param  {string|'timestamp'|'best'|'saved'|'watched'|'upvoted'|'downvoted'} key\n   * @param  {boolean} resetpagination - its used to reset the pagination value based on the filter data\n   */\n  filter(key: string | 'timestamp' | 'best' | 'saved' | 'watched' | 'upvoted' | 'downvoted', resetpagination: boolean) {\n    this.currentFilter = key;\n    if (key) {\n      // reset the currentpage value to 1 and reset the discussionList data based on the respective api response when the filter is changed\n      if (resetpagination) {\n        this.discussionList = []\n        this.pagination.currentPage = 1;\n      }\n      // setting the current page index \n      const scrollIndex = this.pagination.currentPage ? this.pagination.currentPage : 1;\n      this.showLoader = true;\n      switch (key) {\n        case 'timestamp':\n          this.getRecentTopics(scrollIndex);\n          break;\n        case 'best':\n          // this.discussionList = _.uniqBy(this.data.bestPosts, 'tid');\n          this.discussService.fetchBestPost(scrollIndex).subscribe(result => {\n            if (result) {\n              const bestPost = result['posts'].filter(p => (p.isMainPost === true));\n              this.discussionList = [...this.discussionList, ...bestPost];\n              this.pagination = _.get(result, 'pagination');\n              this.showLoader = false;\n            } else {\n              this.showLoader = false;\n              this.discussionList = [];\n            }\n          }, error => {\n            // error code check\n            this.discussService.showTrafficAlert(error);\n          });\n          break;\n        case 'saved':\n          this.discussService.fetchSaved(scrollIndex).subscribe(response => {\n            if (response) {\n              // this.discussionList = _.uniqBy(response['posts'], 'tid');\n              this.discussionList = [...this.discussionList, ...response['posts']];\n              this.pagination = _.get(response, 'pagination');\n              this.showLoader = false;\n            } else {\n              this.showLoader = false;\n              this.discussionList = [];\n            }\n          },\n            // tslint:disable-next-line\n            (error) => {\n              // error code check\n              this.discussService.showTrafficAlert(error);\n              this.discussionList = [];\n            })\n          break;\n        case 'watched':\n          this.showLoader = false;\n          this.discussionList = [];\n          break;\n        case 'upvoted':\n          this.discussService.fetchUpvoted(scrollIndex).subscribe(response => {\n            if (response) {\n              // this.discussionList = _.uniqBy(response['posts'], 'tid');\n              const upvoted = response['posts'].filter(p => (p.isMainPost === true));\n              this.pagination = _.get(response, 'pagination');\n              this.discussionList = [...this.discussionList, ...upvoted];\n              this.showLoader = false;\n            } else {\n              this.showLoader = false;\n              this.discussionList = [];\n            }\n          },\n            // tslint:disable-next-line\n            (error) => {\n              this.discussionList = [];\n              // error code check\n              this.discussService.showTrafficAlert(error);\n            });\n\n          break;\n        case 'downvoted':\n          this.discussService.fetchDownvoted(scrollIndex).subscribe(response => {\n            if (response) {\n              // this.discussionList = _.uniqBy(response['posts'], 'tid');\n              const downvoted = response['posts'].filter(p => (p.isMainPost === true));\n              this.discussionList = [...this.discussionList, ...downvoted];\n              this.pagination = _.get(response, 'pagination');\n              this.showLoader = false;\n            } else {\n              this.showLoader = false;\n              this.discussionList = [];\n            }\n          },\n            // tslint:disable-next-line\n            (error) => {\n              this.discussionList = [];\n              // error code check\n              this.discussService.showTrafficAlert(error);\n            });\n          break;\n        default:\n          // this.discussionList = _.uniqBy(this.data.latestPosts, 'tid');\n          this.pagination = _.get(this.data, 'pagination');\n          this.discussionList = _.get(this.data, 'latestPosts');\n          break;\n      }\n    }\n  }\n\n  navigateToDiscussionDetails(discussionData) {\n    console.log('discussionData', discussionData);\n    const slug = _.get(discussionData, 'slug') || _.get(discussionData, 'topic.slug')\n    this.router.navigate([`${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.TOPIC}${slug}`]);\n  }\n\n  logTelemetry(event) {\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.MY_DISCUSSION);\n  }\n\n  /**\n   * @description - getting the recent post data\n   * @param  {number} scrollIndex\n   */\n  getRecentTopics(scrollIndex: number) {\n    const userId = this.discussService.userId;\n    // const userSlug = this.discussService.userDetails.userslug;\n    combineLatest([\n      this.discussService.fetchUserProfile(userId),\n      this.discussService.fetchRecentPost(scrollIndex)\n    ]).subscribe(result => {\n      console.log('getRecentTopics', result)\n      this.showLoader = false;\n      this.data = _.merge(result[0], result[1]);\n      this.discussionList = [...this.discussionList, ...(_.get(this.data, 'posts'))];\n      this.discussionList = this.discussionList.filter(p => (p.isMainPost === true));\n      this.pagination = _.get(this.data, 'pagination');\n    }, error => {\n      this.showLoader = false;\n      console.log(error);\n    });\n  }\n  \n  /**\n   * @description - call the topic get api when scrolled down and setting the limit of API Call\n   */\n  onModalScrollDown() {\n    if (this.pagination.currentPage !== this.pagination.pageCount) {\n        this.pagination.currentPage = this.pagination.next.page;\n        const resetpagination = false;\n        // using settimeout to avoid the function call before getting the pagination response from api, \n        // because the api is called twice with the same page index\n        setTimeout(() => {\n          this.filter(this.currentFilter, resetpagination)\n        }, 800); \n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{ data?.username | splitInitials }}\n      \n    \n    \n      \n      {{ department }}\n      {{ location }}\n      {{ data?.email || data?.username }}\n      \n        \n          \n            \n              {{ data?.topiccount || 0 }}\n              Discussions\n            \n            \n              {{ data?.postcount || 0 }}\n              Posts\n            \n          \n          \n            \n            Last online {{data?.lastonline | pipeRelativeTime}} -->\n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          Recent posts\n        \n        \n          Best posts\n        \n        \n          Saved posts\n        \n        \n            Watched  -->\n        \n          Upvoted\n        \n\n        \n          Downvoted\n        \n      \n    \n  \n\n\n 0\" class=\"topic-list-container\" id=\"topic-scroll\"\n  #scrollContainerHeight>\n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n 0)\">\n  \n    No Data\n    \n      &nbsp;\n    \n  \n\n    \n\n    \n                \n                    ./my-discussion.component.scss\n                \n                ::ng-deep:root {\n  --df-box-text:var(--white); \n  --df-profile-bg: var(--primary-400);\n}\n\n.profileCard {\n  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14),\n    0 1px 3px 0 rgba(0, 0, 0, 0.12);\n  background: var(--df-card-bg);\n  color: var(--df-text);\n  flex: 1;\n  height: auto;\n  margin-bottom: 0px;\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: block;\n  position: relative;\n  padding: 1rem;\n  border-radius: 0.25rem;\n  width: auto;\n\n  .profile-card-content {\n    display: flex;\n    flex-wrap: wrap;\n\n    .profile-header-image {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      border-radius: 0.25rem;\n      max-width: 9.5rem;\n      height: 8.4375rem;\n      border: 0.0625rem solid var(--gray-100);\n      margin-right: 1.5rem;\n      background: var(--df-profile-bg);\n      text-align: center;\n      .box-text {\n        font-size: 4rem;\n        color: var(--df-box-text);\n        text-transform: uppercase;\n\n        .box-label {\n          color: var(--white);\n          font-size: 1rem;\n          line-height: 0.75rem;\n          letter-spacing: 0.2625px;\n          text-transform: uppercase;\n        }\n      }\n    }\n\n    .profile-label {\n      font-weight: 700;\n      margin-bottom: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .name {\n      font-size: 1rem;\n    }\n\n    .my-discuss-topics {\n      font-size: 0.875rem;\n      margin: 1rem 0;\n      font-weight: 600;\n      &__content {\n        display: flex;\n        .my-discussion-label {\n          margin: 0 0.5rem;\n          .number {\n            color: var(--primary-300);\n          }\n        }\n        .post-count-area {\n          margin-left: 2rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ data?.username | splitInitials }}                          {{ department }}      {{ location }}      {{ data?.email || data?.username }}                                                  {{ data?.topiccount || 0 }}              Discussions                                      {{ data?.postcount || 0 }}              Posts                                                        Last online {{data?.lastonline | pipeRelativeTime}} -->                                                            Recent posts                          Best posts                          Saved posts                            Watched  -->                  Upvoted                          Downvoted                     0\" class=\"topic-list-container\" id=\"topic-scroll\"  #scrollContainerHeight>                                   0)\">      No Data                 '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyDiscussionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationServiceService.html":{"url":"injectables/NavigationServiceService.html","title":"injectable - NavigationServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/navigation-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initService\n                            \n                            \n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wrapperService: WrapperNavigateService, routerService: RouterServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/navigation-service.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wrapperService\n                                                  \n                                                        \n                                                                        WrapperNavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerService\n                                                  \n                                                        \n                                                                        RouterServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initService\n                        \n                    \n                \n            \n            \n                \ninitService(wrapperService: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/navigation-service.service.ts:18\n                \n            \n\n\n            \n                \n                    used to intialize the navigation service with the wrapperservice or routerservice\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wrapperService\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(input)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/navigation-service.service.ts:25\n                \n            \n\n\n            \n                \n                    used for navigating  to the other pages based on the service initalized\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"routerService\"\n                    \n                \n                    \n                        \n                                Defined in src/lib/navigation-service.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { RouterServiceService } from './router-service.service';\nimport { WrapperNavigateService } from './wrapper-navigate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationServiceService {\n\n  navigateService: any = \"routerService\"\n\n  \n  constructor(private wrapperService: WrapperNavigateService,private routerService:  RouterServiceService) { }\n  /**\n   * used to intialize the navigation service with the wrapperservice or routerservice \n   * @param  {string} wrapperService\n   */\n  initService(wrapperService: string) {\n    this.navigateService = wrapperService\n   }\n   /**\n    * used for navigating  to the other pages based on the service initalized\n    * @param  {} input\n    */\n   navigate(input){\n     if(this.navigateService === 'routerService'){\n       this.routerService.navigate(input)\n     }else{\n       this.wrapperService.navigate(input)\n     }\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PipeFilterPipe.html":{"url":"pipes/PipeFilterPipe.html","title":"pipe - PipeFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PipeFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/pipe-filter/pipe-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pipeFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, keys: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/pipe-filter/pipe-filter.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keys\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pipeFilter'\n})\nexport class PipeFilterPipe implements PipeTransform {\n\n  transform(value: any, keys: string, term: string): string {\n    if (!term) {\n      return value;\n    }\n    return (value || []).filter((item: any) => keys.split(',')\n      .some(key => item.hasOwnProperty(key) && new RegExp(`^${term}$`, 'gi').test(item[key])));\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PipeListFilterPipe.html":{"url":"pipes/PipeListFilterPipe.html","title":"pipe - PipeListFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PipeListFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/pipe-list-filter/pipe-list-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pipeListFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, keys: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/pipe-list-filter/pipe-list-filter.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keys\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'pipeListFilter',\n})\nexport class PipeListFilterPipe implements PipeTransform {\n\n  transform(value: any, keys: string, term: string): string {\n    if (!term) {\n      return value\n    }\n    return (value || []).filter((item: any) => keys.split(',')\n      .some(key => item.hasOwnProperty(key)\n        && item[key] && (`${item[key]} `).toLocaleLowerCase().includes(term.toLocaleLowerCase())))\n    // new RegExp(`^${term}$`, 'gi').test(item[key])\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PipeRelativeTimePipe.html":{"url":"pipes/PipeRelativeTimePipe.html","title":"pipe - PipeRelativeTimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PipeRelativeTimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/pipe-relative-time/pipe-relative-time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pipeRelativeTime\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/pipe-relative-time/pipe-relative-time.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pipeRelativeTime',\n})\nexport class PipeRelativeTimePipe implements PipeTransform {\n  transform(value: number): any {\n\n    if (value) {\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n      if (seconds  0)\n          if (counter === 1) {\n            return counter + ' ' + i + ' ago'; // singular (1 day ago)\n          } else {\n            return counter + ' ' + i + 's ago'; // plural (2 days ago)\n          }\n      }\n    }\n    return value;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nPipeFilterPipe\n\nPipeFilterPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nPipeFilterPipe->PipesModule\n\n\n\n\n\nPipeListFilterPipe\n\nPipeListFilterPipe\n\nPipesModule -->\n\nPipeListFilterPipe->PipesModule\n\n\n\n\n\nPipeRelativeTimePipe\n\nPipeRelativeTimePipe\n\nPipesModule -->\n\nPipeRelativeTimePipe->PipesModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nPipesModule -->\n\nSortByPipe->PipesModule\n\n\n\n\n\nSplitInitialsPipe\n\nSplitInitialsPipe\n\nPipesModule -->\n\nSplitInitialsPipe->PipesModule\n\n\n\n\n\nPipeFilterPipe \n\nPipeFilterPipe \n\nPipeFilterPipe  -->\n\nPipesModule->PipeFilterPipe \n\n\n\n\n\nPipeListFilterPipe \n\nPipeListFilterPipe \n\nPipeListFilterPipe  -->\n\nPipesModule->PipeListFilterPipe \n\n\n\n\n\nPipeRelativeTimePipe \n\nPipeRelativeTimePipe \n\nPipeRelativeTimePipe  -->\n\nPipesModule->PipeRelativeTimePipe \n\n\n\n\n\nSortByPipe \n\nSortByPipe \n\nSortByPipe  -->\n\nPipesModule->SortByPipe \n\n\n\n\n\nSplitInitialsPipe \n\nSplitInitialsPipe \n\nSplitInitialsPipe  -->\n\nPipesModule->SplitInitialsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PipeFilterPipe\n                        \n                        \n                            PipeListFilterPipe\n                        \n                        \n                            PipeRelativeTimePipe\n                        \n                        \n                            SortByPipe\n                        \n                        \n                            SplitInitialsPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PipeFilterPipe\n                        \n                        \n                            PipeListFilterPipe\n                        \n                        \n                            PipeRelativeTimePipe\n                        \n                        \n                            SortByPipe\n                        \n                        \n                            SplitInitialsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PipeFilterPipe } from './pipe-filter/pipe-filter.pipe';\nimport { SortByPipe } from './sort-by/sort-by.pipe';\nimport { PipeRelativeTimePipe } from './pipe-relative-time/pipe-relative-time.pipe';\nimport { SplitInitialsPipe } from './split-initials/split-initials.pipe';\nimport { PipeListFilterPipe } from './pipe-list-filter/pipe-list-filter.pipe';\n\n\n@NgModule({\n  declarations: [PipeFilterPipe, SortByPipe, PipeRelativeTimePipe, SplitInitialsPipe, PipeListFilterPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [PipeFilterPipe, SortByPipe, PipeRelativeTimePipe, SplitInitialsPipe, PipeListFilterPipe]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostReplyComponent.html":{"url":"components/PostReplyComponent.html","title":"component - PostReplyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostReplyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/post-reply/post-reply.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-post-reply\n            \n\n\n\n            \n                styleUrls\n                ./post-reply.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-reply.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isButtonEnabled\n                            \n                            \n                                replyForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeFormFields\n                            \n                            \n                                isFieldValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancelClick\n                            \n                            \n                                onReplyClick\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                mode\n                            \n                            \n                                showCancel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: UntypedFormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/post-reply/post-reply.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/post-reply/post-reply.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'add'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/post-reply/post-reply.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showCancel\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/post-reply/post-reply.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actionEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/post-reply/post-reply.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeFormFields\n                        \n                    \n                \n            \n            \n                \ninitializeFormFields()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/post-reply/post-reply.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldValid\n                        \n                    \n                \n            \n            \n                \nisFieldValid(field)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/post-reply/post-reply.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/post-reply/post-reply.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \nonCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/post-reply/post-reply.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onReplyClick\n                        \n                    \n                \n            \n            \n                \nonReplyClick(mode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/post-reply/post-reply.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n            \n                \nvalidateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/post-reply/post-reply.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/post-reply/post-reply.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replyForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/post-reply/post-reply.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-post-reply',\n  templateUrl: './post-reply.component.html',\n  styleUrls: ['./post-reply.component.css']\n})\nexport class PostReplyComponent implements OnInit {\n  @Input() showCancel = true;\n  @Input() mode = 'add';\n  @Input() content: string;\n\n  @Output() actionEvent = new EventEmitter();\n\n  replyForm!: UntypedFormGroup;\n\n  isButtonEnabled = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder\n  ) { }\n\n  ngOnInit() {\n    console.log('conent came', this.content);\n    this.initializeFormFields();\n  }\n\n  initializeFormFields() {\n    this.replyForm = this.formBuilder.group({\n      replyContent: ['', Validators.required]\n    });\n    this.replyForm.valueChanges.subscribe(val => {\n      this.isButtonEnabled = this.validateForm();\n    });\n  }\n\n  validateForm() {\n    if (this.replyForm.status === 'VALID') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isFieldValid(field) {\n    let valueNoWhiteSpace = this.replyForm.get(field).value;\n    if (valueNoWhiteSpace) {\n      const length = valueNoWhiteSpace.length;\n      if (length >= 2 && valueNoWhiteSpace.charAt(length - 2) === \" \") {\n        this.replyForm.patchValue({ replyContent: this.replyForm.get(field).value.trim() });\n      } else {\n        this.replyForm.patchValue({ replyContent: this.replyForm.get(field).value.trimStart() })\n      }\n  }\n    return !this.replyForm.get(field).valid && this.replyForm.get(field).dirty;\n  }\n\n  onReplyClick(mode: string) {\n    // tslint:disable-next-line:no-string-literal\n    this.actionEvent.emit({action: mode, content: this.replyForm.controls['replyContent'].value.trim()});\n  }\n\n  onCancelClick() {\n    this.actionEvent.emit({action: 'cancel'});\n  }\n\n}\n\n    \n\n    \n        \n  \n    Your answer here\n    \n  \n  \n\n\n    \n      Cancel\n    \n    \n      Update\n    \n    \n      Post Reply\n    \n\n    \n\n    \n                \n                    ./post-reply.component.css\n                \n                .text-form-field{\n    display: flex;\n    flex-direction: column;\n    /* width: 97.6%;   */\n}\n\n.text-form-label{\n    font-size: 0.875rem;\n    margin-bottom: 1rem;\n}\n\n.text-content{\n    min-height: 6.75rem;\n    max-height: 33.75rem;\n    margin-bottom: 0.875rem;\n    background-color: var(--df-field-control-bg);\n    border: 0.0625rem solid var(--gray-200);\n    border-radius: 0.1875rem;\n    color: var(--df-text);\n    display: block;\n    font-size: .8125rem;\n    font-family: sans-serif;\n    position: relative;\n    cursor: pointer;\n    outline: 0;\n    padding: 0.5rem 0.875rem;\n}\n\n.updatePostActions {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom:1rem;\n}\n\n.df-update-btn,.df-post-reply-btn{\n    margin: 0.5rem 0;\n}\n\n.cancel-update-post {\n    margin-right: 20px;\n}\n\n.df-btn-disabled {\n    background-color: var(--gray-100);\n    border: solid var(--gray-100);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Your answer here                  Cancel              Update              Post Reply    '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostReplyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedDiscussionComponent.html":{"url":"components/RelatedDiscussionComponent.html","title":"component - RelatedDiscussionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RelatedDiscussionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/related-discussion/related-discussion.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-related-discussion\n            \n\n\n\n            \n                styleUrls\n                ./related-discussion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./related-discussion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetchSingleCategoryLoader\n                            \n                            \n                                relatedDiscussions\n                            \n                            \n                                similarPosts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchRelatedDiscussionData\n                            \n                            \n                                getDiscussion\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                catId\n                            \n                            \n                                topicId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, configService: ConfigService, discussionService: DiscussionService, navigationService: NavigationServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/related-discussion/related-discussion.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        catId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        topicId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRelatedDiscussionData\n                        \n                    \n                \n            \n            \n                \nfetchRelatedDiscussionData(cid: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiscussion\n                        \n                    \n                \n            \n            \n                \ngetDiscussion(discuss)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    discuss\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/related-discussion/related-discussion.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSingleCategoryLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/related-discussion/related-discussion.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relatedDiscussions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/related-discussion/related-discussion.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        similarPosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/related-discussion/related-discussion.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport _ from 'lodash-es';\nimport { DiscussionService } from '../../services/discussion.service';\nimport { ConfigService } from '../../services/config.service';\nimport * as CONSTANTS from './../../common/constants.json';\nimport { NSDiscussData } from './../../models/discuss.model';\nimport { NavigationServiceService } from '../../navigation-service.service';\n\n@Component({\n  selector: 'lib-related-discussion',\n  templateUrl: './related-discussion.component.html',\n  styleUrls: ['./related-discussion.component.scss'],\n  // host: { class: 'margin-left-l' },\n})\nexport class RelatedDiscussionComponent implements OnInit, OnChanges {\n  @Input() catId: any;\n  @Input() topicId: any;\n\n  @Output() stateChange: EventEmitter = new EventEmitter();\n\n  relatedDiscussions: any[];\n  fetchSingleCategoryLoader = false;\n  similarPosts: any;\n\n  constructor(\n    private router: Router,\n    private configService: ConfigService,\n      private discussionService: DiscussionService,\n      private navigationService: NavigationServiceService\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (this.catId) {\n      this.fetchRelatedDiscussionData(this.catId)\n    }\n  }\n\n  fetchRelatedDiscussionData(cid: number) {\n    this.fetchSingleCategoryLoader = true;\n    this.discussionService.fetchSingleCategoryDetails(cid).subscribe(\n      (data: NSDiscussData.ICategoryData) => {\n        this.relatedDiscussions = [];\n        _.filter(data.topics, (topic) => {\n          if (topic.deleted === 0 && this.topicId !== topic.tid) {\n            this.relatedDiscussions.push(topic);\n          }\n        })\n        this.fetchSingleCategoryLoader = false;\n      },\n      (err: any) => {\n        console.log('Error in fetching category details')\n        // this.openSnackbar(err.error.message.split('|')[1] || this.defaultError)\n        this.fetchSingleCategoryLoader = false;\n      });\n  }\n\n  getDiscussion(discuss) {\n    const input = { data: { url: `${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.DISCUSSION}topic/${discuss.slug}`, queryParams: {} } }\n    this.navigationService.navigate(input);\n    this.stateChange.emit(discuss);\n  }\n\n\n}\n\n    \n\n    \n        Related discussions\n 0\">\n    \n        \n        \n        \n            \n            \n            {{ discussion.timestamp | pipeRelativeTime }}\n        \n    \n\n    \n\n    \n                \n                    ./related-discussion.component.scss\n                \n                ::ng-deep:root{\n    --df-related-card-bg:var(--df-background);\n}\n\n.related-discuss-card {\n\tpadding: 1rem;\n    display: flex;\n\tbox-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12);\n    background: var(--df-related-card-bg);\n    color: var(--df-text);\n    margin-bottom: 1rem;\n    flex-direction: column;\n\tmax-width: 18.75rem;\n\t@media (max-width: 768px) {\n     max-width: 100%;\n\t}\n}\n\n.related-discuss-label{\n    font-weight: bold;\n\tmargin: 0 0 1rem 0;\n    color: var(--df-text);\n\t@media (max-width: 768px) {\n\t\tmargin: 1rem 0;\n\t   }\n}\n\n.related-discuss-card-content {\n\tmargin: 0;\n    cursor: pointer;\n    font-size: 0.875rem;\n    font-weight: 700;\n    word-break: break-all;\n}\n\n.related-discuss-card-description {\n\tdisplay: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    font-size: 0.875rem;\n\tflex-wrap: wrap;\n    margin-top: 0.5rem;\n    .dot{\n        height: 0.375rem;\n        width: 0.375rem;\n        background-color: var(--gray-400);\n        border-radius: 50%;\n        display: inline-block;\n        margin: 0 0.5rem;\n        position: relative;\n        bottom: 0;\n      }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Related discussions 0\">                                                                {{ discussion.timestamp | pipeRelativeTime }}            '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedDiscussionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterServiceService.html":{"url":"injectables/RouterServiceService.html","title":"injectable - RouterServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/router-service.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(input)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/router-service.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/router-service.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterServiceService {\n\n  constructor(public router: Router) { }\n\n  navigate(input) {\n    // this.router.navigate(url)\n    this.router.navigate([input.data.url], { queryParams: input.data.queryParams, queryParamsHandling: \"merge\" })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidePannelComponent.html":{"url":"components/SidePannelComponent.html","title":"component - SidePannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidePannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/side-pannel/side-pannel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-side-pannel\n            \n\n\n\n            \n                styleUrls\n                ./side-pannel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-pannel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                data\n                            \n                            \n                                defaultPage\n                            \n                            \n                                    Public\n                                discussService\n                            \n                            \n                                hideSidePanel\n                            \n                            \n                                landingPage\n                            \n                            \n                                menu\n                            \n                            \n                                paramsSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTab\n                            \n                            \n                                showSideMenu\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeNav\n                            \n                            \n                                isActive\n                            \n                            \n                                navigate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showMenuButton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, discussService: DiscussionService, activatedRoute: ActivatedRoute, telemetryUtils: TelemetryUtilsService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeNav\n                        \n                    \n                \n            \n            \n                \ncloseNav()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/side-pannel/side-pannel.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(selectedItem)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/side-pannel/side-pannel.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedItem\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(pageName: string, event?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/side-pannel/side-pannel.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/side-pannel/side-pannel.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/side-pannel/side-pannel.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMenuButton\n                        \n                    \n                \n            \n            \n                \nshowMenuButton()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/side-pannel/side-pannel.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discussService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscussionService\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideSidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        landingPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSideMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/side-pannel/side-pannel.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NSDiscussData } from './../../models/discuss.model';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { DiscussionService } from './../../services/discussion.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as CONSTANTS from './../../common/constants.json';\n\n/* tslint:disable */\nimport * as _ from 'lodash'\nimport { first } from 'rxjs/operators';\nimport { ConfigService } from '../../services/config.service';\nimport { IdiscussionConfig, IMenuOptions } from '../../models/discussion-config.model';\n/* tslint:enable */\n\n@Component({\n  selector: 'lib-side-pannel',\n  templateUrl: './side-pannel.component.html',\n  styleUrls: ['./side-pannel.component.scss']\n})\nexport class SidePannelComponent implements OnInit, OnDestroy {\n\n  paramsSubscription: Subscription;\n\n  userName: string;\n\n  defaultPage = 'categories';\n\n  data: IdiscussionConfig;\n  hideSidePanel: boolean;\n  menu: Array = [];\n  selectedTab: string;\n  showSideMenu: Boolean = true;\n  landingPage: string\n\n  constructor(\n    public router: Router,\n    public discussService: DiscussionService,\n    public activatedRoute: ActivatedRoute,\n    private telemetryUtils: TelemetryUtilsService,\n    private configService: ConfigService\n  ) { }\n\n  ngOnInit() {\n    // TODO: loader or spinner\n    this.telemetryUtils.setContext([]);\n    this.hideSidePanel = document.body.classList.contains('widget');\n    this.telemetryUtils.logImpression(NSDiscussData.IPageName.HOME);\n    this.data = this.configService.getConfig();\n    const menuArr = _.get(this.data, 'menuOptions') && _.get(this.data, 'menuOptions').length > 0\n      ? this.data.menuOptions : CONSTANTS.MENUOPTIONS;\n    // })\n    for (let i = 0; i  -1 || this.selectedTab === selectedItem) {\n      if (!this.selectedTab) {\n        this.selectedTab = selectedItem\n      }\n      return true\n    } else if (selectedItem === this.landingPage && !this.selectedTab) {\n      return true\n    }\n    return false\n  }\n\n  navigate(pageName: string, event?) {\n    this.selectedTab = pageName;\n    this.telemetryUtils.setContext([]);\n    if (event) {\n      this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.HOME);\n    }\n    this.router.navigate([`${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.DISCUSSION}${pageName}`], { queryParamsHandling: \"merge\" });\n    this.closeNav();\n  }\n\n  ngOnDestroy() {\n    if (this.paramsSubscription) {\n      this.paramsSubscription.unsubscribe();\n    }\n  }\n\n  showMenuButton() {\n    this.showSideMenu = this.showSideMenu ? false : true;\n  }\n\n  closeNav() {\n    this.showSideMenu = this.showSideMenu ? false : true;\n  }\n\n}\n\n    \n\n    \n        \n  All discussions -->\n  {{d.label}}\n    Leaderboard -->\n\n\n\n☰ \n\n  \n      &times;\n      \n        \n          {{d.label}}\n          All discussions\n          Categories\n          Tags\n          My discussions -->\n      \n      \n  \n\n    \n\n    \n                \n                    ./side-pannel.component.scss\n                \n                ::ng-deep:root {\n  --df-sidebar-menu-text: var(--gray-600);\n  --df-sidebar-menu-active-text: var(--primary);\n  --df-sidebar-menu-bl:var(--primary);\n  --df-sidebar-menu-active-bg: var(--df-common-bg);\n  --open-btn-bg: var(--white);\n  --open-btn-color: var(--gray-800); // hamburger menu\n  --df-overlay-sidebar-bg:var(--black);\n  --df-overlay-sidebar-bg-menu:#f5f6fa;\n}\n\n.sb-sidebar-menu {\n  list-style-type: none;\n  margin-bottom: 0;\n  height: 100%;\n  display: inline;\n}\n\n.df-sidebar-menu-list {\n  margin-bottom: 0.5rem;\n  padding: 0.75rem 1rem;\n  font-size: 14px;\n  color: var(--df-sidebar-menu-text);\n  cursor: pointer;\n  border-left: 0.125rem solid transparent;\n  cursor: pointer;\n\n  &.menu-active,\n  &:hover {\n    background-color: var(--df-sidebar-menu-active-bg);\n    font-weight: 700;\n    border-left: 0.1875rem solid var(--df-sidebar-menu-bl);\n    color: var(--df-sidebar-menu-active-text);\n    border-bottom: 0px;\n  }\n}\n.sb-sidebar-menu-mob {\n  list-style-type: none;\n  margin-bottom: 0;\n  height: 100%;\n  display: inline;\n}\n\n.open-btn,\n.overlay-sidebar {\n  display: none;\n}\n\n@media (max-width: 768px) {\n  .sb-sidebar-menu {\n    display: none;\n  }\n\n  .open-btn {\n    display: inline;\n    border: none;\n    cursor: pointer;\n    height: 2.5rem;\n    width: 2.5rem;\n    border-radius: 1rem;\n    font-size: 1.375rem;\n    background-color: var(--open-btn-bg);\n    box-shadow: 3px 3px 2px 0 rgba(0, 0, 0, 0.1);\n    color: var(--open-btn-color);\n  }\n\n  .overlay-sidebar {\n    height: 100vh;\n    width: 100%;\n    overflow: hidden;\n    background: rgba(0, 0, 0, .4);\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    position: absolute;\n    display: inline;\n    z-index: 3;\n    transition-duration: 0.4s;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n    transition-property: background-color, visibility;\n\n    &__menu {\n      position: relative;\n      top: 0;\n      height: 100%;\n      width: 15rem;\n      right: 0;\n      z-index: 100000;\n      overflow-y: auto;\n      overflow-x: hidden;\n      background-color: var(--df-overlay-sidebar-bg-menu);\n      box-shadow: 0 8px 10px -5px rgba(0, 0, 0, 0.2),\n        0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 1);\n\n      .close-btn {\n        font-size: 2.5rem;\n        display: flex;\n        justify-content: flex-end;\n        padding-right: 1rem;\n        cursor: pointer;\n      }\n      &__content {\n        padding: 0 1rem;\n        height: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  All discussions -->  {{d.label}}    Leaderboard -->☰         ×                        {{d.label}}          All discussions          Categories          Tags          My discussions -->              '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidePannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidersComponent.html":{"url":"components/SlidersComponent.html","title":"component - SlidersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/elements/sliders/sliders.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ws-widget-sliders\n            \n\n\n\n            \n                styleUrls\n                ./sliders.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sliders.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentIndex\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                slideInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openInNewTab\n                            \n                            \n                                reInitiateSlideInterval\n                            \n                            \n                                slideTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bannerData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOpenInNewTab\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/elements/sliders/sliders.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bannerData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/elements/sliders/sliders.component.ts:12\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `banner_${Math.random()}`\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/sliders/sliders.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/sliders/sliders.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInNewTab\n                        \n                    \n                \n            \n            \n                \nopenInNewTab()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/sliders/sliders.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reInitiateSlideInterval\n                        \n                    \n                \n            \n            \n                \nreInitiateSlideInterval()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/sliders/sliders.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideTo\n                        \n                    \n                \n            \n            \n                \nslideTo(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/elements/sliders/sliders.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/sliders/sliders.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `banner_${Math.random()}`\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('id')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/sliders/sliders.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/elements/sliders/sliders.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpenInNewTab\n                    \n                \n\n                \n                    \n                        getisOpenInNewTab()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/elements/sliders/sliders.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core'\n// import { NsWidgetResolver, WidgetBaseComponent } from '@sunbird-cb/resolver'\nimport { Subscription, interval } from 'rxjs'\n// import { EventService } from '@sunbird-cb/utils'\n\n@Component({\n  selector: 'ws-widget-sliders',\n  templateUrl: './sliders.component.html',\n  styleUrls: ['./sliders.component.scss'],\n})\nexport class SlidersComponent implements OnInit {\n  @Input() bannerData: any\n  @HostBinding('id')\n  public id = `banner_${Math.random()}`\n  currentIndex = 0\n  slideInterval: Subscription | null = null\n\n  constructor() {\n    // super()\n  }\n\n  ngOnInit() {\n    this.reInitiateSlideInterval()\n  }\n  reInitiateSlideInterval() {\n    console.log('---------------', this.bannerData)\n    if (this.bannerData.widgetData.length > 1) {\n      try {\n        if (this.slideInterval) {\n          this.slideInterval.unsubscribe()\n        }\n      } catch (e) {\n      } finally {\n        this.slideInterval = interval(8000).subscribe(() => {\n          if (this.currentIndex === this.bannerData.widgetData.length - 1) {\n            this.currentIndex = 0\n          } else {\n            this.currentIndex += 1\n          }\n        })\n      }\n    }\n  }\n  slideTo(index: number) {\n    if (index >= 0 && index \n    \n\n    \n         1\">\n\n    \n        {{slide.banners | json}}\n        \n    \n    \n        \n            {{ widgetData[currentIndex].title }}\n         -->\n         1\">\n            \n        \n    \n     1\" role=\"button\" class=\"prev\" (click)=\"slideTo(currentIndex - 1)\">&#10094;\n     1\" role=\"button\" class=\"next\" (click)=\"slideTo(currentIndex + 1)\">&#10095;\n\n\n    \n\n\n    \n\n    \n                \n                    ./sliders.component.scss\n                \n                $banner-min-height: 243px;\n\n.banner-container {\n\t// max-height: 442px;\n\tmin-height: $banner-min-height;\n\toverflow: hidden;\n\tposition: relative;\n\tmargin: auto;\n\tborder-radius: 12px;\n}\n\n.banner-overlay {\n\tposition: absolute;\n\tz-index: 1;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: linear-gradient(\n\t\tto left,\n\t\trgba(0, 0, 0, 0.25) 0%,\n\t\trgba(0, 0, 0, 0) 15%,\n\t\trgba(0, 0, 0, 0) 85%,\n\t\trgba(0, 0, 0, 0.25) 100%\n\t);\n\t// linear-gradient(\n\t//   to bottom,\n\t//   rgba(0, 0, 0, 0) 0%,\n\t//   rgba(0, 0, 0, 0.15) 75%,\n\t//   rgba(0, 0, 0, 0.5) 100%\n\t// );\n}\n\n.banner {\n\t-webkit-animation-name: fade;\n\t-webkit-animation-duration: 1.5s;\n\tanimation-name: fade;\n\tanimation-duration: 1.5s;\n\n\t.banner-image {\n\t\twidth: 100%;\n\t\tmin-height: $banner-min-height;\n\t\tdisplay: block;\n\t\theight: 350px;\n\t\tborder-radius: 12px;\n\t}\n}\n\n.banner-meta {\n\ttext-align: center;\n\tz-index: 2;\n\t// padding: $size-xs $size-s;\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 50%;\n\tborder-radius: 12px;\n\ttransform: translateX(-50%);\n\tbox-sizing: border-box;\n\n\t.banner-title {\n\t\tcolor: #f2f2f2;\n\t\t// margin-bottom: $size-xs;\n\t\tfont-size: 1.1rem;\n\n\t\t// @include breakpoint-xs {\n\t\t// \tdisplay: none;\n\t\t// }\n\t}\n\n\t.dots-container {\n\t\t// padding: $size-xs;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\t.dot {\n\t\t\tcursor: pointer;\n\t\t\t// height: $size-m;\n\t\t\t// width: $size-m;\n\t\t\tmargin: 0 6px;\n\t\t\tbackground-color: rgba(120, 120, 120, 0.75);\n\t\t\tbox-shadow: 1px 1px 4px rgba(0, 0, 0, 0.6);\n\t\t\tborder-radius: 50%;\n\t\t\tdisplay: inline-block;\n\t\t\ttransition: background-color 0.5s ease !important;\n\n\t\t\t// @include breakpoint-xs {\n\t\t\t// \theight: $size-xs;\n\t\t\t// \twidth: $size-xs;\n\t\t\t// \tmargin: 0 4px;\n\t\t\t// }\n\t\t}\n\n\t\t.dot.active {\n\t\t\tbackground-color: #d3d3d3;\n\t\t\t// height: $size-m + ($size-xs / 4);\n\t\t\t// width: $size-m + ($size-xs / 4);\n\n\t\t\t// @include breakpoint-xs {\n\t\t\t// \theight: $size-xs + ($size-xs / 4);\n\t\t\t// \twidth: $size-xs + ($size-xs / 4);\n\t\t\t// }\n\t\t}\n\t}\n}\n\n@-webkit-keyframes fade {\n\tfrom {\n\t\topacity: 0.25;\n\t}\n\n\tto {\n\t\topacity: 1;\n\t}\n}\n\n@keyframes fade {\n\tfrom {\n\t\topacity: 0.25;\n\t}\n\n\tto {\n\t\topacity: 1;\n\t}\n}\n\n.prev,\n.next {\n\tcursor: pointer;\n\tposition: absolute;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\t// padding: $size-m;\n\tcolor: white;\n\tfont-weight: bold;\n\t// font-size: $size-l;\n\tz-index: 2;\n\tborder-radius: 0 3px 3px 0;\n}\n\n.next {\n\tright: 0;\n\tborder-radius: 3px 0 0 3px;\n}\n\n.banner-container-solo {\n\toverflow: hidden;\n\tmargin: auto;\n\tborder-radius: 12px;\n}\n\n.banner-image-solo {\n\twidth: 100%;\n\tdisplay: block;\n\tborder-radius: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 1\">            {{slide.banners | json}}                                    {{ widgetData[currentIndex].title }}         -->         1\">                             1\" role=\"button\" class=\"prev\" (click)=\"slideTo(currentIndex - 1)\">❮     1\" role=\"button\" class=\"next\" (click)=\"slideTo(currentIndex + 1)\">❯    '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlidersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortByPipe.html":{"url":"pipes/SortByPipe.html","title":"pipe - SortByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/sort-by/sort-by.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sortBy\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(data: any[], sortField: string, sortOrder: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/sort-by/sort-by.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sortField\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sortOrder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/* tslint:disable */\nimport { orderBy } from 'lodash-es';\n/* tslint:enable */\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe implements PipeTransform {\n\n  transform(data: any[], sortField: string, sortOrder: string): any[] {\n    if (!data || !data.length || sortOrder === '' || !sortOrder) { return data; }\n    if (!sortField || sortField === '') {\n      data = data.map(e => e.trim());\n      if (sortOrder === 'asc') {\n        return data.sort();\n      } else {\n        return data.sort().reverse();\n      }\n    }\n    data.forEach((obj) => {\n      obj[sortField] = obj[sortField].trim();\n    });\n    return orderBy(data, [sortField], [sortOrder]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SplitInitialsPipe.html":{"url":"pipes/SplitInitialsPipe.html","title":"pipe - SplitInitialsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SplitInitialsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/pipes/split-initials/split-initials.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        splitInitials\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/pipes/split-initials/split-initials.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'splitInitials'\n})\nexport class SplitInitialsPipe implements PipeTransform {\n\n  transform(value: string): any {\n    if (value) {\n      let userInitial = '';\n      const name = value.split(' ');\n      name.forEach(element => {\n        userInitial = userInitial + element.charAt(0);\n      });\n      return userInitial;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagAllDiscussionComponent.html":{"url":"components/TagAllDiscussionComponent.html","title":"component - TagAllDiscussionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagAllDiscussionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/tag-all-discussion/tag-all-discussion.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-tag-all-discussion\n            \n\n\n\n            \n                styleUrls\n                ./tag-all-discussion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-all-discussion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                cIds\n                            \n                            \n                                currentActivePage\n                            \n                            \n                                defaultError\n                            \n                            \n                                fetchNewData\n                            \n                            \n                                fetchSingleCategoryLoader\n                            \n                            \n                                getParams\n                            \n                            \n                                pager\n                            \n                            \n                                paginationData\n                            \n                            \n                                paramsSubscription\n                            \n                            \n                                queryParam\n                            \n                            \n                                routeParams\n                            \n                            \n                                similarPosts\n                            \n                            \n                                tagName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchContextBasedTagDetails\n                            \n                            \n                                fetchSingleTagDetails\n                            \n                            \n                                    Public\n                                getBgColor\n                            \n                            \n                                logTelemetry\n                            \n                            \n                                navigateToDiscussionDetails\n                            \n                            \n                                navigateWithPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPagination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                widgetcIds\n                            \n                            \n                                widgetTagName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, discussService: DiscussionService, activatedRoute: ActivatedRoute, configService: ConfigService, telemetryUtils: TelemetryUtilsService, discussUtils: DiscussUtilsService, navigationService: NavigationServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        telemetryUtils\n                                                  \n                                                        \n                                                                        TelemetryUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussUtils\n                                                  \n                                                        \n                                                                        DiscussUtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        widgetcIds\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widgetTagName\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchContextBasedTagDetails\n                        \n                    \n                \n            \n            \n                \nfetchContextBasedTagDetails(tagname: string, cid: any, page?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:92\n                \n            \n\n\n            \n                \n                    Method to fetch the context based discussions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSingleTagDetails\n                        \n                    \n                \n            \n            \n                \nfetchSingleTagDetails(tagname: string, page?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:75\n                \n            \n\n\n            \n                \n                    Method to fetch the tag based discussion\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBgColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBgColor(tagTitle: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagTitle\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { color: any; 'background-color': any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logTelemetry\n                        \n                    \n                \n            \n            \n                \nlogTelemetry(event)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToDiscussionDetails\n                        \n                    \n                \n            \n            \n                \nnavigateToDiscussionDetails(discussionData)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:142\n                \n            \n\n\n            \n                \n                    Method to navigate to the dicussion detail page on click of tag related discussion\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    discussionData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateWithPage\n                        \n                    \n                \n            \n            \n                \nnavigateWithPage(page: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPagination\n                        \n                    \n                \n            \n            \n                \nsetPagination()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentActivePage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Something went wrong, Please try again after sometime!'\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchNewData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSingleCategoryLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        similarPosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/tag-all-discussion/tag-all-discussion.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core'\nimport { NSDiscussData } from '../../models/discuss.model'\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { DiscussionService } from '../../services/discussion.service';\n/* tslint:disable */\nimport _ from 'lodash'\nimport { Subscriber, Subscription } from 'rxjs';\nimport { ConfigService } from '../../services/config.service';\nimport * as CONSTANTS from './../../common/constants.json';\nimport { DiscussUtilsService } from '../../services/discuss-utils.service';\nimport { TelemetryUtilsService } from './../../telemetry-utils.service';\nimport { NavigationServiceService } from '../../navigation-service.service';\n\n@Component({\n  selector: 'lib-tag-all-discussion',\n  templateUrl: './tag-all-discussion.component.html',\n  styleUrls: ['./tag-all-discussion.component.scss']\n})\nexport class TagAllDiscussionComponent implements OnInit {\n  @Input() widgetTagName: any;\n  @Input() widgetcIds: any;\n\n  @Output() stateChange: EventEmitter = new EventEmitter();\n\n  routeParams: any;\n  tagName!: any\n  similarPosts :any[]\n  queryParam: any\n  fetchSingleCategoryLoader = false\n  currentActivePage: 1\n  defaultError = 'Something went wrong, Please try again after sometime!'\n  pager = {}\n  paginationData!: any\n  fetchNewData = false\n  paramsSubscription: Subscription;\n  getParams: any;\n  cIds: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private discussService: DiscussionService, \n    public activatedRoute: ActivatedRoute,\n    private configService: ConfigService,\n    private telemetryUtils: TelemetryUtilsService,\n    private discussUtils: DiscussUtilsService,\n    private navigationService: NavigationServiceService\n  ) { }\n\n  ngOnInit() {\n    // debugger\n    this.cIds = this.widgetcIds? this.widgetcIds: this.configService.getCategories()\n\n    if(this.widgetTagName)\n    {\n      this.tagName = this.widgetTagName;\n    }\n    else\n    {\n      this.activatedRoute.queryParams.subscribe((params) => {\n        this.tagName = params.tagname ? params.tagname: this.tagName\n      })\n    }\n    \n    // To check wheather any contexts are there or not from the config service\n    if (this.configService.hasContext() || this.widgetcIds) {\n      this.fetchContextBasedTagDetails(this.tagName, this.cIds, this.currentActivePage)\n    } else {\n      this.fetchSingleTagDetails(this.tagName, this.currentActivePage)\n    }\n\n  }\n\n  /**Method to fetch the tag based discussion */\n  fetchSingleTagDetails(tagname: string, page?: any) {\n    this.fetchSingleCategoryLoader = true\n    this.discussService.getTagBasedDiscussion(tagname).subscribe(\n      (data: NSDiscussData.IDiscussionData) => {\n        this.similarPosts = data.topics\n        this.paginationData = data.pagination\n        this.fetchSingleCategoryLoader = false\n        this.setPagination()\n      },\n      (err: any) => {\n        console.error('Error in fetching single tag details', err)\n        // this.openSnackbar(err.error.message.split('|')[1] || this.defaultError)\n        this.fetchSingleCategoryLoader = false\n      })\n  }\n\n  /** Method to fetch the context based discussions */\n  fetchContextBasedTagDetails(tagname: string, cid: any, page?: any) {\n    this.fetchSingleCategoryLoader = true\n    const req = {\n      cid: cid.result,\n      tag: tagname\n    };\n\n    this.discussService.getContextBasedTagDiscussion(req).subscribe(\n      (data: NSDiscussData.IDiscussionData) => {\n        this.similarPosts = data.result\n        // this.paginationData = data.pagination\n        this.fetchSingleCategoryLoader = false\n        this.setPagination()\n      },\n      (err: any) => {\n        console.error('Error in fetching context based tag details', err)\n        // this.openSnackbar(err.error.message.split('|')[1] || this.defaultError)\n        this.fetchSingleCategoryLoader = false\n      })\n  }\n\n\n  // TODO : for pagination\n  // getNextData(tagname: string, page: any) {\n  //   return this.discussService.fetchNextTagD(tagname, page).subscribe(\n  //     (data: any) => {\n  //       this.paginationData = data.pagination\n  //       this.setPagination()\n  //       this.similarPosts = _.get(data, 'topics')\n  //     })\n  // }\n\n  setPagination() {\n    this.pager = {\n      startIndex: this.paginationData.first.page,\n      endIndex: this.paginationData.last.page,\n      pages: this.paginationData.pages,\n      currentPage: this.paginationData.currentPage,\n      totalPage: this.paginationData.pageCount,\n    }\n  }\n\n  navigateWithPage(page: any) {\n    if (page !== this.currentActivePage) {\n      this.fetchNewData = true\n      this.router.navigate([`${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.TAG}tag-discussions`], { queryParams: { page, tagname: this.queryParam },  queryParamsHandling: \"merge\"  });\n    }\n  }\n\n  /** Method to navigate to the dicussion detail page on click of tag related discussion */\n  navigateToDiscussionDetails(discussionData) {\n    const matchedTopic = _.find(this.telemetryUtils.getContext(), { type: 'Topic' });\n    if (matchedTopic) {\n      this.telemetryUtils.deleteContext(matchedTopic);\n    }\n\n    this.telemetryUtils.uppendContext({\n      id: _.get(discussionData, 'tid'),\n      type: 'Topic'\n    });\n\n    let slug = _.trim(_.get(discussionData, 'slug'))\n    let input = { data: { url: `${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.TOPIC}${slug}`, queryParams: {} }, action: CONSTANTS.CATEGORY_DETAILS, }\n    this.navigationService.navigate(input)\n    this.stateChange.emit({ action: CONSTANTS.CATEGORY_DETAILS, title: discussionData.title, tid: discussionData.tid })\n\n    // this.router.navigate([`${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.TOPIC}${_.trim(_.get(discussionData, 'slug'))}`], { queryParamsHandling: \"merge\" });\n  }\n\n  logTelemetry(event) {\n    this.telemetryUtils.logInteract(event, NSDiscussData.IPageName.HOME);\n  }\n\n  // TODO: add refershdata function\n  // refreshData(tagname: string, page: any) {\n  //   if (this.fetchNewData) {\n  //     // this.getNextData(tagname, page)\n  //   }\n  // }\n\n  // for tag color\n  public getBgColor(tagTitle: any) {\n    const bgColor = this.discussUtils.stringToColor(tagTitle.toLowerCase());\n    const color = this.discussUtils.getContrast();\n    return { color, 'background-color': bgColor };\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{tagName}}\n    \n    \n        &nbsp;\n    \n    \n        \n            \n\n             0\">\n                \n                    \n                \n            \n             0)\">\n                 \n                    No Data\n                    \n                        &nbsp;\n                    \n                \n            \n        \n    \n    \n        \n     -->\n\n    \n\n    \n                \n                    ./tag-all-discussion.component.scss\n                \n                .flex.flex-5 {\n    flex-direction: column;\n}\n\n.tagtitle {\n    margin: 0 0.25rem;\n    padding: 0.25rem 1rem;\n    min-width: 3.125rem;\n    justify-content: center;\n    border-radius: 1.25rem 0.25rem 0.25rem 1.25rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tagName}}                                                          0\">                                                                             0)\">                                     No Data                                                                                                                          -->'\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagAllDiscussionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsWidgetComponent.html":{"url":"components/TagsWidgetComponent.html","title":"component - TagsWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagsWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/wrapper/tags-widget/tags-widget.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWrapperComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sb-tags-widget\n            \n\n\n\n            \n                styleUrls\n                ./tags-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tags-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tagName\n                            \n                            \n                                tags\n                            \n                            \n                                tagsAll\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                wrapperEventListener\n                            \n                            \n                                wrapperInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configSvc: ConfigService, discussionService: DiscussionService, navigationServiceService: NavigationServiceService, eventService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/wrapper/tags-widget/tags-widget.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configSvc\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discussionService\n                                                  \n                                                        \n                                                                        DiscussionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationServiceService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         IdiscussionConfig\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseWrapperComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWrapperComponent:17\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        wrapperEventListener\n                        \n                    \n                \n            \n            \n                \nwrapperEventListener(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseWrapperComponent\n\n                \n            \n            \n                \n                        Defined in         BaseWrapperComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wrapperInit\n                        \n                    \n                \n            \n            \n                \nwrapperInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseWrapperComponent\n\n                \n            \n            \n                \n                        Defined in         BaseWrapperComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseWrapperComponent\n\n                \n            \n            \n                \n                        Defined in         BaseWrapperComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tagName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/tags-widget/tags-widget.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : CONSTANTS.TAGS\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/tags-widget/tags-widget.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : CONSTANTS.TAGSALL\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper/tags-widget/tags-widget.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseWrapperComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseWrapperComponent:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../../events.service';\nimport { NavigationServiceService } from '../../navigation-service.service';\nimport { ConfigService } from '../../services/config.service';\nimport { DiscussionService } from '../../services/discussion.service';\nimport { BaseWrapperComponent } from '../base-wrapper/base-wrapper.component';\nimport * as CONSTANTS from '../../common/constants.json';\n\n@Component({\n  selector: 'sb-tags-widget',\n  templateUrl: './tags-widget.component.html',\n  styleUrls: ['./tags-widget.component.css']\n})\nexport class TagsWidgetComponent extends BaseWrapperComponent {\n\n  tags: string = CONSTANTS.TAGS\n  tagsAll: string = CONSTANTS.TAGSALL\n  tagName: string\n\n  constructor(configSvc: ConfigService, discussionService: DiscussionService, navigationServiceService: NavigationServiceService, eventService: EventsService) {\n    super(navigationServiceService, eventService, configSvc, discussionService)\n  }\n\n  wrapperInit() {\n    this.state = this.tags\n  }\n\n  wrapperEventListener(data) {\n    // if (data.action === this.tags || data.action === this.tagName) {\n    //   this.state = data.action\n    // }\n    this.tagName = data.tagName\n  }\n\n}\n\n    \n\n    \n        \n    \n     -->\n    \n     -->\n\n    \n\n    \n                \n                    ./tags-widget.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         -->         -->'\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagsWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TelemetryUtilsService.html":{"url":"injectables/TelemetryUtilsService.html","title":"injectable - TelemetryUtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TelemetryUtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/telemetry-utils.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _context\n                            \n                            \n                                currentObj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteContext\n                            \n                            \n                                getContext\n                            \n                            \n                                getRollUp\n                            \n                            \n                                logImpression\n                            \n                            \n                                logInteract\n                            \n                            \n                                setContext\n                            \n                            \n                                uppendContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discussionEvents: DiscussionEventsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/lib/telemetry-utils.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discussionEvents\n                                                  \n                                                        \n                                                                        DiscussionEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContext\n                        \n                    \n                \n            \n            \n                \ndeleteContext(prevTopic)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prevTopic\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContext\n                        \n                    \n                \n            \n            \n                \ngetContext()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRollUp\n                        \n                    \n                \n            \n            \n                \ngetRollUp()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logImpression\n                        \n                    \n                \n            \n            \n                \nlogImpression(pageId)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInteract\n                        \n                    \n                \n            \n            \n                \nlogInteract(event, pageId)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContext\n                        \n                    \n                \n            \n            \n                \nsetContext(context)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uppendContext\n                        \n                    \n                \n            \n            \n                \nuppendContext(data)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/telemetry-utils.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/telemetry-utils.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/lib/telemetry-utils.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DiscussionEventsService } from './discussion-events.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\ninterface ITelemetryObj {\n  eid: string,\n  edata: {},\n  context?: {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryUtilsService {\n\n  _context = []\n  currentObj = {};\n\n  constructor(\n    private discussionEvents: DiscussionEventsService,\n    private router: Router\n  ) { }\n\n  setContext(context) {\n    this._context = context;\n    this.currentObj = _.last(context);\n  }\n\n  uppendContext(data) {\n    const matchedC = _.find(this._context, { id: data.id });\n    if (!_.isEmpty(data) && !_.isEqual(data, matchedC)) {\n      this._context.push(data);\n    }\n    this.currentObj = _.last(this._context);\n  }\n\n  deleteContext(prevTopic) {\n    const topic = _.find(this._context, prevTopic);\n    if (topic) {\n      this._context = _.reject(this._context, topic);\n    }\n  }\n\n  getContext() {\n    return this._context;\n  }\n\n  logImpression(pageId) {\n    this.discussionEvents.emitTelemetry({});\n    const impressionEvent: ITelemetryObj = {\n      eid: 'IMPRESSION',\n      edata: {\n        type: 'view',\n        pageid: pageId,\n        uri: this.router.url\n      }\n    }\n    if (this.currentObj) {\n      impressionEvent.context = { cdata: [{\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type') }\n      ]};\n    }\n    this.discussionEvents.emitTelemetry(impressionEvent);\n  }\n\n  logInteract(event, pageId) {\n    const target = _.get(event, 'currentTarget.attributes.id') ||  _.get(event, 'target.attributes.id') ||\n     _.get(event, 'srcElement.attributes.id');\n    const interactEvent: ITelemetryObj = {\n      eid: 'INTERACT',\n      edata: {\n        id: _.get(target, 'value') || _.get(event, 'action'),\n        type: 'CLICK',\n        pageid: pageId\n      }\n    };\n\n    if (this.currentObj) {\n      const object = {\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type'),\n        ver: '1'\n      };\n      object['rollup'] = this._context.length > 1 ?  this.getRollUp() : {};\n      interactEvent.context = {\n        cdata: [{\n          id: _.get(this.currentObj, 'id').toString(),\n          type: _.get(this.currentObj, 'type')\n        }], object\n      };\n    }\n\n    this.discussionEvents.emitTelemetry(interactEvent);\n  }\n\n  getRollUp() {\n\n      const rollUp = {};\n      const data = _.reject(this._context, this.currentObj);\n\n      if (this._context.length > 1) {\n        data.forEach((element, index) => {\n          console.log('rollup', element);\n          rollUp['l' + (index + 1)] = element.toString();\n        });\n      }\n\n      if (_.get(this.currentObj, 'type') !== 'Post') {\n        return rollUp;\n      }\n\n      return {};\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrendingTagsComponent.html":{"url":"components/TrendingTagsComponent.html","title":"component - TrendingTagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrendingTagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/trending-tags/trending-tags.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-discuss-trending-tags\n            \n\n\n\n            \n                styleUrls\n                ./trending-tags.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trending-tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                max\n                            \n                            \n                                queryParam\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                trandingTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                css\n                            \n                            \n                                getAllDiscussions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, configService: ConfigService, navigationService: NavigationServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/trending-tags/trending-tags.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tags\n                    \n                \n                \n                    \n                        Type :         NSDiscussData.ITag[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/trending-tags/trending-tags.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/trending-tags/trending-tags.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        css\n                        \n                    \n                \n            \n            \n                \ncss()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/trending-tags/trending-tags.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDiscussions\n                        \n                    \n                \n            \n            \n                \ngetAllDiscussions(tag: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/trending-tags/trending-tags.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(data: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/trending-tags/trending-tags.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/components/trending-tags/trending-tags.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/trending-tags/trending-tags.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/trending-tags/trending-tags.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/trending-tags/trending-tags.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trandingTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NSDiscussData.ITag[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/components/trending-tags/trending-tags.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { NSDiscussData } from '../../models/discuss.model';\n/* tslint:disable */\nimport _ from 'lodash'\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../services/config.service';\nimport * as CONSTANTS from './../../common/constants.json';\nimport { NavigationServiceService } from '../../navigation-service.service'\n\n/* tslint:enable */\n@Component({\n  selector: 'lib-discuss-trending-tags',\n  templateUrl: './trending-tags.component.html',\n  styleUrls: ['./trending-tags.component.scss'],\n})\nexport class TrendingTagsComponent implements OnInit, OnChanges {\n  @Input() tags!: NSDiscussData.ITag[];\n  @Output() stateChange: EventEmitter = new EventEmitter();\n\n  max = 0;\n  trandingTags!: NSDiscussData.ITag[];\n  queryParam: any;\n  constructor(\n    public router: Router,\n    private configService: ConfigService,\n    private navigationService: NavigationServiceService\n  ) {\n\n  }\n  ngOnInit(): void {\n    // debugger\n    this.max = _.get(_.maxBy(this.tags, 'score'), 'score') || 0;\n    this.trandingTags = _.chain(this.tags).orderBy('score', 'desc').take(5).value();\n  }\n\n  ngOnChanges(data: SimpleChanges) {\n    // debugger\n    // this.tableData!.columns = data.tableData.currentValue.columns\n    this.tags = _.get(data, 'tags.currentValue')\n    this.max = _.get(_.maxBy(this.tags, 'score'), 'score') || 0;\n    this.trandingTags = _.chain(this.tags).orderBy('score', 'desc').take(5).value();\n  }\n\n  // TODO: To enable trending tags click and navigate to tags detals page\n  getAllDiscussions(tag: { value: any }) {\n    // debugger\n    this.queryParam = tag.value;\n    const tagdata = {\n      tagname: ''\n    };\n    tagdata.tagname = tag.value;\n    this.queryParam = tagdata;\n    const routerSlug = this.configService.getConfig().routerSlug ? this.configService.getConfig().routerSlug : '';\n    const input = { data: { url: `${routerSlug}${CONSTANTS.ROUTES.TAG}tag-discussions`,\n    queryParams: this.queryParam, tagName: this.queryParam.tagName }, action: 'tagsAll'};\n    this.navigationService.navigate(input);\n    this.stateChange.emit({ action: CONSTANTS.TAG_ALL_DISCUSS, title: tag.value, tid: 'sd' });\n\n    // tslint:disable-next-line: max-line-length\n    // this.router.navigate([`${this.configService.getRouterSlug()}${CONSTANTS.ROUTES.TAG}tag-discussions`], { queryParams: this.queryParam });\n  }\n\n  css() {\n    // return 'linear - gradient(to left, #00ff00 \" + 80 + \" %, #ff0000 20 %)\"\n  }\n}\n    \n\n    \n        \n    Trending tags\n     0\">\n      \n        {{tag.value}}\n        {{tag.score}}\n      \n    \n  \n\n   \n    Updates\n    \n\n      \n        \n          1 Upvote on your question\n        \n        \n          What is the most reliable and useful source for COVID related ..\n        \n      \n\n      \n        \n          @sundaramraj answered your question\n        \n        \n          I think the solution to such a problem would be to extensively..\n        \n      \n\n      \n        \n          1 Upvote on your question\n        \n        \n          What is the most reliable and useful source for COVID related ..\n        \n      \n\n      \n        ALL UPDATES\n      \n\n    \n  \n    \n\n    \n                \n                    ./trending-tags.component.scss\n                \n                @import '../../../../assets/styles/global.scss';\n\n.tag {\n  display: flex;\n  width: 17.25rem;\n  height: 2rem;\n  border-radius: 0.25rem;\n  justify-content: space-between;\n  // margin: $size-m 0;\n  margin:0.5rem 0;\n  // background-color: red;\n  align-items: center;\n  box-sizing: border-box;\n\n  // @include breakpoint-xs {\n  //   width: auto;\n\n  // }\n\n  // @include breakpoint-s {\n  //   width: auto;\n\n  // }\n}\n\n.custom-margin {\n  margin-top: auto !important;\n  margin-bottom: auto !important;\n}\n\n// .progress {\n//   background: #000000;\n//   border-radius: 13px;\n//   /* (height of inner div) / 2 + padding */\n//   // padding: 3px;\n// }\n\n// .progress::after {\n//   content: '';\n//   position: fixed;\n//   height: 100%;\n//   width: 50%;\n//   left: 50%;\n//   background: #116699\n// }\n\n\n@media (max-width: 768px) {\n  .right_tag_inner_box {\n      width: 100%;\n      margin-left: 0!important;\n  }\n}\n\n\n.update_box {\n  box-sizing: border-box;\n  margin-top: 2rem;\n  display: none;\n\n  .update_inner_box {\n    box-sizing: border-box;\n    margin-top: 1rem;\n\n    .update_card {\n      box-sizing: border-box;\n\n      .card_head {\n\n        p.blue_heading {\n          color: var(--primary);\n          margin-bottom: 0.5rem;\n        }\n      }\n\n      // .card_body {\n      //   width: 100%;\n      // }\n\n     \n    }\n\n    .update_btn_box {\n      width: 100%;\n      margin-top: 0.5rem;\n\n      a.all_update_link {\n        width: 100%;\n        padding: 0.5rem 0;\n        text-align: center;\n        color: var(--primary);\n        border-radius: 0.25rem;\n        border: 0.0625rem solid var(--black);\n      }\n    }\n    \n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Trending tags     0\">              {{tag.value}}        {{tag.score}}                   Updates                            1 Upvote on your question                          What is the most reliable and useful source for COVID related ..                                      @sundaramraj answered your question                          I think the solution to such a problem would be to extensively..                                      1 Upvote on your question                          What is the most reliable and useful source for COVID related ..                            ALL UPDATES            '\n    var COMPONENTS = [{'name': 'AppLoaderComponent', 'selector': 'lib-app-loader'},{'name': 'AvatarPhotoComponent', 'selector': 'lib-avatar-photo'},{'name': 'BaseWrapperComponent', 'selector': 'sb-base-wrapper'},{'name': 'CategoryCardComponent', 'selector': 'lib-category-card'},{'name': 'CategoryWidgetComponent', 'selector': 'sb-category-widget'},{'name': 'DiscussAllComponent', 'selector': 'lib-discuss-all'},{'name': 'DiscussCardComponent', 'selector': 'lib-discuss-card'},{'name': 'DiscussCategoryComponent', 'selector': 'lib-discuss-category'},{'name': 'DiscussHomeComponent', 'selector': 'lib-discuss-home'},{'name': 'DiscussionDetailsComponent', 'selector': 'lib-discussion-details'},{'name': 'DiscussStartComponent', 'selector': 'lib-discuss-start'},{'name': 'DiscussTagsComponent', 'selector': 'lib-discuss-tags'},{'name': 'LibEntryComponent', 'selector': 'lib-lib-entry'},{'name': 'LoadAlertComponent', 'selector': 'lib-load-alert'},{'name': 'MyDiscussionComponent', 'selector': 'lib-my-discussion'},{'name': 'PostReplyComponent', 'selector': 'lib-post-reply'},{'name': 'RelatedDiscussionComponent', 'selector': 'lib-related-discussion'},{'name': 'SidePannelComponent', 'selector': 'lib-side-pannel'},{'name': 'SlidersComponent', 'selector': 'ws-widget-sliders'},{'name': 'TagAllDiscussionComponent', 'selector': 'lib-tag-all-discussion'},{'name': 'TagsWidgetComponent', 'selector': 'sb-tags-widget'},{'name': 'TrendingTagsComponent', 'selector': 'lib-discuss-trending-tags'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrendingTagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WrapperNavigateService.html":{"url":"injectables/WrapperNavigateService.html","title":"injectable - WrapperNavigateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WrapperNavigateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/wrapper-navigate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeSideNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_eventService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/wrapper-navigate.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _eventService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(input)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/wrapper-navigate.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSideNav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/lib/wrapper-navigate.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventEmitter } from 'events';\nimport { EventsService } from './events.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n//TODO: Need to cleanup this service since we are not gonna use\nexport class WrapperNavigateService {\n\n  closeSideNav = new EventEmitter()\n\n  constructor(private _eventService: EventsService) { }\n\n  navigate(input){ \n  //  this._eventService.toggle(input)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.3.0\n        \n            @angular/core : ^14.3.0\n        \n            @project-sunbird/client-services : 5.1.2\n        \n            lodash-es : ^4.17.20\n        \n            ngx-chips : >=2.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IPageName   (src/.../discuss.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/discuss.model.ts\n    \n        \n            \n                \n                    \n                        \n                        IPageName\n                    \n                \n                        \n                            \n                                 HOME\n                            \n                        \n                        \n                            \n                                Value : discussion-home\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : discussion-start\n                            \n                        \n                        \n                            \n                                 DETAILS\n                            \n                        \n                        \n                            \n                                Value : discussion-details\n                            \n                        \n                        \n                            \n                                 CATEGORY\n                            \n                        \n                        \n                            \n                                Value : discussion-category\n                            \n                        \n                        \n                            \n                                 TAGS\n                            \n                        \n                        \n                            \n                                Value : discussion-category\n                            \n                        \n                        \n                            \n                                 MY_DISCUSSION\n                            \n                        \n                        \n                            \n                                Value : my-discussion\n                            \n                        \n                        \n                            \n                                 LIB_ENTRY\n                            \n                        \n                        \n                            \n                                Value : lib-entry\n                            \n                        \n                        \n                            \n                                 LOAD_ALERT\n                            \n                        \n                        \n                            \n                                Value : load-alert\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            provideCsModule   (src/.../discussion-ui.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/discussion-ui.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideCsModule\n                        \n                    \n                \n            \n            \n                \nprovideCsModule()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDiscussionUi\nThis library was generated with Angular CLI version 7.2.0.\nCode scaffolding\nRun ng generate component component-name --project discussion-ui to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module --project discussion-ui.\n\nNote: Don't forget to add --project discussion-ui or else it will be added to the default project in your angular.json file. \n\nBuild\nRun ng build discussion-ui to build the project. The build artifacts will be stored in the dist/ directory.\nPublishing\nAfter building your library with ng build discussion-ui, go to the dist folder cd dist/discussion-ui and run npm publish.\nRunning unit tests\nRun ng test discussion-ui to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscussionRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DiscussionUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ElementsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_imports\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_ComponentsModule_providers\n\n\n\ncluster_DiscussionUiModule\n\n\n\ncluster_DiscussionUiModule_declarations\n\n\n\ncluster_DiscussionUiModule_imports\n\n\n\ncluster_DiscussionUiModule_exports\n\n\n\ncluster_DiscussionUiModule_providers\n\n\n\ncluster_ElementsModule\n\n\n\ncluster_ElementsModule_declarations\n\n\n\ncluster_ElementsModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nDiscussAllComponent\n\nDiscussAllComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nDiscussAllComponent->ComponentsModule\n\n\n\n\n\nDiscussCategoryComponent\n\nDiscussCategoryComponent\n\nComponentsModule -->\n\nDiscussCategoryComponent->ComponentsModule\n\n\n\n\n\nDiscussHomeComponent\n\nDiscussHomeComponent\n\nComponentsModule -->\n\nDiscussHomeComponent->ComponentsModule\n\n\n\n\n\nDiscussStartComponent\n\nDiscussStartComponent\n\nComponentsModule -->\n\nDiscussStartComponent->ComponentsModule\n\n\n\n\n\nDiscussTagsComponent\n\nDiscussTagsComponent\n\nComponentsModule -->\n\nDiscussTagsComponent->ComponentsModule\n\n\n\n\n\nDiscussionDetailsComponent\n\nDiscussionDetailsComponent\n\nComponentsModule -->\n\nDiscussionDetailsComponent->ComponentsModule\n\n\n\n\n\nMyDiscussionComponent\n\nMyDiscussionComponent\n\nComponentsModule -->\n\nMyDiscussionComponent->ComponentsModule\n\n\n\n\n\nSidePannelComponent\n\nSidePannelComponent\n\nComponentsModule -->\n\nSidePannelComponent->ComponentsModule\n\n\n\n\n\nTagAllDiscussionComponent\n\nTagAllDiscussionComponent\n\nComponentsModule -->\n\nTagAllDiscussionComponent->ComponentsModule\n\n\n\n\n\nTrendingTagsComponent\n\nTrendingTagsComponent\n\nComponentsModule -->\n\nTrendingTagsComponent->ComponentsModule\n\n\n\n\n\nDiscussAllComponent \n\nDiscussAllComponent \n\nDiscussAllComponent  -->\n\nComponentsModule->DiscussAllComponent \n\n\n\n\n\nDiscussCategoryComponent \n\nDiscussCategoryComponent \n\nDiscussCategoryComponent  -->\n\nComponentsModule->DiscussCategoryComponent \n\n\n\n\n\nDiscussHomeComponent \n\nDiscussHomeComponent \n\nDiscussHomeComponent  -->\n\nComponentsModule->DiscussHomeComponent \n\n\n\n\n\nDiscussStartComponent \n\nDiscussStartComponent \n\nDiscussStartComponent  -->\n\nComponentsModule->DiscussStartComponent \n\n\n\n\n\nDiscussTagsComponent \n\nDiscussTagsComponent \n\nDiscussTagsComponent  -->\n\nComponentsModule->DiscussTagsComponent \n\n\n\n\n\nDiscussionDetailsComponent \n\nDiscussionDetailsComponent \n\nDiscussionDetailsComponent  -->\n\nComponentsModule->DiscussionDetailsComponent \n\n\n\n\n\nMyDiscussionComponent \n\nMyDiscussionComponent \n\nMyDiscussionComponent  -->\n\nComponentsModule->MyDiscussionComponent \n\n\n\n\n\nSidePannelComponent \n\nSidePannelComponent \n\nSidePannelComponent  -->\n\nComponentsModule->SidePannelComponent \n\n\n\n\n\nTagAllDiscussionComponent \n\nTagAllDiscussionComponent \n\nTagAllDiscussionComponent  -->\n\nComponentsModule->TagAllDiscussionComponent \n\n\n\n\n\nTrendingTagsComponent \n\nTrendingTagsComponent \n\nTrendingTagsComponent  -->\n\nComponentsModule->TrendingTagsComponent \n\n\n\n\n\nElementsModule\n\nElementsModule\n\nComponentsModule -->\n\nElementsModule->ComponentsModule\n\n\n\n\n\nDiscussionUiModule\n\nDiscussionUiModule\n\nDiscussionUiModule -->\n\nElementsModule->DiscussionUiModule\n\n\n\n\n\nAppLoaderComponent \n\nAppLoaderComponent \n\nAppLoaderComponent  -->\n\nElementsModule->AppLoaderComponent \n\n\n\nAppLoaderComponent  -->\n\nElementsModule->AppLoaderComponent \n\n\n\n\n\nAvatarPhotoComponent \n\nAvatarPhotoComponent \n\nAvatarPhotoComponent  -->\n\nElementsModule->AvatarPhotoComponent \n\n\n\n\n\nCategoryCardComponent \n\nCategoryCardComponent \n\nCategoryCardComponent  -->\n\nElementsModule->CategoryCardComponent \n\n\n\n\n\nDiscussCardComponent \n\nDiscussCardComponent \n\nDiscussCardComponent  -->\n\nElementsModule->DiscussCardComponent \n\n\n\n\n\nLoadAlertComponent \n\nLoadAlertComponent \n\nLoadAlertComponent  -->\n\nElementsModule->LoadAlertComponent \n\n\n\n\n\nPostReplyComponent \n\nPostReplyComponent \n\nPostReplyComponent  -->\n\nElementsModule->PostReplyComponent \n\n\n\n\n\nRelatedDiscussionComponent \n\nRelatedDiscussionComponent \n\nRelatedDiscussionComponent  -->\n\nElementsModule->RelatedDiscussionComponent \n\n\n\n\n\nSlidersComponent \n\nSlidersComponent \n\nSlidersComponent  -->\n\nElementsModule->SlidersComponent \n\n\n\n\n\nConfigService\n\nConfigService\n\nComponentsModule -->\n\nConfigService->ComponentsModule\n\n\n\n\n\nDiscussionService\n\nDiscussionService\n\nComponentsModule -->\n\nDiscussionService->ComponentsModule\n\n\n\n\n\nBaseWrapperComponent\n\nBaseWrapperComponent\n\nDiscussionUiModule -->\n\nBaseWrapperComponent->DiscussionUiModule\n\n\n\n\n\nCategoryWidgetComponent\n\nCategoryWidgetComponent\n\nDiscussionUiModule -->\n\nCategoryWidgetComponent->DiscussionUiModule\n\n\n\n\n\nLibEntryComponent\n\nLibEntryComponent\n\nDiscussionUiModule -->\n\nLibEntryComponent->DiscussionUiModule\n\n\n\n\n\nTagsWidgetComponent\n\nTagsWidgetComponent\n\nDiscussionUiModule -->\n\nTagsWidgetComponent->DiscussionUiModule\n\n\n\n\n\nBaseWrapperComponent \n\nBaseWrapperComponent \n\nBaseWrapperComponent  -->\n\nDiscussionUiModule->BaseWrapperComponent \n\n\n\n\n\nCategoryWidgetComponent \n\nCategoryWidgetComponent \n\nCategoryWidgetComponent  -->\n\nDiscussionUiModule->CategoryWidgetComponent \n\n\n\n\n\nTagsWidgetComponent \n\nTagsWidgetComponent \n\nTagsWidgetComponent  -->\n\nDiscussionUiModule->TagsWidgetComponent \n\n\n\n\n\nDiscussionRoutingModule\n\nDiscussionRoutingModule\n\nDiscussionUiModule -->\n\nDiscussionRoutingModule->DiscussionUiModule\n\n\n\n\n\nDiscussionEventsService\n\nDiscussionEventsService\n\nDiscussionUiModule -->\n\nDiscussionEventsService->DiscussionUiModule\n\n\n\n\n\nTelemetryUtilsService\n\nTelemetryUtilsService\n\nDiscussionUiModule -->\n\nTelemetryUtilsService->DiscussionUiModule\n\n\n\n\n\nAppLoaderComponent\n\nAppLoaderComponent\n\nElementsModule -->\n\nAppLoaderComponent->ElementsModule\n\n\n\n\n\nAvatarPhotoComponent\n\nAvatarPhotoComponent\n\nElementsModule -->\n\nAvatarPhotoComponent->ElementsModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nElementsModule -->\n\nCategoryCardComponent->ElementsModule\n\n\n\n\n\nDiscussCardComponent\n\nDiscussCardComponent\n\nElementsModule -->\n\nDiscussCardComponent->ElementsModule\n\n\n\n\n\nLoadAlertComponent\n\nLoadAlertComponent\n\nElementsModule -->\n\nLoadAlertComponent->ElementsModule\n\n\n\n\n\nPostReplyComponent\n\nPostReplyComponent\n\nElementsModule -->\n\nPostReplyComponent->ElementsModule\n\n\n\n\n\nRelatedDiscussionComponent\n\nRelatedDiscussionComponent\n\nElementsModule -->\n\nRelatedDiscussionComponent->ElementsModule\n\n\n\n\n\nSlidersComponent\n\nSlidersComponent\n\nElementsModule -->\n\nSlidersComponent->ElementsModule\n\n\n\n\n\nPipeFilterPipe\n\nPipeFilterPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nPipeFilterPipe->PipesModule\n\n\n\n\n\nPipeListFilterPipe\n\nPipeListFilterPipe\n\nPipesModule -->\n\nPipeListFilterPipe->PipesModule\n\n\n\n\n\nPipeRelativeTimePipe\n\nPipeRelativeTimePipe\n\nPipesModule -->\n\nPipeRelativeTimePipe->PipesModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nPipesModule -->\n\nSortByPipe->PipesModule\n\n\n\n\n\nSplitInitialsPipe\n\nSplitInitialsPipe\n\nPipesModule -->\n\nSplitInitialsPipe->PipesModule\n\n\n\n\n\nPipeFilterPipe \n\nPipeFilterPipe \n\nPipeFilterPipe  -->\n\nPipesModule->PipeFilterPipe \n\n\n\n\n\nPipeListFilterPipe \n\nPipeListFilterPipe \n\nPipeListFilterPipe  -->\n\nPipesModule->PipeListFilterPipe \n\n\n\n\n\nPipeRelativeTimePipe \n\nPipeRelativeTimePipe \n\nPipeRelativeTimePipe  -->\n\nPipesModule->PipeRelativeTimePipe \n\n\n\n\n\nSortByPipe \n\nSortByPipe \n\nSortByPipe  -->\n\nPipesModule->SortByPipe \n\n\n\n\n\nSplitInitialsPipe \n\nSplitInitialsPipe \n\nSplitInitialsPipe  -->\n\nPipesModule->SplitInitialsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 5.3.0-beta.1\n        \n            Description : This library was generated with [Angular CLI](https://github.com/angular/angular-cli) version 7.2.0.\n        \n            Keywords : angular, components, sunbird\n        \n            Homepage : https://github.com/Sunbird-Ed/discussions-UI.git#readme\n        \n            Bugs : https://github.com/Sunbird-Ed/discussions-UI/issues\n        \n            License : ISC\n        \n            Repository : git+https://github.com/Sunbird-Ed/discussions-UI.git\n        \n            Author : Vinu Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTEXT_PROPS   (src/.../discussion.service.ts)\n                        \n                        \n                            MSGS   (src/.../discussion-details.component.ts)\n                        \n                        \n                            urlConfig   (src/.../url.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/services/discussion.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONTEXT_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  cid: 'cid',\n  tid: 'tid',\n  uid: 'uid'\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/components/discussion-details/discussion-details.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MSGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  deletePost: `Are you sure you want to delete this Post? This can't be undone.`,\n  deleteTopic: `Are you sure you want to delete this topic? Your action cannot be undone.`\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/config/url.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        urlConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    // endpoint configs...!\n    host: 'http://localhost:3002',\n    // host: 'https://dev.sunbirded.org',\n    apiSlug: '/discussion',\n    apiBasePath: () => `${urlConfig.host}${urlConfig.apiSlug}`,\n\n    // URLs...!\n    getAllCategories: () => `${urlConfig.apiBasePath()}/categories`,\n    getSingleCategoryDetails: (cid: number) => `${urlConfig.apiBasePath()}/category/${cid}`,\n    getAllTags: () => `${urlConfig.apiBasePath()}/tags`,\n    getTagBasedDiscussion: (tag: string) => `${urlConfig.apiBasePath()}/tags/${tag}`,\n    createPost: () => `${urlConfig.apiBasePath()}/v2/topics`,\n    votePost: (pid: number) => `${urlConfig.apiBasePath()}/v2/posts/${pid}/vote`,\n    replyPost: (tid: number) => `${urlConfig.apiBasePath()}/v2/topics/${tid}`,\n    bookmarkPost: (pid: number) => `${urlConfig.apiBasePath()}/v2/posts/${pid}/bookmark`,\n    recentPost: () => `${urlConfig.apiBasePath()}/recent`,\n    popularPost: () => `${urlConfig.apiBasePath()}/popular`,\n    unread: () => `${urlConfig.apiBasePath()}/topics/unread/total`,\n    getTopic: () => `${urlConfig.apiBasePath()}/topic`,\n    profile: () => `${urlConfig.apiBasePath()}/users/me`,\n    fetchProfile: (slug: string) => `${urlConfig.apiBasePath()}/users/${slug}/about`,\n    listUpVote: (slug: string) => `${urlConfig.apiBasePath()}/user/${slug}/upvoted`,\n    listDownVoted: (slug: string) => `${urlConfig.apiBasePath()}/user/${slug}/downvoted`,\n    listSaved: (slug: string) => `${urlConfig.apiBasePath()}/user/${slug}/bookmarks`,\n    fetchNetworkProfile: `user/profileDetails/getUserRegistry`,\n    userDetails: (username: string) => `${urlConfig.apiBasePath()}/user/${username}`,\n    getContextBasedTopics: (slug: string) => `${urlConfig.apiBasePath()}/category/${slug}`,\n    registerUser: () => `${urlConfig.apiBasePath()}/user/v1/create`,\n    getContextBasedDiscussion: () => `${urlConfig.apiBasePath()}/category/list`,\n    getContextBasedTagDiscussion: () => `${urlConfig.apiBasePath()}/tags/list`\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
